{"version":3,"file":"index.js","sources":["../src/schema/utils.ts","../src/schema/managers/formats.ts","../src/schema/managers/events.ts","../src/schema/services/mounter.ts","../src/schema/services/checker.ts","../src/helpers/object.ts","../src/helpers/string.ts","../src/helpers/index.ts","../src/testers/object/object.ts","../src/testers/string/isAscii.ts","../src/testers/string/isUuid.ts","../src/testers/utils.ts","../src/testers/string/isIp.ts","../src/testers/string/isDomain.ts","../src/testers/string/isEmail.ts","../src/testers/string/isDataUrl.ts","../src/testers/string/isBase.ts","../src/testers/index.ts","../src/schema/services/cloner.ts","../src/schema/formats/undefined/format.ts","../src/schema/formats/function/format.ts","../src/schema/formats/boolean/format.ts","../src/schema/formats/unknown/format.ts","../src/schema/formats/symbol/format.ts","../src/schema/formats/number/format.ts","../src/schema/formats/string/format.ts","../src/schema/formats/object/format.ts","../src/schema/formats/array/format.ts","../src/schema/formats/union/format.ts","../src/schema/formats/null/format.ts","../src/schema/formats/formats.ts","../src/schema/schema.ts","../src/utils.ts","../src/schema/plugin.ts"],"sourcesContent":["import type { SetableCriteria, MountedCriteria } from \"./formats\";\nimport type { NodePath } from \"./services\";\n\nexport class SchemaException extends Error {\n    name = \"SchemaException\";\n\n\tconstructor(message: string) {\n        super(message);\n\t}\n}\n\nexport class SchemaNodeException extends Error {\n    name = \"SchemaNodeException\";\n    /**\n     * Code related to the exception.\n     */\n    public code: string;\n    /**\n     * Node related to the exception.\n     */\n    public node: SetableCriteria;\n    /**\n     * Path of the node related to the rejection.\n     */\n    public nodePath: NodePath;\n\n\tconstructor(\n        code: string,\n        message: string,\n        node: SetableCriteria,\n        nodePath: NodePath\n    ) {\n        super(message);\n\n        this.code = code;\n        this.node = node;\n        this.nodePath = nodePath;\n\t}\n}\n\nexport class SchemaDataRejection {\n    /**\n     * Root of the data to be validated.\n     */\n    public rootData: unknown;\n    /**\n     * Root node used for validation.\n     */\n    public rootNode: MountedCriteria;\n    /**\n     * Label of the root node used for validation.\n     */\n    public rootLabel: string | undefined;\n    /**\n     * Code related to the rejection.\n     */\n    public code: string;\n     /**\n     * Data rejected.\n     */\n    public data: unknown;\n    /**\n     * Node related to the rejection.\n     */\n    public node: MountedCriteria;\n    /**\n     * Path of the node related to the rejection.\n     */\n    public nodePath: NodePath;\n    /**\n     * Label of the  node related to the rejection.\n     */\n    public label: string | undefined;\n    /**\n     * Message of the node related to the rejection.\n     */\n    public message: string | undefined;\n    \n    \n\n\tconstructor(\n        rootData: unknown,\n        rootNode: MountedCriteria,\n        code: string,\n        data: unknown,\n        node: MountedCriteria,\n        nodePath: NodePath,\n    ) {\n        this.rootData = rootData;\n        this.rootNode = rootNode;\n        this.rootLabel = rootNode.label;\n        this.code = code;\n        this.data = data;\n        this.node = node;\n        this.nodePath = nodePath;\n        this.label = node.label;\n\n        if (typeof node.message === \"function\") {\n            this.message = node.message(\n                code, data, node, nodePath\n            );\n        } else {\n            this.message = node.message;\n        }\n\t}\n}\n\nexport class SchemaDataAdmission<GuardedData = unknown> {\n    /**\n     * Root of the validated data.\n     */\n    public data: GuardedData;\n    /**\n     * Root node used for validation.\n     */\n    public node: MountedCriteria;\n    /**\n     * Label of the root node used for validation.\n     */\n    public label: string | undefined;\n\n\tconstructor(\n        data: GuardedData,\n        node: MountedCriteria\n    ) {\n        this.data = data;\n        this.node = node;\n        this.label = node.label;\n\t}\n}","import type { Format, FormatTypes } from '../formats';\nimport { SchemaException } from '../utils';\n\nexport class FormatsManager {\n    private store = new Map<FormatTypes, Format>();\n\n    constructor() {}\n\n    add(formats: Format[]) {\n        for (const format of formats) {\n            this.store.set(format.type, format); \n        }\n    }\n\n    has(type: FormatTypes) {\n        return this.store.has(type);\n    }\n\n    get(type: FormatTypes): Format {\n        const format = this.store.get(type);\n        if (!format) throw new SchemaException(\n            \"The format is unknown : \" + type\n        );\n\n        return (format);\n    }\n}\n","import type { Events } from \"./types\";\n\nexport class EventsManager {\n\tlisteners = new Map<keyof Events, ((...args: any[]) => any)[]>();\n\t\n\tconstructor() {}\n\n\ton<K extends keyof Events>(event: K, callback: Events[K]) {\n\t\tif (!this.listeners.has(event)) {\n\t\t\tthis.listeners.set(event, []);\n\t\t}\n\t\tthis.listeners.get(event)!.push(callback);\n\t}\n\n\temit<K extends keyof Events>(event: K, ...args: Parameters<Events[K]>) {\n\t\tconst callbacks = this.listeners.get(event);\n\t\tif (!callbacks) return;\n\n\t\tfor (const callback of callbacks) {\n\t\t\tcallback(...args);\n\t\t}\n\t}\n\n\toff<K extends keyof Events>(event: K, callback: Events[K]) {\n\t\tconst listeners = this.listeners.get(event);\n\t\tif (!listeners) return;\n\n\t\tconst index = listeners.indexOf(callback);\n\t\tif (index !== -1) listeners.splice(index, 1);\n\t}\n}\n\n\n\n","import type { SetableCriteria, MountedCriteria } from \"../formats\";\nimport type { MounterTask, CommonExceptionCodes, MounterChunkTask } from \"./types\";\nimport type { SchemaInstance } from \"../types\";\nimport { SchemaNodeException } from \"../utils\";\nimport { isPlainObject } from \"../../testers\";\n\nexport const nodeSymbol = Symbol(\"node\");\n\nconst commonExceptions: Record<string, string> = {\n\tTYPE_PROPERTY_UNDEFINED:\n\t\t\"\",\n\tTYPE_PROPERTY_MISDECLARED:\n\t\t\"\",\n\tTYPE_PROPERTY_MISCONFIGURED:\n\t\t\"\",\n\tLABEL_PROPERTY_MISDECLARED:\n\t\t\"\",\n\tMESSAGE_PROPERTY_MISDECLARED:\n\t\t\"\"\n} satisfies Record<CommonExceptionCodes, string>;\n\nfunction commonMount(\n\tmanagers: SchemaInstance['managers'],\n\tnode: SetableCriteria\n): CommonExceptionCodes | null {\n\tconst { type, label, message } = node;\n\n\tif (!(\"type\" in node)) {\n\t\treturn (\"TYPE_PROPERTY_UNDEFINED\");\n\t}\n\tif (typeof type !== \"string\") {\n\t\treturn (\"TYPE_PROPERTY_MISDECLARED\");\n\t}\n\tif (!managers.formats.has(type)) {\n\t\treturn (\"TYPE_PROPERTY_MISCONFIGURED\");\n\t}\n\tif (label !== undefined && typeof label !== \"string\") {\n\t\treturn (\"LABEL_PROPERTY_MISDECLARED\");\n\t}\n\tif (\n\t\tmessage !== undefined\n\t\t&& typeof message !== \"string\"\n\t\t&& typeof message !== \"function\"\n\t) {\n\t\treturn (\"MESSAGE_PROPERTY_MISDECLARED\");\n\t}\n\n\treturn (null);\n}\n\nexport function hasNodeSymbol(obj: object): obj is MountedCriteria {\n\treturn (typeof obj === \"object\" && Reflect.has(obj, nodeSymbol));\n}\n\nexport class MounterStack {\n\ttasks: MounterTask[] = [];\n\n\tconstructor(rootNode: SetableCriteria | MountedCriteria) {\n\t\tthis.tasks.push({\n\t\t\tnode: rootNode,\n\t\t\tpartPath: { explicit: [], implicit: [] },\n\t\t\tnodePath: { explicit: [], implicit: [] }\n\t\t})\n\t}\n\n\tpushChunk(\n\t\tsourceTask: MounterTask,\n\t\tchunk: MounterChunkTask[]\n\t) {\n\t\tconst prevNodePath = sourceTask.nodePath;\n\n\t\tfor (let i = 0; i < chunk.length; i++) {\n\t\t\tconst { node, partPath } = chunk[i];\n\n\t\t\tthis.tasks.push({\n\t\t\t\tnode,\n\t\t\t\tpartPath,\n\t\t\t\tnodePath: {\n\t\t\t\t\texplicit: partPath.explicit\n\t\t\t\t\t\t? prevNodePath.explicit.concat(partPath.explicit)\n\t\t\t\t\t\t: prevNodePath.explicit,\n\t\t\t\t\timplicit: partPath.implicit\n\t\t\t\t\t\t? prevNodePath.implicit.concat(partPath.implicit)\n\t\t\t\t\t\t: prevNodePath.implicit\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n}\n\nexport function mounter<T extends SetableCriteria>(\n\tmanagers: SchemaInstance['managers'],\n\trootNode: SetableCriteria & T\n): MountedCriteria<T> {\n\tconst { formats, events } = managers;\n\tconst stack = new MounterStack(rootNode);\n\n\twhile (stack.tasks.length) {\n\t\tconst currentTask = stack.tasks.pop()!;\n\t\tconst { node, nodePath, partPath } = currentTask;\n\n\t\tif (hasNodeSymbol(node)) {\n\t\t\tnode[nodeSymbol] = {\n\t\t\t\t...node[nodeSymbol],\n\t\t\t\tpartPath\n\t\t\t}\n\t\t} else {\n\t\t\tlet code: string | null = null;\n\n\t\t\tcode = commonMount(managers, node);\n\t\t\tif (code) {\n\t\t\t\tconst message = commonExceptions[code];\n\n\t\t\t\tthrow new SchemaNodeException(\n\t\t\t\t\tcode, message, node, nodePath\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tconst format = formats.get(node.type);\n\t\t\tconst chunkTasks: MounterChunkTask[] = [];\n\n\t\t\tcode = format.mount(chunkTasks, node);\n\t\t\tif (code) {\n\t\t\t\tconst message = format.exceptions[code];\n\n\t\t\t\tthrow new SchemaNodeException(\n\t\t\t\t\tcode, message, node, nodePath\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tObject.assign(node, {\n\t\t\t\t[nodeSymbol]: {\n\t\t\t\t\tpartPath,\n\t\t\t\t\tchildNodes: chunkTasks.map((task) => task.node)\n\t\t\t\t}\n\t\t\t});\n\t\t\tObject.freeze(node);\n\n\t\t\tif (chunkTasks.length) {\n\t\t\t\tstack.pushChunk(currentTask, chunkTasks);\n\t\t\t}\n\n\t\t\tevents.emit(\"NODE_MOUNTED\", node as MountedCriteria, nodePath);\n\t\t}\n\t}\n\n\tevents.emit(\"TREE_MOUNTED\", rootNode as MountedCriteria);\n\n\treturn (rootNode as MountedCriteria<T>);\n};","import type { CheckerTask, CheckerHook, CheckerChunkTask, CheckerRejection, CheckerResult } from \"./types\";\nimport type { MountedCriteria } from \"../formats\";\nimport type { SchemaInstance } from \"../types\";\nimport { SchemaDataRejection, SchemaDataAdmission } from \"../utils\";\nimport { nodeSymbol } from \"./mounter\";\n\nexport class CheckerStack {\n\ttasks: CheckerTask[] = [];\n\thooks: CheckerHook[] = [];\n\n\tconstructor(\n\t\trootNode: MountedCriteria,\n\t\trootData: unknown\n\t) {\n\t\tthis.tasks.push({\n\t\t\tdata: rootData,\n\t\t\tnode: rootNode,\n\t\t\tnodePath: { explicit: [], implicit: [] },\n\t\t\tcloserHook: null\n\t\t});\n\t}\n\n\tpushChunk(\n\t\tsourceTask: CheckerTask,\n\t\tchunk: CheckerChunkTask[]\n\t): void {\n\t\tconst prevCloserHook = sourceTask.closerHook;\n\t\tconst prevNodePath = sourceTask.nodePath;\n\n\t\tconst staskTaskLength = this.tasks.length;\n\t\tconst stackHookLength = this.hooks.length;\n\t\tconst chunkTaskLength = chunk.length;\n\n\t\tlet chunkTaskIndex = 0, chunkHookCount = 0;\n\t\twhile (chunkTaskIndex < chunkTaskLength) {\n\t\t\tconst { data, node, hook } = chunk[chunkTaskIndex];\n\t\t\tconst partPath = node[nodeSymbol].partPath;\n\t\t\tlet closerHook = prevCloserHook;\n\n\t\t\tif (hook) {\n\t\t\t\tcloserHook = {\n\t\t\t\t\t...hook,\n\t\t\t\t\tsourceTask,\n\t\t\t\t\tchunkTaskIndex: staskTaskLength,\n\t\t\t\t\tbranchTaskIndex: staskTaskLength + chunkTaskIndex,\n\t\t\t\t\tchunkHookIndex: stackHookLength,\n\t\t\t\t\tbranchHookIndex: stackHookLength + chunkHookCount\n\t\t\t\t}\n\t\t\t\tthis.hooks.push(closerHook);\n\n\t\t\t\tchunkHookCount++;\n\t\t\t}\n\n\t\t\tthis.tasks.push({\n\t\t\t\tdata,\n\t\t\t\tnode,\n\t\t\t\tnodePath: {\n\t\t\t\t\texplicit: partPath.explicit\n\t\t\t\t\t\t? prevNodePath.explicit.concat(partPath.explicit)\n\t\t\t\t\t\t: prevNodePath.explicit,\n\t\t\t\t\timplicit: partPath.implicit\n\t\t\t\t\t\t? prevNodePath.implicit.concat(partPath.implicit)\n\t\t\t\t\t\t: prevNodePath.implicit\n\t\t\t\t},\n\t\t\t\tcloserHook\n\t\t\t});\n\n\t\t\tchunkTaskIndex++;\n\t\t}\n\t}\n\n\tplayHooks(\n\t\tcloserHook: CheckerHook,\n\t\trejection: CheckerRejection | null\n\t): CheckerRejection | null {\n\t\tif (!rejection && closerHook.branchTaskIndex !== this.tasks.length) {\n\t\t\treturn (null);\n\t\t}\n\n\t\tlet currentHook = closerHook;\n\t\twhile (currentHook) {\n\t\t\tconst result = rejection\n\t\t\t\t? currentHook.onReject(rejection)\n\t\t\t\t: currentHook.onAccept();\n\n\t\t\tswitch (result.action) {\n\t\t\t\tcase \"REJECT\":\n\t\t\t\t\tthis.tasks.length = currentHook.branchTaskIndex;\n\t\t\t\t\tthis.hooks.length = currentHook.branchHookIndex;\n\t\t\t\t\trejection = {\n\t\t\t\t\t\tissuerTask: currentHook.sourceTask,\n\t\t\t\t\t\tcode: result.code\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"CANCEL\":\n\t\t\t\t\tif (result.target === \"CHUNK\") {\n\t\t\t\t\t\tthis.tasks.length = currentHook.chunkTaskIndex;\n\t\t\t\t\t\tthis.hooks.length = currentHook.chunkHookIndex;\n\t\t\t\t\t}\n\t\t\t\t\telse if (result.target === \"BRANCH\") {\n\t\t\t\t\t\tthis.tasks.length = currentHook.branchTaskIndex;\n\t\t\t\t\t\tthis.hooks.length = currentHook.branchHookIndex;\n\t\t\t\t\t}\n\t\t\t\t\treturn (null);\n\t\t\t}\n\n\t\t\tif (rejection || currentHook.chunkHookIndex === 0) break;\n\n\t\t\tcurrentHook = this.hooks[currentHook.chunkHookIndex];\n\t\t}\n\n\t\treturn (rejection);\n\t}\n}\n\nexport function checker(\n\tmanagers: SchemaInstance['managers'],\n\trootNode: MountedCriteria,\n\trootData: unknown\n): CheckerResult {\n\tconst { formats, events } = managers;\n\tconst stack = new CheckerStack(rootNode, rootData);\n\tlet rejection: CheckerRejection | null = null;\n\n\tlet loopCount = 0;\n\twhile (stack.tasks.length) {\n\t\tconst currentTask = stack.tasks.pop()!;\n\t\tconst { data, node, closerHook } = currentTask;\n\n\t\tconst format = formats.get(node.type);\n\t\tconst chunkTasks: CheckerChunkTask[] = [];\n\n\t\tconst code = format.check(chunkTasks, node, data);\n\n\t\tif (chunkTasks.length) {\n\t\t\tstack.pushChunk(currentTask, chunkTasks);\n\t\t}\n\n\t\tif (code) {\n\t\t\trejection = { issuerTask: currentTask, code };\n\t\t}\n\n\t\tif (closerHook) {\n\t\t\trejection = stack.playHooks(closerHook, rejection);\n\t\t}\n\n\t\tif (rejection) break;\n\n\t\tloopCount++;\n\t}\n\n\tif (rejection) {\n\t\tconst rejectionInstance = new SchemaDataRejection(\n\t\t\trootData,\n\t\t\trootNode,\n\t\t\trejection.code,\n\t\t\trejection.issuerTask.data,\n\t\t\trejection.issuerTask.node,\n\t\t\trejection.issuerTask.nodePath\n\t\t);\n\n\t\tevents.emit(\"DATA_REJECTED\", rejectionInstance);\n\t\treturn ({\n\t\t\tsuccess: false,\n\t\t\trejection: rejectionInstance,\n\t\t\tadmission: null\n\t\t});\n\t}\n\n\tconst admissionInstance = new SchemaDataAdmission(\n\t\trootData,\n\t\trootNode\n\t);\n\n\tevents.emit(\"DATA_ADMITTED\", admissionInstance);\n\treturn ({\n\t\tsuccess: true,\n\t\trejection: null,\n\t\tadmission: admissionInstance\n\t});\n};","import type { LooseAutocomplete } from \"../types\";\nimport type { InternalTags } from \"./types\";\n\nexport function getInternalTag(target: unknown): LooseAutocomplete<InternalTags> {\n\treturn (Object.prototype.toString.call(target).slice(8, -1));\n}","function convertBase16ToBase32(input: string, base32: string, padding: boolean = true) {\n\tconst totalChunksLength = Math.floor(input.length / 10) * 10;\n\tlet output = \"\";\n\tlet i = 0;\n\n\twhile (i < totalChunksLength) {\n\t\tconst decHigh = parseInt(input.slice(i, i + 5), 16);\n\t\tconst decLow = parseInt(input.slice(i + 5, i + 10), 16);\n\n\t\toutput += base32[((decHigh >> 15) & 31)]\n\t\t\t+ base32[((decHigh >> 10) & 31)]\n\t\t\t+ base32[((decHigh >> 5) & 31)]\n\t\t\t+ base32[(decHigh & 31)]\n\t\t\t+ base32[((decLow >> 15) & 31)]\n\t\t\t+ base32[((decLow >> 10) & 31)]\n\t\t\t+ base32[((decLow >> 5) & 31)]\n\t\t\t+ base32[(decLow & 31)];\n\t\ti += 10;\n\t}\n\n\tif (i < input.length) {\n\t\tconst restChunk = input.slice(i, i + 5);\n\t\t// 4469248 = 00100 01000 01100 10000 00000 = 4 8 12 16 0\n\t\tconst leftShift = (4469248 >> (restChunk.length * 5)) & 31;\n\t\tconst decHigh = parseInt(restChunk, 16) << leftShift;\n\n\t\toutput += base32[((decHigh >> 15) & 31)]\n\t\t\t+ base32[((decHigh >> 10) & 31)];\n\t\tif (leftShift < 12) {\n\t\t\toutput += base32[((decHigh >> 5) & 31)]\n\t\t\t\t+ base32[(decHigh & 31)];\n\t\t}\n\t}\n\n\tif (i + 5 < input.length) {\n\t\tconst restChunk = input.slice(i + 5, i + 10);\n\t\t// 4469248 = 00100 01000 01100 10000 00000 = 4 8 12 16 0\n\t\tconst leftShift = (4469248 >> (restChunk.length * 5)) & 31;\n\t\tconst decLow = parseInt(restChunk, 16) << leftShift;\n\n\t\toutput += base32[((decLow >> 15) & 31)]\n\t\t\t+ base32[((decLow >> 10) & 31)];\n\t\tif (leftShift < 12) output += base32[((decLow >> 5) & 31)];\n\t\tif (leftShift < 8) output += base32[(decLow & 31)];\n\t}\n\n\twhile (padding && output.length % 8 !== 0) {\n\t\toutput += '=';\n\t}\n\n\treturn (output);\n}\n\nfunction convertBase16ToBase64(input: string, base64: string, padding: boolean) {\n\tconst totalChunksLength = Math.floor(input.length / 6) * 6;\n\tlet output = \"\";\n\tlet i = 0;\n\n\twhile (i < totalChunksLength) {\n\t\tconst dec = parseInt(input.slice(i, i + 6), 16);\n\t\toutput += (base64[((dec >> 18) & 63)]\n\t\t\t+ base64[((dec >> 12) & 63)] \n\t\t\t+ base64[((dec >> 6) & 63)]\n\t\t\t+ base64[(dec & 63)]);\n\t\ti += 6;\n\t}\n\n\tif (i < input.length) {\n\t\tconst restChunk = input.slice(i, i + 6);\n\t\t// 143016576 = 00100 01000 01100 10000 10100 00000 = 4 8 12 16 20 0\n\t\tconst leftShift = (143016576 >> (restChunk.length * 5)) & 31;\n\t\tconst dec = parseInt(restChunk, 16) << leftShift;\n\n\t\toutput += base64[((dec >> 18) & 63)]\n\t\t\t+ base64[((dec >> 12) & 63)];\n\t\tif (leftShift < 12) output += base64[((dec >> 6) & 63)];\n\t\tif (leftShift < 8) output += base64[(dec & 63)];\n\t}\n\n\twhile (padding && output.length % 4 !== 0) {\n\t\toutput += '=';\n\t}\n\n\treturn (output);\n}\n\nfunction convertBase32ToBase16(input: string, base32: string) {\n\tif (input.endsWith(\"=\")) input = input.slice(0, input.indexOf(\"=\"));\n\tconst totalChunksLength = Math.floor(input.length / 8) * 8;\n\tconst base16 = \"0123456789ABCDEF\";\n\tlet output = \"\";\n\tlet i = 0;\n\n\twhile (i < totalChunksLength) {\n\t\tconst dec = (base32.indexOf(input[i]) << 15)\n\t\t\t| (base32.indexOf(input[i + 1]) << 10)\n\t\t\t| (base32.indexOf(input[i + 2]) << 5)\n\t\t\t| base32.indexOf(input[i + 3]);\n\n\t\toutput += base16[((dec >> 16) & 15)]\n\t\t\t+ base16[((dec >> 12) & 15)]\n\t\t\t+ base16[((dec >> 8) & 15)]\n\t\t\t+ base16[((dec >> 4) & 15)]\n\t\t\t+ base16[(dec & 15)];\n\t\ti += 4;\n\t}\n\n\tif (i < input.length) {\n\t\tconst rest = input.slice(i);\n\t\tconst restLength = rest.length;\n\t\tconst dec = ((base32.indexOf(rest[0]) << 15)\n\t\t\t| (rest[1] ? base32.indexOf(rest[1]) << 10 : 0)\n\t\t\t| (rest[2] ? base32.indexOf(rest[2]) << 5 : 0)\n\t\t\t| (rest[3] ? base32.indexOf(rest[3]) : 0));\n\n\t\toutput += base16[((dec >> 16) & 15)]\n\t\t\t+ base16[((dec >> 12) & 15)];\n\t\tif (restLength > 1) {\n\t\t\toutput += base16[((dec >> 8) & 15)]\n\t\t\t\t+ base16[((dec >> 4) & 15)];\n\t\t}\n\t\tif (restLength > 3) {\n\t\t\toutput += base16[(dec & 15)]\n\t\t\tif (i + 5 >= input.length) {\n\t\t\t\toutput += base16[0];\n\t\t\t}\n\t\t}\n\t}\n\n\tif (i + 5 < input.length) {\n\t\tconst rest = input.slice(i + 5);\n\t\tconst restLength = rest.length;\n\t\tconst dec = ((base32.indexOf(rest[0]) << 15)\n\t\t\t| (rest[1] ? base32.indexOf(rest[1]) << 10 : 0)\n\t\t\t| (rest[2] ? base32.indexOf(rest[2]) << 5 : 0)\n\t\t\t| (rest[3] ? base32.indexOf(rest[3]) : 0));\n\n\t\toutput += base16[((dec >> 16) & 15)]\n\t\t\t+ base16[((dec >> 12) & 15)]\n\t\t\t+ base16[((dec >> 8) & 15)];\n\t\tif (restLength > 2) {\n\t\t\toutput += base16[((dec >> 4) & 15)]\n\t\t\t\t+ base16[(dec & 15)];\n\t\t}\n\t}\n\n\treturn (output);\n}\n\nfunction convertBase64ToBase16(input: string, base64: string) {\n\tif (input.endsWith(\"=\")) input = input.slice(0, input.indexOf(\"=\"));\n\tconst totalChunksLength = Math.floor(input.length / 4) * 4;\n\tconst base16 = \"0123456789ABCDEF\";\n\tlet output = \"\";\n\tlet i = 0;\n\n\twhile (i < totalChunksLength) {\n\t\tconst dec = (base64.indexOf(input[i]) << 18)\n\t\t\t| (base64.indexOf(input[i + 1]) << 12)\n\t\t\t| (base64.indexOf(input[i + 2]) << 6)\n\t\t\t| base64.indexOf(input[i + 3]);\n\n\t\toutput += base16[((dec >> 20) & 15)]\n\t\t\t+ base16[((dec >> 16) & 15)]\n\t\t\t+ base16[((dec >> 12) & 15)]\n\t\t\t+ base16[((dec >> 8) & 15)]\n\t\t\t+ base16[((dec >> 4) & 15)]\n\t\t\t+ base16[(dec & 15)];\n\t\ti += 4;\n\t}\n\n\tif (i < input.length) {\n\t\tconst rest = input.slice(i);\n\t\tconst restLength = rest.length;\n\t\tconst dec = ((base64.indexOf(rest[0]) << 18)\n\t\t\t| (rest[1] ? base64.indexOf(rest[1]) << 12 : 0)\n\t\t\t| (rest[2] ? base64.indexOf(rest[2]) << 6 : 0)\n\t\t\t| (rest[3] ? base64.indexOf(rest[3]) : 0));\n\n\t\toutput += base16[((dec >> 20) & 15)]\n\t\t\t+ base16[((dec >> 16) & 15)];\n\t\tif (restLength > 2) {\n\t\t\toutput += base16[((dec >> 12) & 15)]\n\t\t\t\t+ base16[((dec >> 8) & 15)];\n\t\t}\n\t\tif (restLength > 3) {\n\t\t\toutput += base16[((dec >> 4) & 15)]\n\t\t\t\t+ base16[(dec & 15)];\n\t\t}\n\t}\n\n\treturn (output);\n}\n\nconst base32 = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ234567';\nconst base32Hex = \"0123456789ABCDEFGHIJKLMNOPQRSTUV\";\n\nconst base64 = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\nconst base64Url = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_\";\n\nexport function base16ToBase32(str: string, to: \"B32\" | \"B32HEX\" = \"B32\", padding: boolean = true) {\n\tif (typeof str !== \"string\") {\n\t\tthrow new Error(\"The 'str' argument must be of type string.\");\n\t}\n\tif (typeof to !== \"string\") {\n\t\tthrow new Error(\"The 'to' argument must be of type string.\");\n\t}\n\tif (typeof padding !== \"boolean\") {\n\t\tthrow new Error(\"The 'string' argument must be of type boolean.\");\n\t}\n\n\tif (to === \"B32\") return (convertBase16ToBase32(str, base32, padding));\n\tif (to === \"B32HEX\") return (convertBase16ToBase32(str, base32Hex, padding));\n\n\tthrow new Error(\"The 'to' argument must be a known string.\");\n}\n\nexport function base16ToBase64(str: string, to: \"B64\" | \"B64URL\" = \"B64\", padding: boolean = true) {\n\tif (typeof str !== \"string\") {\n\t\tthrow new Error(\"The 'str' argument must be of type string.\");\n\t}\n\tif (typeof to !== \"string\") {\n\t\tthrow new Error(\"The 'to' argument must be of type string.\");\n\t}\n\tif (typeof padding !== \"boolean\") {\n\t\tthrow new Error(\"The 'string' argument must be of type boolean.\");\n\t}\n\n\tif (to === \"B64\") return (convertBase16ToBase64(str, base64, padding));\n\tif (to === \"B64URL\") return (convertBase16ToBase64(str, base64Url, padding));\n\n\tthrow new Error(\"The 'to' argument must be a known string.\");\n}\n\nexport function base32ToBase16(str: string, from: \"B32\" | \"B32HEX\" = \"B32\") {\n\tif (typeof str !== \"string\") {\n\t\tthrow new Error(\"The 'str' argument must be of type string.\");\n\t}\n\tif (typeof from !== \"string\") {\n\t\tthrow new Error(\"The 'to' argument must be of type string.\");\n\t}\n\n\tif (from === \"B32\") return (convertBase32ToBase16(str, base32));\n\tif (from === \"B32HEX\") return (convertBase32ToBase16(str, base32Hex));\n\n\tthrow new Error(\"The 'from' argument must be a known string.\");\n}\n\nexport function base64ToBase16(str: string, from: \"B64\" | \"B64URL\" = \"B64\") {\n\tif (typeof str !== \"string\") {\n\t\tthrow new Error(\"The 'str' argument must be of type string.\");\n\t}\n\tif (typeof from !== \"string\") {\n\t\tthrow new Error(\"The 'to' argument must be of type string.\");\n\t}\n\n\tif (from === \"B64\") return (convertBase64ToBase16(str, base64));\n\tif (from === \"B64URL\") return (convertBase64ToBase16(str, base64Url));\n\n\tthrow new Error(\"The 'from' argument must be a known string.\");\n}","import * as objectHelpers from './object';\nimport * as stringHelpers from './string';\n\nexport type * from \"./types\";\nexport * from './object';\nexport * from './string';\n\nexport const helpers = {\n\tobject: objectHelpers,\n\tstring: stringHelpers\n};","import type { BasicObject, PlainObject, BasicArray, TypedArray, BasicFunction, AsyncFunction } from \"../types\";\nimport { getInternalTag } from \"../../helpers\";\n\n// OBJECT\n\nexport function isObject(x: null | undefined | number | bigint | string | boolean | symbol | object): x is object;\nexport function isObject(x: unknown): x is BasicObject;\n\nexport function isObject(x: unknown): x is BasicObject {\n\treturn (x !== null && typeof x === \"object\");\n}\n\nexport function isPlainObject(x: null | undefined | number | bigint | string | boolean | symbol | object): x is object;\nexport function isPlainObject(x: unknown): x is PlainObject;\n\n/**\n * A plain object is considered as follows:\n * - It must not be null.\n * - It must be an object.\n * - It must have a prototype of `Object.prototype` or `null`.\n*/\nexport function isPlainObject(x: unknown): x is PlainObject {\n\tif (x === null || typeof x !== \"object\") return (false);\n\tconst prototype = Object.getPrototypeOf(x);\n\n    return (prototype === null || prototype === Object.prototype);\n}\n\n// ARRAY\nexport function isArray(x: unknown): x is BasicArray {\n\treturn (Array.isArray(x));\n}\n\n/**\n * A typed array is considered as follows:\n * - It must be a view on an ArrayBuffer.\n * - It must not be a `DataView`.\n */\nexport function isTypedArray(x: unknown): x is TypedArray {\n\treturn (ArrayBuffer.isView(x) && !(x instanceof DataView));\n}\n\n/**\n * An array-like value is considered as follows:\n * - It must not be `null` or `undefined`.\n * - It must be of `object` or `function` type.\n * - It must have a numeric `length` property.\n */\nexport function isArrayLike(x: unknown): x is ArrayLike<unknown> {\n  return (\n    x != null && (typeof x === \"object\" || typeof x === \"function\") &&\n\t(\"length\" in x) && (typeof x.length === \"number\") && x.length >= 0\n  );\n}\n\n// FUNCTION\nexport function isFunction(x: unknown): x is BasicFunction {\n\treturn (getInternalTag(x) === \"Function\");\n}\n\nexport function isAsyncFunction(x: unknown): x is AsyncFunction {\n\treturn (getInternalTag(x) === \"AsyncFunction\");\n}\n\nexport function isGeneratorFunction(x: unknown): x is GeneratorFunction {\n\treturn (getInternalTag(x) === \"GeneratorFunction\");\n}\n\nexport function isAsyncGeneratorFunction(x: unknown): x is AsyncGeneratorFunction {\n\treturn (getInternalTag(x) === \"AsyncGeneratorFunction\");\n}","\n/**\n * Check if all characters in the string are part of the ASCII table.\n * \n * An empty string will return `false`.\n */\nexport function isAscii(str: string, options?: undefined): boolean {\n    return (RegExp(\"^[\\\\x00-\\\\x7F]+$\").test(str));\n}","/*\nComposition :\n    DIGIT    = %x30-39\n    HEXDIG   = DIGIT / \"A\" / \"B\" / \"C\" / \"D\" / \"E\" / \"F\"\n    hexOctet = HEXDIG HEXDIG\n    uuid     = 4*4hexOctet \"-\"\n               2*2hexOctet \"-\"\n               2*2hexOctet \"-\"\n               2*2hexOctet \"-\"\n               6*6hexOctet\n\nSources :\n    RFC 9562 Section 4 : DIGIT\n                         HEXDIG\n                         hexOctet\n                         UUID -> uuid\n\nLinks :\n    https://datatracker.ietf.org/doc/html/rfc9562#section-4\n*/\n\ninterface UuidOptions {\n\t/** Specifies the allowed version number, between 1 and 7. */\n\tversion?: 1|2|3|4|5|6|7;\n}\n\nconst extractUuidVersionRegex = new RegExp(\"^[0-9A-F]{8}-[0-9A-F]{4}-([1-7])[0-9A-F]{3}-[89AB][0-9A-F]{3}-[0-9A-F]{12}$\", \"i\");\n\n/**\n * **Standard :** RFC 9562\n * \n * @version 1.0.0\n */\nexport function isUuid(str: string, options?: UuidOptions): boolean {\n    if (typeof str !== \"string\") {\n\t\tthrow new Error(\"The 'str' argument must be of type string.\");\n\t}\n\tif (options !== undefined) {\n        if (typeof options !== \"object\") {\n            throw new Error(\"The 'options' argument must be of type object.\");\n        }\n        if (options?.version !== undefined) {\n            if (typeof options.version !== \"number\") {\n                throw new Error(\"The 'cidr' property of the 'options' argument must be of type number.\");\n            }\n            if (options.version < 1 || options.version > 7) {\n                throw new Error(\"The 'cidr' property of the 'options' argument must be a number between 1 and 7.\");\n            }\n        }\n\t}\n\n\tconst execResult = extractUuidVersionRegex.exec(str);\n\tif (!execResult || !execResult[1]) return (false);\n\tif (!options?.version || (execResult[1].codePointAt(0)! - 48) === options?.version) return (true);\n\n\treturn (false);\n}","export function weakly<O extends object>(callback: () => O): () => O {\n\tlet ref: WeakRef<O> | null = null;\n\n    return (() => {\n\t\tif (!ref) {\n\t\t\tconst obj = callback();\n\t\t\tref = new WeakRef(obj);\n\t\t\treturn (obj);\n\t\t}\n\t\t\n\t\tconst value = ref.deref();\n\t\tif (!value) {\n\t\t\tconst obj = callback();\n\t\t\tref = new WeakRef(obj);\n\t\t\treturn (obj);\n\t\t}\n\n\t\treturn (value);\n    });\n}\n\n/**\n * @see https://www.garykessler.net/library/file_sigs.html\n * @see https://en.wikipedia.org/wiki/List_of_file_signatures\n *\nconst signatures = [\n\t// Image\n\t{ ext: \"png\" as const, offset: 0, flags: [\"89504E470D0A1A0A\"]},\n\t{ ext: \"jpg\" as const, offset: 0, flags: [\"FFD8FFE0\"]},\n\t{ ext: \"jp2\" as const, offset: 0, flags: [\"0000000C6A5020200D0A870A\"]},\n\t{ ext: \"gif\" as const, offset: 0, flags: [\"474946383761\", \"474946383961\"]},\n\t{ ext: \"webp\" as const, offset: 0, flags: [\"52494646????????57454250\"]},\n\t// Audio\n\t{ ext: \"mp3\" as const, offset: 0, flags: [\"FFFB\", \"FFF3\", \"FFF2\", \"494433\"]},\n\t{ ext: \"mp4\" as const, offset: 4, flags: [\"6674797069736F6D\", \"667479704D534E56\"]},\n\t// 3D\n\t{ ext: \"stl\" as const, offset: 4, flags: [\"736F6C6964\"]}\n];\n\nexport function hasFileSignature(hex: string, extensions: Array<(typeof signatures)[number]['ext']>) {\n\tfor (let i = 0; i < extensions.length; i++) {\n\t\tconst { offset, flags } = signatures.find(({ ext }) => ext === extensions[i])!;\n\n\t\tfor (let i = 0; i < flags.length; i++) {\n\t\t\tconst flag = flags[i];\n\t\t\tlet j = (flag.length - 1) + offset;\n\n\t\t\tif (j >= hex.length) continue;\n\t\t\twhile (j >= 0) {\n\t\t\t\tif (flag[j] !== \"?\" && hex[j] !== flag[j]) break;\n\t\t\t\tj--;\n\t\t\t}\n\t\t\tif (j === 0) return (true);\n\t\t}\n\t}\n}*/","/**\n# IPV4\n\nComposition :\n    dec-octet = 1*3DIGIT ; Representing a decimal integer value in the range 0 through 255\n    suffixe    = 1*2DIGIT ; Representing a decimal integer value in the range 0 through 32.\n    IPv4      = dec-octet 3(\".\" dec-octet) [\"/\" suffixe]\n\n# IPV6\n\nComposition :\n    HEXDIG      = DIGIT / A-F / a-f\n    IPv6-full   = 1*4HEXDIG 7(\":\" 1*4HEXDIG)\n    IPv6-comp   = [1*4HEXDIG *5(\":\" 1*4HEXDIG)] \"::\" [1*4HEXDIG *5(\":\" 1*4HEXDIG)]\n    IPv6v4-full = 1*4HEXDIG 5(\":\" 1*4HEXDIG) \":\" IPv4\n    IPv6v4-comp = [1*4HEXDIG *3(\":\" 1*4HEXDIG)] \"::\" [1*4HEXDIG *3(\":\" 1*4HEXDIG) \":\"] IPv4\n    suffixe      = 1*3DIGIT ; Representing a decimal integer value in the range 0 through 128.\n    IPv6        = (IPv6-full / IPv6-comp / IPv6v4-full / IPv6v4-comp) [\"/\" suffixe]\n*/\n\nimport { weakly } from \"../utils\";\n\ninterface IpOptions {\n\t/**\n\t * Defines the expected behavior for a CIDR suffix.\n\t * - `\"reject\"` : CIDR is rejected (ex: `\"192.168.0.1\"` true, `\"192.168.0.1/24\"` false)\n\t * - `\"accept\"` : CIDR is accepted (ex: `\"192.168.0.1\"` true, `\"192.168.0.1/24\"` true)\n\t * - `\"expect\"` : CIDR is expected (ex: `\"192.168.0.1\"` false, `\"192.168.0.1/24\"` true)\n\t * \n\t * **Default:** `\"reject\"`\n\t */\n\tcidr?: \"reject\" | \"accept\" | \"expect\";\n}\n\nconst ipV4Seg = \"(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\";\nexport const ipV4Pattern = `(?:${ipV4Seg}\\\\.){3}${ipV4Seg}`;\n\nconst ipV4Regex = new RegExp(`^${ipV4Pattern}$`);\nconst ipV4WithCidrExpectedRegex = weakly(() =>new RegExp(`^${ipV4Pattern}/(3[0-2]|[12]?[0-9])$`));\nconst ipV4WithCidrAcceptedRegex = weakly(() =>new RegExp(`^${ipV4Pattern}(?:/(3[0-2]|[12]?[0-9]))?$`));\n\nconst ipV6Seg = \"(?:[0-9a-fA-F]{1,4})\";\nexport const ipV6Pattern = \"(?:\" +\n\t`(?:${ipV6Seg}:){7}(?:${ipV6Seg}|:)|` +\n\t`(?:${ipV6Seg}:){6}(?:${ipV4Pattern}|:${ipV6Seg}|:)|` +\n\t`(?:${ipV6Seg}:){5}(?::${ipV4Pattern}|(?::${ipV6Seg}){1,2}|:)|` +\n\t`(?:${ipV6Seg}:){4}(?:(?::${ipV6Seg}){0,1}:${ipV4Pattern}|(?::${ipV6Seg}){1,3}|:)|` +\n\t`(?:${ipV6Seg}:){3}(?:(?::${ipV6Seg}){0,2}:${ipV4Pattern}|(?::${ipV6Seg}){1,4}|:)|` +\n\t`(?:${ipV6Seg}:){2}(?:(?::${ipV6Seg}){0,3}:${ipV4Pattern}|(?::${ipV6Seg}){1,5}|:)|` +\n\t`(?:${ipV6Seg}:){1}(?:(?::${ipV6Seg}){0,4}:${ipV4Pattern}|(?::${ipV6Seg}){1,6}|:)|` +\n\t`(?::(?:(?::${ipV6Seg}){0,5}:${ipV4Pattern}|(?::${ipV6Seg}){1,7}|:)))`;\n\nconst ipV6Regex = new RegExp(`^${ipV6Pattern}$`);\nconst ipV6WithCidrExpectedRegex = weakly(() =>new RegExp(`^${ipV6Pattern}/(12[0-8]|1[01][0-9]|[1-9]?[0-9])$`));\nconst ipV6WithCidrAcceptedRegex = weakly(() =>new RegExp(`^${ipV6Pattern}(?:/(12[0-8]|1[01][0-9]|[1-9]?[0-9]))?$`));\n\nfunction checkArguments(str: string, options?: IpOptions) {\n\tif (typeof str !== \"string\") {\n\t\tthrow new Error(\"The 'str' argument must be of type string.\");\n\t}\n\tif (options !== undefined) {\n\t\tif (typeof options !== \"object\") {\n\t\t\tthrow new Error(\"The 'options' argument must be of type object.\");\n\t\t}\n\t\tif (options.cidr !== undefined && typeof options.cidr !== \"string\") {\n\t\t\tthrow new Error(\"The 'cidr' property of the 'options' argument must be of type string.\");\n\t\t}\n\t}\n}\n\n/**\n * **Standard:** No standard\n * \n * @version 2.0.0\n */\nexport function isIp(str: string, options?: IpOptions): boolean {\n\tcheckArguments(str, options);\n\n\tif (options?.cidr === undefined || options.cidr === \"reject\") {\n\t\tif (ipV4Regex.test(str)) return (true);\n\t\tif (ipV6Regex.test(str)) return (true);\n\t}\n\telse if (options.cidr === \"expect\") {\n\t\tif (ipV4WithCidrExpectedRegex().test(str)) return (true);\n\t\tif (ipV6WithCidrExpectedRegex().test(str)) return (true);\n\t}\n\telse if (options.cidr === \"accept\") {\n\t\tif (ipV4WithCidrAcceptedRegex().test(str)) return (true);\n\t\tif (ipV6WithCidrAcceptedRegex().test(str)) return (true);\n\t}\n\telse {\n\t\tthrow new Error(\"The 'options.cidr' property must be a known string.\");\n\t}\n\n\treturn (false);\n}\n\n/**\n * **Standard:** No standard\n * \n * @version 2.0.0\n */\nexport function isIpV4(str: string, options?: IpOptions): boolean {\n\tcheckArguments(str, options);\n\n\tif (options?.cidr === undefined || options.cidr === \"reject\") {\n\t\tif (ipV4Regex.test(str)) return (true);\n\t}\n\telse if (options.cidr === \"expect\") {\n\t\tif (ipV4WithCidrExpectedRegex().test(str)) return (true);\n\t}\n\telse if (options.cidr === \"accept\") {\n\t\tif (ipV4WithCidrAcceptedRegex().test(str)) return (true);\n\t}\n\telse {\n\t\tthrow new Error(\"The 'options.cidr' property must be a known string.\");\n\t}\n\n\treturn (false);\n}\n\n/**\n * **Standard:** No standard\n * \n * @version 2.0.0\n */\nexport function isIpV6(str: string, options?: IpOptions): boolean {\n\tcheckArguments(str, options);\n\n\tif (options?.cidr === undefined || options.cidr === \"reject\") {\n\t\tif (ipV6Regex.test(str)) return (true);\n\t}\n\telse if (options.cidr === \"expect\") {\n\t\tif (ipV6WithCidrExpectedRegex().test(str)) return (true);\n\t}\n\telse if (options.cidr === \"accept\") {\n\t\tif (ipV6WithCidrAcceptedRegex().test(str)) return (true);\n\t}\n\telse {\n\t\tthrow new Error(\"The 'options.cidr' property must be a known string.\");\n\t}\n\n\treturn (false);\n}","/*\nComposition :\n    letter = %d65-%d90 / %d97-%d122; A-Z / a-z\n    digit  = %x30-39; 0-9\n    label  = letter [*(digit / letter / \"-\") digit / letter]\n    domain = label *(\".\" label)\n\nLinks :\n    https://datatracker.ietf.org/doc/html/rfc1035#section-2.3.1\n*/\n\nconst domainRegex = new RegExp(\"^[A-Za-z](?:[A-Za-z0-9-]*[A-Za-z0-9])?(?:\\\\.[A-Za-z](?:[A-Za-z0-9-]*[A-Za-z0-9])?)*$\");\n\n/**\n * **Standard :** RFC 1035\n * \n * @version 1.0.0\n */\nexport function isDomain(str: string, options?: undefined): boolean {\n    if (typeof str !== \"string\") {\n\t\tthrow new Error(\"The 'str' argument must be of type string.\");\n\t}\n\n\treturn (domainRegex.test(str));\n}\n","/*\nComposition :\n    atom            = 1*atext\n    dot-local       = atom *(\".\"  atom)\n    quoted-local    = DQUOTE *QcontentSMTP DQUOTE\n    ip-address      = IPv4-address-literal / IPv6-address-literal\n    general-address = General-address-literal\n    local           = dot-local / quote-local\n    domain          = Domain\n    address         = ip-address / general-address\n    mailbox         = local \"@\" (domain / address)\n\nSources :\n    RFC 5234 Appendix B.1   : DQUOTE\n    RFC 5322 Section  3.2.3 : atext\n    RFC 5321 Section  4.1.3 : IPv4-address-literal\n                              IPv6-address-literal\n                              General-address-literal\n    RFC 5321 Section  4.1.2 : QcontentSMTP\n                              Domain\n\nLinks :\n    https://datatracker.ietf.org/doc/html/rfc5234#appendix-B.1\n    https://datatracker.ietf.org/doc/html/rfc5322#section-3.2.3\n    https://datatracker.ietf.org/doc/html/rfc5321#section-4.1.3\n    https://datatracker.ietf.org/doc/html/rfc5321#section-4.1.2\n*/\n\nimport { ipV4Pattern, ipV6Pattern } from \"./isIp\";\nimport { isDomain } from \"./isDomain\";\nimport { weakly } from \"../utils\";\n\ninterface EmailObject {\n\tlocal: string;\n\tdomain: string;\n}\n\ninterface EmailOptions {\n\t/** **Default:** `false` */\n\tallowLocalQuote?: boolean;\n\t/** **Default:** `false` */\n\tallowIpAddress?: boolean;\n\t/** **Default:** `false` */\n\tallowGeneralAddress?: boolean;\n}\n\nconst localDotPattern = \"(?:[-!=?A-B\\\\x23-\\\\x27\\\\x2A-\\\\x2B\\\\x2F-\\\\x39\\\\x5E-\\\\x7E]+(?:\\\\.[-!=?A-B\\\\x23-\\\\x27\\\\x2A-\\\\x2B\\\\x2F-\\\\x39\\\\x5E-\\\\x7E]+)*)\";\nconst localQuotePattern = \"(?:\\\"(?:[\\\\x20-\\\\x21\\\\x23-\\\\x5B\\\\x5D-\\\\x7E]|\\\\\\\\[\\\\x20-\\\\x7E])*\\\")\";\n\nconst localDotRegex = new RegExp(`^${localDotPattern}$`);\nconst localDotOrLocalQuoteRegex = weakly(() => new RegExp(`^(?:${localDotPattern}|${localQuotePattern})$`));\n\nconst ipAddressRegex = weakly(() => new RegExp(`^\\\\[(?:IPv6:${ipV6Pattern}|${ipV4Pattern})\\\\]$`));\nconst generalAddressRegex = weakly(() => new RegExp(`(?:[a-zA-Z0-9-]*[a-zA-Z0-9]+:[\\\\x21-\\\\x5A\\\\x5E-\\\\x7E]+)`));\n\nfunction parseEmail(str: string): EmailObject | null {\n\tconst length = str.length;\n\tlet i = 0;\n\n\t// EXTRACT LOCAL\n\tconst localStart = i;\n\tif (str[localStart] === \"\\\"\") {\n\t\twhile (++i < length) {\n\t\t\tif (str[i] === \"\\\\\") i++;\n\t\t\telse if (str[i] === \"\\\"\") {\n\t\t\t\ti++;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t} else {\n\t\twhile (i < length && str[i] !== \"@\") i++;\n\t}\n\tif (i === localStart || str[i] !== \"@\") return (null);\n\tconst localEnd = i;\n\n\t// EXTRACT DOMAIN\n\tconst domainStart = ++i;\n\tconst domainEnd = length;\n\tif (domainStart === domainEnd) return (null);\n\n\treturn ({\n\t\tlocal: str.slice(localStart, localEnd),\n\t\tdomain: str.slice(domainStart, domainEnd)\n\t});\n}\n\nfunction validateLocal(str: string, options?: EmailOptions): boolean {\n\tif (localDotRegex.test(str)) return (true);\n\n\tif (options?.allowLocalQuote\n\t\t&& localDotOrLocalQuoteRegex().test(str)) return (true);\n\n\treturn (false);\n}\n\nfunction validateDomain(str: string, options?: EmailOptions): boolean {\n\tif (isDomain(str)) return (true);\n\n\tif (options?.allowIpAddress\n\t\t&& ipAddressRegex().test(str)) return (true);\n\tif (options?.allowGeneralAddress\n\t\t&& generalAddressRegex().test(str)) return (true);\n\t\n\treturn (false);\n}\n\n/**\n * **Standard :** RFC 5321\n * \n * @version 2.0.0\n */\nexport function isEmail(str: string, options?: EmailOptions): boolean {\n\tif (typeof str !== \"string\") {\n\t\tthrow new Error(\"The 'str' argument must be of type string.\");\n\t}\n\tif (options !== undefined) {\n\t\tif (typeof options !== \"object\") {\n\t\t\tthrow new Error(\"The 'options' argument must be of type object.\");\n\t\t}\n\t\tif (options.allowLocalQuote !== undefined && typeof options.allowLocalQuote !== \"boolean\") {\n\t\t\tthrow new Error(\"The 'allowLocalQuote' property of the 'options' argument must be of type boolean.\");\n\t\t}\n\t\tif (options.allowIpAddress !== undefined && typeof options.allowIpAddress !== \"boolean\") {\n\t\t\tthrow new Error(\"The 'allowIpAddress' property of the 'options' argument must be of type boolean.\");\n\t\t}\n\t\tif (options.allowGeneralAddress !== undefined && typeof options.allowGeneralAddress !== \"boolean\") {\n\t\t\tthrow new Error(\"The 'allowGeneralAddress' property of the 'options' argument must be of type boolean.\");\n\t\t}\n\t}\n\n\tconst email = parseEmail(str);\n\tif (!email) return (false);\n\n\t// VALIDATE LOCAL\n\tif (!validateLocal(email.local, options)) return (false);\n\n\t// VALIDATE DOMAIN\n\tif (!validateDomain(email.domain, options)) return (false);\n\n\t// RFC 5321 4.5.3.1.2 : Length restriction\n\tif (!email.domain.length || email.domain.length > 255) return (false);\n\n\treturn (true);\n}","/*\nComposition :\n    data      = pchar\n    value     = value\n    token     = restricted-name\n    mediatype = [token \"/\" token] *(\";\" token \"=\" value)\n    dataurl   = \"data:\" [mediatype] [\";base64\"] \",\" data\n\nSources :\n    RFC 3986 Section 3.3 : pchar\n    RFC 2045 Section 5.1 : value\n    RFC 6838 Section 4.2 : restricted-name\n\nLinks :\n    https://datatracker.ietf.org/doc/html/rfc3986#section-3.3\n    https://datatracker.ietf.org/doc/html/rfc2045#section-5.1\n    https://datatracker.ietf.org/doc/html/rfc6838#section-4.2\n    https://datatracker.ietf.org/doc/html/rfc2397#section-3\n*/\n\nimport { isArray } from \"../object\";\n\ninterface DataUrlObject {\n\tdata: string;\n\ttype: string;\n\tsubtype: string;\n\tisBase64: boolean;\n\tparameters: { name: string, value: string }[];\n}\n\ninterface DataUrlOptions {\n\t/**\n\t * Specifies the type of media.\n\t * \n\t * @see http://www.iana.org/assignments/media-types/\n\t */\n\ttype: string[];\n\t/**\n\t * Specifies the sub-type of media.\n\t * \n\t * @see http://www.iana.org/assignments/media-types/\n\t */\n\tsubtype: string[];\n}\n\nconst paramTokenPattern = \"[a-zA-Z0-9!#$%&'*+.^_`{|}~-]+\";\nconst paramTokenQuotePattern = \"\\\"[a-zA-Z0-9!#$%&'()*+,./:;<=>?@\\[\\\\\\]^_`{|}~-]+\\\"\";\nconst valueRegex = new RegExp(`^(?:${paramTokenPattern}|${paramTokenQuotePattern})$`);\n\nconst tokenRegex = new RegExp(`^[a-zA-Z0-9](?:[a-zA-Z0-9!#$&^/_.+-]{0,125}[a-zA-Z0-9!#$&^/_.-])?$`);\n\nconst dataRegex = new RegExp(`^(?:[a-zA-Z0-9._~!$&'()*+,;=:@-]|%[a-zA-Z0-9]{2})*$`);\n\nfunction parseDataUrl(str: string): DataUrlObject | null {\n\tconst result: DataUrlObject = {\n\t\tdata: \"\",\n\t\ttype: \"\",\n\t\tsubtype: \"\",\n\t\tparameters: [],\n\t\tisBase64: false\n\t};\n\tlet i = 0;\n\n\tif (!str.startsWith(\"data:\")) return (null);\n\ti += 5;\n\n\tif (str[i] !== \";\" && str[i] !== \",\") {\n\t\t// EXTRACT TYPE\n\t\tconst typeStart = i;\n\t\twhile (str[i] && str[i] !== \"/\") i++;\n\t\tif (!str[i] || typeStart === i) return (null);\n\t\tconst typeEnd = i;\n\n\t\t// EXTRACT SUBTYPE\n\t\tconst subtypeStart = ++i;\n\t\twhile (str[i] && str[i] !== \";\" && str[i] !== \",\") i++;\n\t\tif (!str[i] || subtypeStart === i) return (null);\n\t\tconst subtypeEnd = i;\n\n\t\tresult.type = str.slice(typeStart, typeEnd);\n\t\tresult.subtype = str.slice(subtypeStart, subtypeEnd);\n\t}\n\n\t// EXTRACT PARAMETERS\n\twhile (str[i] && str[i] === \";\") {\n\t\tif (str.startsWith(\";base64,\", i)) {\n\t\t\tresult.isBase64 = true;\n\t\t\ti += 7;\n\t\t\tbreak;\n\t\t}\n\n\t\tconst nameStart = ++i;\n\t\twhile (str[i] && str[i] !== \"=\") i++;\n\t\tif (!str[i] || nameStart === i) return (null);\n\t\tconst nameEnd = i;\n\n\t\tconst valueStart = ++i;\n\t\tif (str[valueStart] === \"\\\"\") {\n\t\t\twhile (str[i] && !(str[i - 1] === \"\\\"\" && (str[i] === \";\" || str[i] === \",\"))) i++;\n\t\t}\n\t\telse {\n\t\t\twhile (str[i] && str[i] !== \";\" && str[i] !== \",\") i++;\n\t\t}\n\t\tif (!str[i] || valueStart === i) return (null);\n\t\tconst valueEnd = i;\n\n\t\tresult.parameters.push({\n\t\t\tname: str.slice(nameStart, nameEnd),\n\t\t\tvalue: str.slice(valueStart, valueEnd)\n\t\t});\n\t}\n\n\tif (str[i] !== \",\") return (null);\n\ti += 1;\n\n\t// EXTRACT DATA\n\tif (str[i]) result.data = str.slice(i);\n\n\treturn (result);\n}\n\n/**\n * **Standard :** RFC 2397 (RFC 2045, RFC 6838, RFC 3986)\n * \n * @version 2.0.0\n */\nexport function isDataUrl(str: string, options?: DataUrlOptions): boolean {\n\tif (typeof str !== \"string\") {\n\t\tthrow new Error(\"The 'str' argument must be of type string.\");\n\t}\n\tif (options !== undefined) {\n        if (typeof options !== \"object\") {\n            throw new Error(\"The 'options' argument must be of type object.\");\n        }\n        if (options.type !== undefined && !isArray(options.type)) {\n            throw new Error(\"The 'type' property of the 'options' argument must be of type string.\");\n        }\n\t\t if (options.subtype !== undefined && !isArray(options.subtype)) {\n            throw new Error(\"The 'subtype' property of the 'options' argument must be of type string.\");\n        }\n\t}\n\n\tconst dataUrl = parseDataUrl(str);\n\tif (!dataUrl) return (false);\n\n\tif (dataUrl.type || dataUrl.subtype) {\n\t\t// CHECK TYPE\n\t\tif (!tokenRegex.test(dataUrl.type)) return (false);\n\t\t// RFC 6838 4.2: Length restriction\n\t\tif (dataUrl.type.length > 127) return (false);\n\n\t\t// CHECK SUBTYPE\n\t\tif (!tokenRegex.test(dataUrl.subtype)) return (false);\n\t\t// RFC 6838 4.2: Length restriction\n\t\tif (dataUrl.subtype.length > 127) return (false);\n\t}\n\n\t// CHECK PARAMETERS\n\tfor (let i = 0; i < dataUrl.parameters.length; i++) {\n\t\tconst parameter = dataUrl.parameters[i];\n\t\t\n\t\tif (!tokenRegex.test(parameter.name)) return (false);\n\t\tif (!valueRegex.test(parameter.value)) return (false);\n\n\t\t// RFC 6838 4.3: Identical name restriction and case insensitive\n\t\tconst hasIdenticalName = dataUrl.parameters.some(({ name }, j) =>\n\t\t\tj !== i && name.toLowerCase() === name.toLowerCase()\n\t\t);\n\t\tif (hasIdenticalName) return (false);\n\t}\n\n\t// CHECK DATA\n\tif (!dataRegex.test(dataUrl.data)) return (false);\n\n\tif (options?.type) {\n\t\tconst hasValidType = options.type.some(type => \n\t\t\ttype.toLowerCase() === dataUrl.type.toLowerCase()\n\t\t);\n\t\tif (!hasValidType) return (false);\n\t}\n\tif (options?.subtype) {\n\t\tconst hasValidSubtype = options.subtype.some(subtype => \n\t\t\tsubtype.toLowerCase() === dataUrl.subtype.toLowerCase()\n\t\t);\n\t\tif (!hasValidSubtype) return (false);\n\t}\n\n\treturn (true);\n}\n\n","import { weakly } from \"../utils\";\n\nconst base16Regex = new RegExp(\"^(?:[A-F0-9]{2})*$\");\n\nconst base32Regex = new RegExp(\"^(?:[A-Z2-7]{8})*(?:[A-Z2-7]{2}[=]{6}|[A-Z2-7]{4}[=]{4}|[A-Z2-7]{5}[=]{3}|[A-Z2-7]{6}[=]{2}|[A-Z2-7]{7}[=]{1})?$\");\nconst base32HexRegex = weakly(() => new RegExp(\"^(?:[0-9A-V]{8})*(?:[0-9A-V]{2}[=]{6}|[0-9A-V]{4}[=]{4}|[0-9A-V]{5}[=]{3}|[0-9A-V]{6}[=]{2}|[0-9A-V]{7}[=]{1})?$\"));\n\nconst base64Regex = new RegExp(\"^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}[=]{2}|[A-Za-z0-9+/]{3}[=]{1})?$\");\nconst base64UrlRegex = weakly(() => new RegExp(\"^(?:[A-Za-z0-9_-]{4})*(?:[A-Za-z0-9_-]{2}[=]{2}|[A-Za-z0-9_-]{3}[=]{1})?$\"));\n\n/**\n * **Standard :** RFC 4648\n * \n * @see https://datatracker.ietf.org/doc/html/rfc4648#section-8\n * \n * @version 1.0.0\n */\nexport function isBase16(str: string, options?: undefined): boolean {\n\tif (typeof str !== \"string\") {\n\t\tthrow new Error(\"The 'str' argument must be of type string.\");\n\t}\n\n\treturn (str.length % 2 === 0 && base16Regex.test(str));\n}\n\n/**\n * **Standard :** RFC 4648\n * \n * @see https://datatracker.ietf.org/doc/html/rfc4648#section-6\n * \n * @version 1.0.0\n */\nexport function isBase32(str: string, options?: undefined): boolean {\n\tif (typeof str !== \"string\") {\n\t\tthrow new Error(\"The 'str' argument must be of type string.\");\n\t}\n\n\treturn (str.length % 8 === 0 && base32Regex.test(str));\n}\n\n/**\n * **Standard :** RFC 4648\n * \n * @see https://datatracker.ietf.org/doc/html/rfc4648#section-7\n * \n * @version 1.0.0\n */\nexport function isBase32Hex(str: string, options?: undefined): boolean {\n\tif (typeof str !== \"string\") {\n\t\tthrow new Error(\"The 'str' argument must be of type string.\");\n\t}\n\n\treturn (str.length % 8 === 0 && base32HexRegex().test(str));\n}\n\n/**\n * **Standard :** RFC 4648\n * \n * @see https://datatracker.ietf.org/doc/html/rfc4648#section-4\n * \n * @version 1.0.0\n */\nexport function isBase64(str: string, options?: undefined): boolean {\n\tif (typeof str !== \"string\") {\n\t\tthrow new Error(\"The 'str' argument must be of type string.\");\n\t}\n\n\treturn (str.length % 4 == 0 && base64Regex.test(str));\n}\n\n/**\n * **Standard :** RFC 4648\n * \n * @see https://datatracker.ietf.org/doc/html/rfc4648#section-5\n * \n * @version 1.0.0\n */\nexport function isBase64Url(str: string, options?: undefined): boolean {\n\tif (typeof str !== \"string\") {\n\t\tthrow new Error(\"The 'str' argument must be of type string.\");\n\t}\n\n\treturn (str.length % 4 === 0 && base64UrlRegex().test(str));\n}","import * as objectTesters from './object';\nimport * as stringTesters from './string';\n\nexport type * from \"./types\";\nexport * from './object';\nexport * from './string';\n\nexport const testers = {\n\tobject: objectTesters,\n\tstring: stringTesters\n};","import type { SetableCriteria } from \"../formats\";\nimport { isArray, isPlainObject } from \"../../testers\";\nimport { hasNodeSymbol } from \"./mounter\";\n\ninterface CloningTask {\n\tsrc: unknown;\n\tcpy: any;\n}\n\n/**\n * Clones the object starting from the root and stops traversing a branch\n * when a mounted criteria node is encountered. In such cases, the mounted\n * object encountered see its internal properties copied to a new reference\n * so that the junction is a unique reference in the tree.\n * \n * @param src Source object of the clone\n * @returns Clone of the source object\n */\nexport function cloner<T extends SetableCriteria>(\n\trootSrc: T\n): T {\n\tlet rootCpy = {};\n\tlet stack: CloningTask[] = [{ \n\t\tsrc: rootSrc, \n\t\tcpy: rootCpy\n\t}];\n\n\twhile (stack.length > 0) {\n\t\tlet { src, cpy } = stack.pop()!;\n\n\t\tif (isPlainObject(src)) {\n\t\t\tif (hasNodeSymbol(src)) {\n\t\t\t\tcpy = { ...src };\n\t\t\t}\n\t\t\telse {\n\t\t\t\tconst keys = Reflect.ownKeys(src);\n\t\t\t\tfor (let i = 0; i < keys.length; i++) {\n\t\t\t\t\tconst key = keys[i];\n\t\n\t\t\t\t\tif (isPlainObject(src[key])) {\n\t\t\t\t\t\tif (hasNodeSymbol(src[key])) {\n\t\t\t\t\t\t\tcpy[key] = { ...src[key] };\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tcpy[key] = {};\n\t\n\t\t\t\t\t\t\tstack.push({\n\t\t\t\t\t\t\t\tsrc: src[key],\n\t\t\t\t\t\t\t\tcpy: cpy[key]\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (isArray(src[key])) {\n\t\t\t\t\t\tcpy[key] = [];\n\t\n\t\t\t\t\t\tstack.push({\n\t\t\t\t\t\t\tsrc: src[key],\n\t\t\t\t\t\t\tcpy: cpy[key]\n\t\t\t\t\t\t});\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcpy[key] = src[key];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse if (isArray(src)) {\n\t\t\tfor (let i = 0; i < src.length; i++) {\n\t\t\t\tconst index = i;\n\t\n\t\t\t\tif (isPlainObject(src[index])) {\n\t\t\t\t\tif (hasNodeSymbol(src[index])) {\n\t\t\t\t\t\tcpy[i] = { ...src[index] };\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcpy[i] = {};\n\t\n\t\t\t\t\t\tstack.push({\n\t\t\t\t\t\t\tsrc: src[index],\n\t\t\t\t\t\t\tcpy: cpy[index]\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t} else if (isArray(src[index])) {\n\t\t\t\t\tcpy[index] = [];\n\n\t\t\t\t\tstack.push({\n\t\t\t\t\t\tsrc: src[index],\n\t\t\t\t\t\tcpy: cpy[index]\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tcpy[index] = src[index];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tcpy = src;\n\t\t}\n\t}\n\n\treturn (rootCpy as T);\n};","import type { UndefinedSetableCriteria, UndefinedRejectionCodes } from \"./types\";\nimport type { Format } from \"../types\";\n\nexport const UndefinedFormat: Format<\n\tUndefinedSetableCriteria,\n\tnever,\n\tUndefinedRejectionCodes\n> = {\n\ttype: \"undefined\",\n\texceptions: {},\n\tmount(chunk, criteria) {\n\t\treturn (null);\n\t},\n\tcheck(chunk, criteria, value) {\n\t\tif (value !== undefined) {\n\t\t\treturn (\"TYPE_UNDEFINED_UNSATISFIED\");\n\t\t}\n\n\t\treturn (null);\n\t}\n}\n","import type { FunctionSetableCriteria, FunctionExceptionCodes, FunctionRejectionCodes, FunctionCustomMembers } from \"./types\";\nimport type { Format } from \"../types\";\nimport { getInternalTag } from \"../../../helpers\";\nimport { isArray } from \"../../../testers\";\n\nexport const FunctionFormat: Format<\n\tFunctionSetableCriteria,\n\tFunctionExceptionCodes,\n\tFunctionRejectionCodes,\n\tFunctionCustomMembers\n> = {\n\ttype: \"function\",\n\texceptions: {\n\t\tNATURE_PROPERTY_MISDECLARED:\n\t\t\t\"The 'nature' property must be of type string.\",\n\t\tNATURE_PROPERTY_STRING_MISCONFIGURED:\n\t\t\t\"The 'nature' property must be a known string.\",\n\t\tNATURE_PROPERTY_ARRAY_MISCONFIGURED:\n\t\t\t\"The array of the 'nature' must have a number of items greater than 0.\",\n\t\tNATURE_PROPERTY_ARRAY_ITEM_MISDECLARED:\n\t\t\t\"The array items of the 'nature' property must be of type string.\",\n\t\tNATURE_PROPERTY_ARRAY_ITEM_MISCONFIGURED:\n\t\t\t\"The array items of the 'nature' property must be known strings.\"\n\t},\n\tnatureBitflags: {\n\t\tBASIC:\t\t\t\t1 << 1,\n\t\tASYNC:\t\t\t\t1 << 2,\n\t\tBASIC_GENERATOR:\t1 << 3,\n\t\tASYNC_GENERATOR:\t1 << 4\n\t},\n\ttagBitflags: {\n\t\tFunction:\t\t\t\t1 << 1,\n\t\tAsyncFunction:\t\t\t1 << 2,\n\t\tGeneratorFunction:\t\t1 << 3,\n\t\tAsyncGeneratorFunction:\t1 << 4\n\t},\n\tmount(chunk, criteria) {\n\t\tconst { nature } = criteria;\n\n\t\tif (nature !== undefined) {\n\t\t\tif (typeof nature == \"string\") {\n\t\t\t\tif (!(nature in this.natureBitflags)) {\n\t\t\t\t\treturn (\"NATURE_PROPERTY_STRING_MISCONFIGURED\");\n\t\t\t\t}\n\t\t\t} else if (isArray(nature)) {\n\t\t\t\tif (nature.length < 1) {\n\t\t\t\t\treturn (\"NATURE_PROPERTY_ARRAY_MISCONFIGURED\");\n\t\t\t\t}\n\t\t\t\tfor (const item of nature) {\n\t\t\t\t\tif (typeof item !== \"string\") {\n\t\t\t\t\t\treturn (\"NATURE_PROPERTY_ARRAY_ITEM_MISCONFIGURED\");\n\t\t\t\t\t}\n\t\t\t\t\tif (!(item in this.natureBitflags)) {\n\t\t\t\t\t\treturn (\"NATURE_PROPERTY_ARRAY_ITEM_MISCONFIGURED\");\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\treturn (\"NATURE_PROPERTY_MISDECLARED\");\n\t\t\t}\n\t\t}\n\n\t\tif (isArray(nature)) {\n\t\t\tObject.assign(criteria, {\n\t\t\t\tnatureBitcode: nature.reduce((code, key) => (\n\t\t\t\t\tcode | this.natureBitflags[key]\n\t\t\t\t), 0)\n\t\t\t});\n\t\t} else {\n\t\t\tObject.assign(criteria, {\n\t\t\t\tnatureBitcode: nature\n\t\t\t\t\t? this.natureBitflags[nature]\n\t\t\t\t\t: 0\n\t\t\t});\n\t\t}\n\n\t\treturn (null);\n\t},\n\tcheck(chunk, criteria, value) {\n\t\tif (typeof value !== \"function\") {\n\t\t\treturn (\"TYPE_FUNCTION_UNSATISFIED\");\n\t\t}\n\n\t\tconst { natureBitcode } = criteria;\n\t\tconst { tagBitflags } = this;\n\n\t\tif (natureBitcode) {\n\t\t\tconst tag = getInternalTag(value) as string;\n\t\t\tconst tagBitflag = tagBitflags[tag];\n\n\t\t\tif (!tagBitflag || !(natureBitcode & tagBitflag)) {\n\t\t\t\treturn (\"NATURE_UNSATISFIED\");\n\t\t\t}\n\t\t}\n\n\t\treturn (null);\n\t}\n}\n","import type { BooleanSetableCriteria, BooleanExceptionCodes, BooleanRejectionCodes } from \"./types\";\nimport type { Format } from \"../types\";\n\nexport const BooleanFormat: Format<\n\tBooleanSetableCriteria,\n\tBooleanExceptionCodes,\n\tBooleanRejectionCodes\n> = {\n\ttype: \"boolean\",\n\texceptions: {\n\t\tLITERAL_PROPERTY_MISDECLARED:\n\t\t\t\"The 'literal' property must be of type boolean.\"\n\t},\n\tmount(chunk, criteria) {\n\t\tconst { literal } = criteria;\n\n\t\tif (literal !== undefined && typeof literal !== \"boolean\") {\n\t\t\treturn (\"LITERAL_PROPERTY_MISDECLARED\");\n\t\t}\n\n\t\treturn (null);\n\t},\n\tcheck(chunk, criteria, value) {\n\t\tif (typeof value !== \"boolean\") {\n\t\t\treturn (\"TYPE_BOOLEAN_UNSATISFIED\");\n\t\t}\n\n\t\tconst { literal } = criteria;\n\n\t\tif (literal !== undefined && literal !== value) {\n\t\t\treturn (\"LITERAL_UNSATISFIED\");\n\t\t}\n\n\t\treturn (null);\n\t}\n}\n","import type { UnknownSetableCriteria } from \"./types\";\nimport type { Format } from \"../types\";\n\nexport const UnknownFormat: Format<UnknownSetableCriteria> = {\n\ttype: \"unknown\",\n\texceptions: {},\n\tmount(chunk, criteria) {\n\t\treturn (null);\n\t},\n\tcheck(chunk, criteria, value) {\n\t\treturn (null);\n\t}\n}","import type { SymbolSetableCriteria, SymbolExceptionCodes, SymbolRejectionCodes } from \"./types\";\nimport type { Format } from \"../types\";\nimport { isPlainObject, isArray, isFunction } from \"../../../testers\";\n\nexport const SymbolFormat: Format<\n\tSymbolSetableCriteria,\n\tSymbolExceptionCodes,\n\tSymbolRejectionCodes\n> = {\n\ttype: \"symbol\",\n\texceptions: {\n\t\tLITERAL_PROPERTY_MISDECLARED:\n\t\t\t\"The 'literal' property must be of type symbol, array or plain object.\",\n\t\tLITERAL_PROPERTY_ARRAY_MISCONFIGURED:\n\t\t\t\"The array of the 'literal' property must have a number of items greater than 0.\",\n\t\tLITERAL_PROPERTY_ARRAY_ITEM_MISDECLARED:\n\t\t\t\"The array items of the 'literal' property must be of type symbol.\",\n\t\tLITERAL_PROPERTY_OBJECT_MISCONFIGURED:\n\t\t\t\"The object of the 'literal' property must must have a number of keys greater than 0.\",\n\t\tLITERAL_PROPERTY_OBJECT_KEY_MISDECLARED:\n\t\t\t\"The object keys of the 'literal' property must be of type string.\",\n\t\tLITERAL_PROPERTY_OBJECT_VALUE_MISDECLARED:\n\t\t\t\"The object values of the 'literal' property must be of type symbol.\",\n\t\tCUSTOM_PROPERTY_MISDECLARED:\n            \"The 'custom' property must be of type basic function.\"\n\t},\n\tmount(chunk, criteria) {\n\t\tconst { literal, custom } = criteria;\n\n\t\tif (literal !== undefined) {\n\t\t\tlet resolvedLiteral;\n\n\t\t\tif (typeof literal === \"symbol\") {\n\t\t\t\tresolvedLiteral = new Set([literal]);\n\t\t\t} else if (isArray(literal)) {\n\t\t\t\tif (literal.length < 1) {\n\t\t\t\t\treturn (\"LITERAL_PROPERTY_ARRAY_MISCONFIGURED\");\n\t\t\t\t}\n\n\t\t\t\tfor (const item of literal) {\n\t\t\t\t\tif (typeof item !== \"symbol\") {\n\t\t\t\t\t\treturn (\"LITERAL_PROPERTY_ARRAY_ITEM_MISDECLARED\");\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tresolvedLiteral = new Set(literal);\n\t\t\t} else if (isPlainObject(literal)) {\n\t\t\t\tconst keys = Reflect.ownKeys(literal);\n\t\t\t\tif (keys.length < 1) {\n\t\t\t\t\treturn (\"LITERAL_PROPERTY_OBJECT_MISCONFIGURED\");\n\t\t\t\t}\n\n\t\t\t\tfor (const key of keys) {\n\t\t\t\t\tif (typeof key !== \"string\") {\n\t\t\t\t\t\treturn (\"LITERAL_PROPERTY_OBJECT_KEY_MISDECLARED\");\n\t\t\t\t\t}\n\t\t\t\t\tif (typeof literal[key] !== \"symbol\") {\n\t\t\t\t\t\treturn (\"LITERAL_PROPERTY_OBJECT_VALUE_MISDECLARED\");\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tresolvedLiteral = new Set(Object.values(literal));\n\t\t\t} else {\n\t\t\t\treturn (\"LITERAL_PROPERTY_MISDECLARED\");\n\t\t\t}\n\n\t\t\tObject.assign(criteria, { resolvedLiteral });\n\t\t}\n\t\tif (custom !== undefined && !isFunction(custom)) {\n\t\t\treturn (\"CUSTOM_PROPERTY_MISDECLARED\");\n\t\t}\n\n\t\treturn (null);\n\t},\n\tcheck(chunk, criteria, value) {\n\t\tif (typeof value !== \"symbol\") {\n\t\t\treturn (\"TYPE_SYMBOL_UNSATISFIED\");\n\t\t}\n\n\t\tconst { resolvedLiteral, custom } = criteria;\n\n\t\tif (resolvedLiteral !== undefined && !resolvedLiteral.has(value)) {\n\t\t\treturn (\"LITERAL_UNSATISFIED\");\n\t\t}\n\t\tif (custom && !custom(value)) {\n\t\t\treturn (\"CUSTOM_UNSATISFIED\");\n\t\t}\n\n\t\treturn (null);\n\t}\n}\n","import type { NumberSetableCriteria, NumberExceptionCodes, NumberRejectionCodes } from \"./types\";\nimport type { Format } from \"../types\";\nimport { isPlainObject, isArray, isFunction } from \"../../../testers\";\n\nexport const NumberFormat: Format<\n\tNumberSetableCriteria,\n\tNumberExceptionCodes,\n\tNumberRejectionCodes\n> = {\n\ttype: \"number\",\n\texceptions: {\n        MIN_PROPERTY_MISDECLARED:\n\t\t    \"The 'min' property must be of type number.\",\n       \tMAX_PROPERTY_MISDECLARED:\n            \"The 'max' property must be of type number.\",\n        MIN_MAX_PROPERTIES_MISCONFIGURED:\n\t\t\t\"The 'max' property cannot be less than 'min' property.\",\n        LITERAL_PROPERTY_MISDECLARED:\n\t\t\t\"The 'literal' property must be of type number, array or plain object.\",\n\t\tLITERAL_PROPERTY_ARRAY_MISCONFIGURED:\n\t\t\t\"The array of the 'literal' property must have a number of items greater than 0.\",\n\t\tLITERAL_PROPERTY_ARRAY_ITEM_MISDECLARED:\n\t\t\t\"The array items of the 'literal' property must be of type number.\",\n\t\tLITERAL_PROPERTY_OBJECT_MISCONFIGURED:\n\t\t\t\"The object of the 'literal' property must have a number of keys greater than 0.\",\n\t\tLITERAL_PROPERTY_OBJECT_KEY_MISDECLARED:\n\t\t\t\"The object keys of the 'literal' property must be of type string.\",\n\t\tLITERAL_PROPERTY_OBJECT_VALUE_MISDECLARED:\n\t\t\t\"The object values of the 'literal' property must be of type number.\",\n        CUSTOM_PROPERTY_MISDECLARED:\n            \"The 'custom' property must be of type basic function.\"\n    },\n\tmount(chunk, criteria) {\n\t\tconst { min, max, literal, custom } = criteria;\n\n\t\tif (min !== undefined && typeof min !== \"number\") {\n\t\t\treturn (\"MIN_PROPERTY_MISDECLARED\");\n\t\t}\n\t\tif (max !== undefined && typeof max !== \"number\") {\n\t\t\treturn (\"MAX_PROPERTY_MISDECLARED\");\n\t\t}\n\t\tif (min !== undefined && max !== undefined && min > max) {\n\t\t\treturn (\"MIN_MAX_PROPERTIES_MISCONFIGURED\");\n\t\t}\n\n\t\tif (literal !== undefined) {\n\t\t\tlet resolvedLiteral;\n\n\t\t\tif (typeof literal === \"number\") {\n\t\t\t\tresolvedLiteral = new Set([literal]);\n\t\t\t} else if (isArray(literal)) {\n\t\t\t\tif (literal.length < 1) {\n\t\t\t\t\treturn (\"LITERAL_PROPERTY_ARRAY_MISCONFIGURED\");\n\t\t\t\t}\n\n\t\t\t\tfor (const item of literal) {\n\t\t\t\t\tif (typeof item !== \"number\") {\n\t\t\t\t\t\treturn (\"LITERAL_PROPERTY_ARRAY_ITEM_MISDECLARED\");\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tresolvedLiteral = new Set(literal);\n\t\t\t} else if (isPlainObject(literal)) {\n\t\t\t\tconst keys = Reflect.ownKeys(literal);\n\t\t\t\tif (keys.length < 1) {\n\t\t\t\t\treturn (\"LITERAL_PROPERTY_OBJECT_MISCONFIGURED\");\n\t\t\t\t}\n\n\t\t\t\tfor (const key of keys) {\n\t\t\t\t\tif (typeof key !== \"string\") {\n\t\t\t\t\t\treturn (\"LITERAL_PROPERTY_OBJECT_KEY_MISDECLARED\");\n\t\t\t\t\t}\n\t\t\t\t\tif (typeof literal[key] !== \"number\") {\n\t\t\t\t\t\treturn (\"LITERAL_PROPERTY_OBJECT_VALUE_MISDECLARED\");\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tresolvedLiteral = new Set(Object.values(literal));\n\t\t\t} else {\n\t\t\t\treturn (\"LITERAL_PROPERTY_MISDECLARED\");\n\t\t\t}\n\n\t\t\tObject.assign(criteria, { resolvedLiteral });\n\t\t}\n\t\tif (custom !== undefined && !isFunction(custom)) {\n\t\t\treturn (\"CUSTOM_PROPERTY_MISDECLARED\");\n\t\t}\n\n\t\treturn (null);\n\t},\n\tcheck(chunk, criteria, value) {\n\t\tif (typeof value !== \"number\") {\n\t\t\treturn (\"TYPE_NUMBER_UNSATISFIED\");\n\t\t}\n\n\t\tconst { min, max, resolvedLiteral, custom } = criteria;\n\n\t\tif (min !== undefined && value < min) {\n\t\t\treturn (\"MIN_UNSATISFIED\");\n\t\t}\n\t\tif (max !== undefined && value > max) {\n\t\t\treturn (\"MAX_UNSATISFIED\");\n\t\t}\n\t\tif (resolvedLiteral !== undefined && !resolvedLiteral.has(value)) {\n\t\t\treturn (\"LITERAL_UNSATISFIED\");\n\t\t}\n\t\tif (custom && !custom(value)) {\n\t\t\treturn (\"CUSTOM_UNSATISFIED\");\n\t\t}\n\n\t\treturn (null);\n\t}\n}\n","import type { StringSetableCriteria, SetableConstraint, StringExceptionCodes, StringRejectionCodes } from \"./types\";\nimport type { Format } from \"../types\";\nimport { isPlainObject, isArray, isFunction, testers } from \"../../../testers\";\n\nconst stringTesters: Map<string, (...args: any[]) => boolean> = new Map(Object.entries(testers.string));\n\nexport const StringFormat: Format<\n\tStringSetableCriteria,\n\tStringExceptionCodes,\n\tStringRejectionCodes\n> = {\n\ttype: \"string\",\n\texceptions: {\n\t\tMIN_PROPERTY_MISDECLARED:\n\t\t\t\"The 'min' property must be of type number.\",\n\t\tMAX_PROPERTY_MISDECLARED:\n\t\t\t\"The 'max' property must be of type number.\",\n\t\tMIN_MAX_PROPERTIES_MISCONFIGURED:\n\t\t\t\"The 'min' property cannot be greater than 'max' property.\",\n\t\tREGEX_PROPERTY_MISDECLARED:\n\t\t\t\"The 'regex' property must be of type RegExp object.\",\n\t\tLITERAL_PROPERTY_MISDECLARED:\n\t\t\t\"The 'literal' property must be of type string, array or plain object.\",\n\t\tLITERAL_PROPERTY_ARRAY_MISCONFIGURED:\n\t\t\t\"The array of the 'literal' property must have a number of items greater than 0.\",\n\t\tLITERAL_PROPERTY_ARRAY_ITEM_MISDECLARED:\n\t\t\t\"The array items of the 'literal' property must be of type String.\",\n\t\tLITERAL_PROPERTY_OBJECT_MISCONFIGURED:\n\t\t\t\"The object of the 'literal' property must have a number of keys greater than 0.\",\n\t\tLITERAL_PROPERTY_OBJECT_KEY_MISDECLARED:\n\t\t\t\"The object keys of the 'literal' property must be of type string.\",\n\t\tLITERAL_PROPERTY_OBJECT_VALUE_MISDECLARED:\n\t\t\t\"The object values of the 'literal' property must be of type string.\",\n\t\tCONSTRAINT_PROPERTY_MISDECLARED:\n\t\t\t\"The 'constraint' property must be of type Plain Object.\",\n\t\tCONSTRAINT_PROPERTY_OBJECT_MISCONFIGURED:\n\t\t\t\"The object of the 'constraint' property must have a number of keys greater than 0.\",\n\t\tCONSTRAINT_PROPERTY_OBJECT_KEY_MISDECLARED:\n\t\t\t\"The object keys of the 'constraint' property must be of type string.\",\n\t\tCONSTRAINT_PROPERTY_OBJECT_KEY_MISCONFIGURED:\n\t\t\t\"The object keys of the 'constraint' property must be a known string.\",\n\t\tCONSTRAINT_PROPERTY_OBJECT_VALUE_MISDECLARED:\n\t\t\t\"The object values of the 'constraint' property must be of type true or plain object.\",\n\t\tCUSTOM_PROPERTY_MISDECLARED:\n\t\t\t\"The 'custom' property must be of type basic function.\"\n\t},\n\tmount(chunk, criteria) {\n\t\tconst { min, max, regex, literal, constraint, custom } = criteria;\n\n\t\tif (min !== undefined && typeof min !== \"number\") {\n\t\t\treturn (\"MIN_PROPERTY_MISDECLARED\");\n\t\t}\n\t\tif (max !== undefined && typeof max !== \"number\") {\n\t\t\treturn (\"MAX_PROPERTY_MISDECLARED\");\n\t\t}\n\t\tif (min !== undefined && max !== undefined && min > max) {\n\t\t\treturn (\"MIN_MAX_PROPERTIES_MISCONFIGURED\");\n\t\t}\n\t\tif (regex !== undefined && !(regex instanceof RegExp)) {\n\t\t\treturn (\"REGEX_PROPERTY_MISDECLARED\");\n\t\t}\n\t\tif (literal !== undefined) {\n\t\t\tlet resolvedLiteral;\n\n\t\t\tif (typeof literal === \"string\") {\n\t\t\t\tresolvedLiteral = new Set([literal]);\n\t\t\t} else if (isArray(literal)) {\n\t\t\t\tif (literal.length < 1) {\n\t\t\t\t\treturn (\"LITERAL_PROPERTY_ARRAY_MISCONFIGURED\");\n\t\t\t\t}\n\n\t\t\t\tfor (const item of literal) {\n\t\t\t\t\tif (typeof item !== \"string\") {\n\t\t\t\t\t\treturn (\"LITERAL_PROPERTY_ARRAY_ITEM_MISDECLARED\");\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tresolvedLiteral = new Set(literal);\n\t\t\t} else if (isPlainObject(literal)) {\n\t\t\t\tconst keys = Reflect.ownKeys(literal);\n\t\t\t\tif (keys.length < 1) {\n\t\t\t\t\treturn (\"LITERAL_PROPERTY_OBJECT_MISCONFIGURED\");\n\t\t\t\t}\n\n\t\t\t\tfor (const key of keys) {\n\t\t\t\t\tif (typeof key !== \"string\") {\n\t\t\t\t\t\treturn (\"LITERAL_PROPERTY_OBJECT_KEY_MISDECLARED\");\n\t\t\t\t\t}\n\t\t\t\t\tif (typeof literal[key] !== \"string\") {\n\t\t\t\t\t\treturn (\"LITERAL_PROPERTY_OBJECT_VALUE_MISDECLARED\");\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tresolvedLiteral = new Set(Object.values(literal));\n\t\t\t} else {\n\t\t\t\treturn (\"LITERAL_PROPERTY_MISDECLARED\");\n\t\t\t}\n\n\t\t\tObject.assign(criteria, { resolvedLiteral });\n\t\t}\n\t\tif (constraint !== undefined) {\n\t\t\tif (isPlainObject(constraint)) {\n\t\t\t\tconst keys = Reflect.ownKeys(constraint);\n\t\t\t\tif (keys.length < 1) {\n\t\t\t\t\treturn (\"CONSTRAINT_PROPERTY_OBJECT_MISCONFIGURED\");\n\t\t\t\t}\n\n\t\t\t\tconst resolvedConstraint = new Map();\n\t\t\t\tfor (const key of keys) {\n\t\t\t\t\tif (typeof key !== \"string\") {\n\t\t\t\t\t\treturn (\"CONSTRAINT_PROPERTY_OBJECT_KEY_MISDECLARED\");\n\t\t\t\t\t}\n\t\t\t\t\tif (!stringTesters.has(key)) {\n\t\t\t\t\t\treturn (\"CONSTRAINT_PROPERTY_OBJECT_KEY_MISCONFIGURED\");\n\t\t\t\t\t}\n\n\t\t\t\t\tconst value = constraint[key as keyof SetableConstraint];\n\t\t\t\t\tif (typeof value !== \"boolean\" && !isPlainObject(value)) {\n\t\t\t\t\t\treturn (\"CONSTRAINT_PROPERTY_OBJECT_VALUE_MISDECLARED\");\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tif (value === false) continue;\n\n\t\t\t\t\tif (value === true) {\n\t\t\t\t\t\tresolvedConstraint.set(key, undefined);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tresolvedConstraint.set(key, value);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tObject.assign(criteria, { resolvedConstraint });\n\t\t\t} else {\n\t\t\t\treturn (\"CONSTRAINT_PROPERTY_MISDECLARED\");\n\t\t\t}\n\t\t}\n\t\tif (custom !== undefined && !isFunction(custom)) {\n\t\t\treturn (\"CUSTOM_PROPERTY_MISDECLARED\");\n\t\t}\n\n\t\treturn (null);\n\t},\n\tcheck(chunk, criteria, value) {\n\t\tif (typeof value !== \"string\") {\n\t\t\treturn (\"TYPE_STRING_UNSATISFIED\");\n\t\t}\n\n\t\tconst { min, max, regex, resolvedLiteral, resolvedConstraint, custom } = criteria;\n\t\tconst valueLength = value.length;\n\n\t\tif (min !== undefined && valueLength < min) {\n\t\t\treturn (\"MIN_UNSATISFIED\");\n\t\t}\n\t\tif (max !== undefined && valueLength > max) {\n\t\t\treturn (\"MAX_UNSATISFIED\");\n\t\t}\n\t\tif (regex !== undefined && !regex.test(value)) {\n\t\t\treturn (\"REGEX_UNSATISFIED\");\n\t\t}\n\t\tif (resolvedLiteral !== undefined && !resolvedLiteral.has(value)) {\n\t\t\treturn (\"LITERAL_UNSATISFIED\");\n\t\t}\n\t\tif (resolvedConstraint !== undefined) {\n\t\t\tlet isAccept = false;\n\n\t\t\tfor (const [key, config] of resolvedConstraint) {\n\t\t\t\tif (stringTesters.get(key)!(value, config)) {\n\t\t\t\t\tisAccept = true;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!isAccept) {\n\t\t\t\treturn (\"CONSTRAINT_UNSATISFIED\");\n\t\t\t}\n\t\t}\n\t\tif (custom && !custom(value)) {\n\t\t\treturn (\"CUSTOM_UNSATISFIED\");\n\t\t}\n\n\t\treturn (null);\n\t}\n}\n","import type { ObjectSetableCriteria, SetableShape, ObjectExceptionCodes, ObjectRejectionCodes, ObjectCustomMembers } from \"./types\";\nimport type { Format } from \"../types\";\nimport { isObject, isPlainObject, isArray } from \"../../../testers\";\n\nexport const ObjectFormat: Format<\n\tObjectSetableCriteria,\n\tObjectExceptionCodes,\n\tObjectRejectionCodes,\n\tObjectCustomMembers\n> = {\n\ttype: \"object\",\n\texceptions: {\n\t\tNATURE_PROPERTY_MISDECLARED:\n\t\t\t\"The 'nature' property must be of type string.\",\n\t\tNATURE_PROPERTY_MISCONFIGURED:\n\t\t\t\"The 'nature' property must be a known string.\",\n\t\tMIN_PROPERTY_MISDECLARED:\n\t\t\t\"The 'min' property must be of type number.\",\n\t\tMAX_PROPERTY_MISDECLARED:\n\t\t\t\"The 'max' property must be of type number.\",\n\t\tMAX_MIN_PROPERTIES_MISCONFIGURED:\n\t\t\t\"The 'max' property cannot be less than 'min' property.\",\n\t\tSHAPE_PROPERTY_MISDECLARED:\n\t\t\t\"The 'shape' property must be of type plain object.\",\n\t\tSHAPE_PROPERTY_OBJECT_VALUE_MISDECLARED:\n\t\t\t\"The object values of the 'shape' property must be of type plain object.\",\n\t\tSHAPE_MIN_PROPERTIES_MISCONFIGURED:\n\t\t\t\"The object of the 'shape' property must have a number of properties less than the 'min' property.\",\n\t\tSHAPE_MAX_PROPERTIES_MISCONFIGURED:\n\t\t\t\"The object of the 'shape' property must have a number of properties less than the 'max' property.\",\n\t\tSHAPE_MIN_MAX_PROPERTIES_KEYS_VALUES_PROPERTIES_UNDEFINED:\n\t\t\t\"The 'shape' property with the 'min' property or/and 'max' property cannot be defined without the 'keys' property or 'values' property.\",\n\t\tOPTIONAL_PROPERTY_MISDECLARED:\n\t\t\t\"The 'optional' property must be of type boolean or array.\",\n\t\tOPTIONAL_PROPERTY_ARRAY_ITEM_MISDECLARED:\n\t\t\t\"The array items of the 'optional' property must be of type string or symbol.\",\n\t\tOPTIONAL_PROPERTY_SHAPE_PROPERTY_UNDEFINED:\n\t\t\t\"The 'optional' property cannot be defined without the 'shape' property.\",\n\t\tKEYS_PROPERTY_MISDECLARED:\n\t\t\t\"The 'keys' property must be of type plain object.\",\n\t\tKEYS_PROPERTY_OBJECT_TYPE_PROPERTY_UNDEFINED:\n\t\t\t\"The object's 'type' property of the 'keys' property must be defined.\",\n\t\tKEYS_PROPERTY_OBJECT_TYPE_PROPERTY_MISDECLARED:\n\t\t\t\"The object's 'type' property of the 'keys' property must be of type string.\",\n\t\tKEYS_PROPERTY_OBJECT_TYPE_PROPERTY_MISCONFIGURED:\n\t\t\t\"The object's 'type' property of the 'keys' property must be 'string' or 'symbol'.\",\n\t\tVALUES_PROPERTY_MISDECLARED:\n\t\t\t\"The 'values' property must be of type plain object.\"\n\t},\n\tnatures: [\"PLAIN\"],\n\tgetUnforcedKeys(optional, declaredKeys) {\n\t\tif (optional === true) return (declaredKeys);\n\t\tif (optional === false) return ([]);\n\n\t\treturn (declaredKeys.filter(key => optional.includes(key)));\n\t},\n\tgetEnforcedKeys(optional, declaredKeys) {\n\t\tif (optional === true) return ([]);\n\t\tif (optional === false) return (declaredKeys);\n\n\t\treturn (declaredKeys.filter(key => !optional.includes(key)));\n\t},\n\tisShorthandShape(obj): obj is SetableShape {\n\t\treturn (isPlainObject(obj) && (!(\"type\" in obj) || typeof obj.type !== \"string\"));\n\t},\n\tmount(chunk, criteria) {\n\t\tconst { nature, min, max, shape, optional, keys, values } = criteria;\n\t\tconst resolvedOptional = optional ?? false;\n\n\t\tif (nature !== undefined) {\n\t\t\tif (typeof nature !== \"string\") {\n\t\t\t\treturn (\"NATURE_PROPERTY_MISDECLARED\");\n\t\t\t}\n\t\t\tif (!this.natures.includes(nature)) {\n\t\t\t\treturn (\"NATURE_PROPERTY_MISCONFIGURED\");\n\t\t\t}\n\t\t}\n\t\tif (min !== undefined && typeof min !== \"number\") {\n\t\t\treturn (\"MIN_PROPERTY_MISDECLARED\");\n\t\t}\n\t\tif (max !== undefined && typeof max !== \"number\") {\n\t\t\treturn (\"MAX_PROPERTY_MISDECLARED\");\n\t\t}\n\t\tif (min !== undefined && max !== undefined && min > max) {\n\t\t\treturn (\"MAX_MIN_PROPERTIES_MISCONFIGURED\");\n\t\t}\n\t\tif (shape !== undefined) {\n\t\t\tif (!isPlainObject(shape)) {\n\t\t\t\treturn (\"SHAPE_PROPERTY_MISDECLARED\");\n\t\t\t}\n\t\t\tif (\n\t\t\t\t(min !== undefined || max !== undefined)\n\t\t\t\t&& !(\"keys\" in criteria)\n\t\t\t\t&& !(\"values\" in criteria)\n\t\t\t) {\n\t\t\t\treturn (\"SHAPE_MIN_MAX_PROPERTIES_KEYS_VALUES_PROPERTIES_UNDEFINED\");\n\t\t\t}\n\n\t\t\tconst shapeKeys = Reflect.ownKeys(shape);\n\t\t\tconst shapeKeysLength = shapeKeys.length;\n\n\t\t\tif (min !== undefined &&  min < shapeKeysLength) {\n\t\t\t\treturn (\"SHAPE_MIN_PROPERTIES_MISCONFIGURED\");\n\t\t\t}\n\t\t\tif (max !== undefined &&  max < shapeKeysLength) {\n\t\t\t\treturn (\"SHAPE_MAX_PROPERTIES_MISCONFIGURED\");\n\t\t\t}\n\n\t\t\tfor (let i = 0; i < shapeKeysLength; i++) {\n\t\t\t\tconst key = shapeKeys[i];\n\t\t\t\tlet node = shape[key];\n\n\t\t\t\tif (!isPlainObject(node)) {\n\t\t\t\t\treturn (\"SHAPE_PROPERTY_OBJECT_VALUE_MISDECLARED\");\n\t\t\t\t}\n\n\t\t\t\tif (this.isShorthandShape(node)) {\n\t\t\t\t\tnode = {\n\t\t\t\t\t\ttype: \"object\",\n\t\t\t\t\t\tshape: node\n\t\t\t\t\t}\n\t\t\t\t\tshape[key] = node;\n\t\t\t\t}\n\n\t\t\t\tchunk.push({\n\t\t\t\t\tnode: node,\n\t\t\t\t\tpartPath: {\n\t\t\t\t\t\texplicit: [\"shape\", key],\n\t\t\t\t\t\timplicit: [\"&\", key]\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tObject.assign(criteria, {\n\t\t\t\tdeclaredKeySet: new Set(shapeKeys),\n\t\t\t\tunforcedKeySet: new Set(this.getUnforcedKeys(resolvedOptional, shapeKeys)),\n\t\t\t\tenforcedKeySet: new Set(this.getEnforcedKeys(resolvedOptional, shapeKeys))\n\t\t\t});\n\t\t}\n\t\tif (optional !== undefined) {\n\t\t\tif (isArray(optional)) {\n\t\t\t\tfor (const item of optional) {\n\t\t\t\t\tif (typeof item !== \"string\" && typeof item !== \"symbol\") {\n\t\t\t\t\t\treturn (\"OPTIONAL_PROPERTY_ARRAY_ITEM_MISDECLARED\");\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (typeof optional !== \"boolean\") {\n\t\t\t\treturn (\"OPTIONAL_PROPERTY_MISDECLARED\");\n\t\t\t}\n\n\t\t\tif (shape === undefined) {\n\t\t\t\treturn (\"OPTIONAL_PROPERTY_SHAPE_PROPERTY_UNDEFINED\");\n\t\t\t}\n\n\t\t\tObject.assign(criteria, {\n\t\t\t\toptional: resolvedOptional\n\t\t\t});\n\t\t}\n\t\tif (keys !== undefined) {\n\t\t\tif (!isPlainObject(keys)) {\n\t\t\t\treturn (\"KEYS_PROPERTY_MISDECLARED\");\n\t\t\t}\n\t\t\tif (!(\"type\" in keys)) {\n\t\t\t\treturn (\"KEYS_PROPERTY_OBJECT_TYPE_PROPERTY_UNDEFINED\");\n\t\t\t}\n\t\t\tif (typeof keys.type !== \"string\") {\n\t\t\t\treturn (\"KEYS_PROPERTY_OBJECT_TYPE_PROPERTY_MISDECLARED\");\n\t\t\t}\n\t\t\tif (keys.type !== \"string\" && keys.type !== \"symbol\") {\n\t\t\t\treturn (\"KEYS_PROPERTY_OBJECT_TYPE_PROPERTY_MISCONFIGURED\");\n\t\t\t}\n\n\t\t\tchunk.push({\n\t\t\t\tnode: keys,\n\t\t\t\tpartPath: {\n\t\t\t\t\texplicit: [\"keys\"],\n\t\t\t\t\timplicit: []\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\tif (values !== undefined) {\n\t\t\tif (!isPlainObject(values)) {\n\t\t\t\treturn (\"VALUES_PROPERTY_MISDECLARED\");\n\t\t\t}\n\n\t\t\tchunk.push({\n\t\t\t\tnode: values,\n\t\t\t\tpartPath: {\n\t\t\t\t\texplicit: [\"values\"],\n\t\t\t\t\timplicit: [\"%\", \"string\", \"symbol\"]\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\treturn (null);\n\t},\n\tcheck(chunk, criteria, data) {\n\t\tif (!isObject(data)) {\n\t\t\treturn (\"TYPE_OBJECT_UNSATISFIED\");\n\t\t}\n\n\t\tconst {\n\t\t\tnature, min, max, shape, keys, values,\n\t\t\tdeclaredKeySet, unforcedKeySet, enforcedKeySet\n\t\t} = criteria;\n\n\t\tif (nature === \"PLAIN\" && !isPlainObject(data)) {\n\t\t\treturn (\"NATURE_PLAIN_UNSATISFIED\");\n\t\t}\n\n\t\tconst definedKeyArray = Reflect.ownKeys(data);\n\t\tconst definedKeyCount = definedKeyArray.length;\n\n\t\tif (min !== undefined && definedKeyCount < min) {\n\t\t\treturn (\"MIN_UNSATISFIED\");\n\t\t}\n\t\tif (max !== undefined && definedKeyCount > max) {\n\t\t\treturn (\"MAX_UNSATISFIED\");\n\t\t}\n\t\tif (shape !== undefined) {\n\t\t\tconst declaredKeyCount = declaredKeySet!.size;\n\t\t\tconst enforcedKeyCount = enforcedKeySet!.size;\n\n\t\t\tif (definedKeyCount < enforcedKeyCount) {\n\t\t\t\treturn (\"SHAPE_UNSATISFIED\");\n\t\t\t}\n\n\t\t\tif (keys === undefined && values === undefined) {\n\t\t\t\tif (definedKeyCount > declaredKeyCount) {\n\t\t\t\t\treturn (\"SHAPE_UNSATISFIED\");\n\t\t\t\t}\n\n\t\t\t\tlet enforcedMissing = enforcedKeyCount;\n\t\t\t\tfor (let i = 0; i < definedKeyCount; i++) {\n\t\t\t\t\tconst key = definedKeyArray[i];\n\n\t\t\t\t\tif (enforcedKeySet!.has(key)) {\n\t\t\t\t\t\tenforcedMissing--;\n\t\t\t\t\t}\n\t\t\t\t\telse if (enforcedMissing > i) {\n\t\t\t\t\t\treturn (\"SHAPE_UNSATISFIED\");\n\t\t\t\t\t}\n\t\t\t\t\telse if (!unforcedKeySet!.has(key)) {\n\t\t\t\t\t\treturn (\"SHAPE_UNSATISFIED\");\n\t\t\t\t\t}\n\n\t\t\t\t\tchunk.push({\n\t\t\t\t\t\tdata: data[key],\n\t\t\t\t\t\tnode: shape[key]\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tlet enforcedMissing = enforcedKeyCount;\n\t\t\t\tfor (let i = 0; i < definedKeyCount; i++) {\n\t\t\t\t\tconst key = definedKeyArray[i];\n\n\t\t\t\t\tif (enforcedKeySet!.has(key)) {\n\t\t\t\t\t\tenforcedMissing--;\n\t\t\t\t\t}\n\t\t\t\t\telse if (enforcedMissing > i) {\n\t\t\t\t\t\treturn (\"SHAPE_UNSATISFIED\");\n\t\t\t\t\t}\n\t\t\t\t\telse if (!unforcedKeySet!.has(key)) {\n\t\t\t\t\t\tif (keys !== undefined) {\n\t\t\t\t\t\t\tchunk.push({\n\t\t\t\t\t\t\t\tdata: key,\n\t\t\t\t\t\t\t\tnode: keys\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (values !== undefined) {\n\t\t\t\t\t\t\tchunk.push({\n\t\t\t\t\t\t\t\tdata: data[key],\n\t\t\t\t\t\t\t\tnode: values\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\tchunk.push({\n\t\t\t\t\t\tdata: data[key],\n\t\t\t\t\t\tnode: shape[key]\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (shape === undefined && keys !== undefined) {\n\t\t\tfor (let i = 0; i < definedKeyCount; i++) {\n\t\t\t\tconst key = definedKeyArray[i];\n\n\t\t\t\tchunk.push({\n\t\t\t\t\tdata: key,\n\t\t\t\t\tnode: keys\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t\tif (shape === undefined && values !== undefined) {\n\t\t\tfor (let i = 0; i < definedKeyCount; i++) {\n\t\t\t\tconst key = definedKeyArray[i];\n\n\t\t\t\tchunk.push({\n\t\t\t\t\tdata: data[key],\n\t\t\t\t\tnode: values\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\treturn (null);\n\t}\n}","import type { ArraySetableCriteria, SetableTuple, ArrayExceptionCodes, ArrayRejectionCodes, ArrayCustomMembers } from \"./types\";\nimport type { Format } from \"../types\";\nimport { isPlainObject, isArray } from \"../../../testers\";\n\nexport const ArrayFormat: Format<\n\tArraySetableCriteria,\n\tArrayExceptionCodes,\n\tArrayRejectionCodes,\n\tArrayCustomMembers\n> = {\n\ttype: \"array\",\n\texceptions: {\n\t\tMIN_PROPERTY_MISDECLARED:\n\t\t\t\"The 'min' property must be of type number.\",\n\t\tMAX_PROPERTY_MISDECLARED:\n\t\t\t\"The 'max' property must be of type number.\",\n\t\tMIN_MAX_PROPERTIES_MISCONFIGURED:\n\t\t\t\"The 'max' property cannot be less than 'min' property.\",\n\t\tTUPLE_PROPERTY_MISDECLARED:\n\t\t\t\"The 'tuple' property must be of type array.\",\n\t\tTUPLE_PROPERTY_ARRAY_ITEM_MISDECLARED:\n\t\t\t\"The array items of the 'tuple' property must be of type array or plain object.\",\n\t\tTUPLE_MIN_PROPERTIES_MISCONFIGURED:\n\t\t\t\"The array of the 'tuple' property must have a number of items less than the 'min' property.\",\n\t\tTUPLE_MAX_PROPERTIES_MISCONFIGURED:\n\t\t\t\"The array of the 'tuple' property must have a number of items less than the 'max' property.\",\n\t\tTUPLE_MIN_MAX_PROPERTIES_ITEMS_PROPERTY_UNDEFINED:\n\t\t\t\"The 'tuple' property with the 'min' property or/and 'max' property cannot be defined without the 'items' property.\",\n\t\tITEMS_PROPERTY_MISDECLARED:\n\t\t\t\"The 'items' property must be of type object.\"\n\t},\n\tisShorthandTuple(obj): obj is SetableTuple {\n\t\treturn (isArray(obj));\n\t},\n\tmount(chunk, criteria) {\n\t\tconst { min, max, tuple, items } = criteria;\n\n\t\tif (min !== undefined && typeof min !== \"number\") {\n\t\t\treturn (\"MIN_PROPERTY_MISDECLARED\");\n\t\t}\n\t\tif (max !== undefined && typeof max !== \"number\") {\n\t\t\treturn (\"MAX_PROPERTY_MISDECLARED\");\n\t\t}\n\t\tif (min !== undefined && max !== undefined && min > max) {\n\t\t\treturn (\"MIN_MAX_PROPERTIES_MISCONFIGURED\");\n\t\t}\n\t\tif (tuple !== undefined) {\n\t\t\tif (!isArray(tuple)) {\n\t\t\t\treturn (\"TUPLE_PROPERTY_MISDECLARED\");\n\t\t\t}\n\t\t\tif ((min !== undefined || max !== undefined) && !(\"items\" in criteria)) {\n\t\t\t\treturn (\"TUPLE_MIN_MAX_PROPERTIES_ITEMS_PROPERTY_UNDEFINED\");\n\t\t\t}\n\n\t\t\tconst tupleLength = tuple.length;\n\n\t\t\tif (min !== undefined && min < tupleLength) {\n\t\t\t\treturn (\"TUPLE_MIN_PROPERTIES_MISCONFIGURED\");\n\t\t\t}\n\t\t\tif (max !== undefined && max < tupleLength) {\n\t\t\t\treturn (\"TUPLE_MAX_PROPERTIES_MISCONFIGURED\");\n\t\t\t}\n\n\t\t\tfor (let i = 0; i < tupleLength; i++) {\n\t\t\t\tlet node = tuple[i];\n\n\t\t\t\tif (!isPlainObject(node) && !isArray(node)) {\n\t\t\t\t\treturn (\"TUPLE_PROPERTY_ARRAY_ITEM_MISDECLARED\");\n\t\t\t\t}\n\n\t\t\t\tif (this.isShorthandTuple(node)) {\n\t\t\t\t\tnode = {\n\t\t\t\t\t\ttype: \"array\",\n\t\t\t\t\t\ttuple: node\n\t\t\t\t\t}\n\t\t\t\t\ttuple[i] = node;\n\t\t\t\t}\n\n\t\t\t\tchunk.push({\n\t\t\t\t\tnode: node,\n\t\t\t\t\tpartPath: {\n\t\t\t\t\t\texplicit: [\"tuple\", i],\n\t\t\t\t\t\timplicit: [\"&\", i]\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t\tif (items !== undefined) {\n\t\t\tif (!isPlainObject(items)) {\n\t\t\t\treturn (\"ITEMS_PROPERTY_MISDECLARED\");\n\t\t\t}\n\n\t\t\tif (items.type !== \"unknown\") {\n\t\t\t\tchunk.push({\n\t\t\t\t\tnode: items,\n\t\t\t\t\tpartPath: {\n\t\t\t\t\t\texplicit: [\"items\"],\n\t\t\t\t\t\timplicit: [\"%\", \"number\"]\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\treturn (null);\n\t},\n\tcheck(chunk, criteria, data) {\n\t\tif (!isArray(data)) {\n\t\t\treturn (\"TYPE_ARRAY_UNSATISFIED\");\n\t\t}\n\n\t\tconst { min, max, tuple, items } = criteria;\n\t\tconst declaredLength = tuple?.length ?? 0;\n\t\tconst definedLength = data.length;\n\n\t\tif (min !== undefined && definedLength < min) {\n\t\t\treturn (\"MIN_UNSATISFIED\");\n\t\t}\n\t\tif (max !== undefined && definedLength > max) {\n\t\t\treturn (\"MAX_UNSATISFIED\");\n\t\t}\n\t\tif (tuple !== undefined) {\n\t\t\tif (definedLength < declaredLength) {\n\t\t\t\treturn (\"TUPLE_UNSATISFIED\");\n\t\t\t}\n\t\t\tif (!items && definedLength > declaredLength) {\n\t\t\t\treturn (\"TUPLE_UNSATISFIED\");\n\t\t\t}\n\n\t\t\tfor (let i = 0; i < declaredLength; i++) {\n\t\t\t\tchunk.push({\n\t\t\t\t\tdata: data[i],\n\t\t\t\t\tnode: tuple[i]\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t\tif (items !== undefined) {\n\t\t\tif (declaredLength === definedLength || items.type === \"unknown\") {\n\t\t\t\treturn (null);\n\t\t\t}\n\n\t\t\tfor (let i = declaredLength; i < definedLength; i++) {\n\t\t\t\tchunk.push({\n\t\t\t\t\tdata: data[i],\n\t\t\t\t\tnode: items\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\treturn (null);\n\t}\n}\n","import type { UnionSetableCriteria, UnionExceptionCodes, UnionRejectionCodes } from \"./types\";\nimport type { CheckerChunkTaskHook } from \"../../services\";\nimport type { Format } from \"../types\";\nimport { isPlainObject, isArray } from \"../../../testers\";\n\nexport const UnionFormat: Format<UnionSetableCriteria, UnionExceptionCodes> = {\n\ttype: \"union\",\n\texceptions: {\n\t\tUNION_PROPERTY_UNDEFINED:\n            \"The 'union' property must be defined.\",\n       \tUNION_PROPERTY_MISDECLARED:\n\t\t\t\"The 'union' property must be of type array.\",\n\t\tUNION_PROPERTY_ARRAY_MISCONFIGURED:\n\t\t\t\"The array of the 'union' property must have a number of items greater than 0.\",\n        UNION_PROPERTY_ARRAY_ITEM_MISDECLARED:\n            \"The array items of the 'union' property must be of type plain object.\",\n    },\n\tmount(chunk, criteria) {\n\t\tif (!(\"union\" in criteria)) {\n\t\t\treturn (\"UNION_PROPERTY_UNDEFINED\");\n\t\t}\n\n\t\tconst union = criteria.union;\n\t\tconst unionLength = union.length;\n\n\t\tif (!isArray(union)) {\n\t\t\treturn (\"UNION_PROPERTY_MISDECLARED\");\n\t\t}\n\t\tif (unionLength < 1) {\n\t\t\treturn (\"UNION_PROPERTY_ARRAY_MISCONFIGURED\");\n\t\t}\n\n\t\tfor (let i = 0; i < unionLength; i++) {\n\t\t\tconst node = union[i];\n\n\t\t\tif (!isPlainObject(node) && !isArray(node)) {\n\t\t\t\treturn (\"UNION_PROPERTY_ARRAY_ITEM_MISDECLARED\");\n\t\t\t}\n\n\t\t\tchunk.push({\n\t\t\t\tnode: node,\n\t\t\t\tpartPath: {\n\t\t\t\t\texplicit: [\"union\", i]\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\treturn (null);\n\t},\n\tcheck(chunk, criteria, data) {\n\t\tconst union = criteria.union;\n\t\tconst unionLength = union.length;\n\n\t\tlet rejectionCount = 0;\n\t\tconst hook: CheckerChunkTaskHook<UnionRejectionCodes> = {\n\t\t\tonAccept() {\n\t\t\t\treturn ({\n\t\t\t\t\taction: \"CANCEL\",\n\t\t\t\t\ttarget: \"CHUNK\"\n\t\t\t\t});\n\t\t\t},\n\t\t\tonReject() {\n\t\t\t\tif (++rejectionCount === unionLength) {\n\t\t\t\t\treturn ({\n\t\t\t\t\t\taction: \"REJECT\",\n\t\t\t\t\t\tcode: \"UNION_UNSATISFIED\"\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\treturn ({\n\t\t\t\t\taction: \"CANCEL\",\n\t\t\t\t\ttarget: \"BRANCH\"\n\t\t\t\t});\n\t\t\t}\n\t\t};\n\n\t\tfor (let i = 0; i < unionLength; i++) {\n\t\t\tchunk.push({\n\t\t\t\thook,\n\t\t\t\tdata,\n\t\t\t\tnode: union[i],\n\t\t\t});\n\t\t}\n\n\t\treturn (null);\n\t}\n}\n","import type { NullSetableCriteria, NullRejectionCodes } from \"./types\";\nimport type { Format } from \"../types\";\n\nexport const NullFormat: Format<\n\tNullSetableCriteria,\n\tnever,\n\tNullRejectionCodes\n> = {\n\ttype: \"null\",\n\texceptions: {},\n\tmount(chunk, criteria) {\n\t\treturn (null);\n\t},\n\tcheck(chunk, criteria, value) {\n\t\tif (value !== null) {\n\t\t\treturn (\"TYPE_NULL_UNSATISFIED\");\n\t\t}\n\n\t\treturn (null);\n\t}\n}\n","import { UndefinedFormat } from \"./undefined/format\";\nimport { FunctionFormat } from \"./function/format\";\nimport { BooleanFormat } from \"./boolean/format\";\nimport { UnknownFormat } from \"./unknown/format\";\nimport { SymbolFormat } from \"./symbol/format\";\nimport { NumberFormat } from \"./number/format\";\nimport { StringFormat } from \"./string/format\";\nimport { ObjectFormat } from \"./object/format\";\nimport { ArrayFormat } from \"./array/format\";\nimport { UnionFormat } from \"./union/format\";\nimport { NullFormat } from \"./null/format\";\n\nexport const formatNatives = [\n\tUndefinedFormat,\n\tFunctionFormat,\n\tBooleanFormat,\n\tUnknownFormat,\n\tSymbolFormat,\n\tNumberFormat,\n\tStringFormat,\n\tObjectFormat,\n\tArrayFormat,\n\tUnionFormat,\n\tNullFormat\n];","import type { SetableCriteria, MountedCriteria, GuardedCriteria, FormatNativeTypes } from \"./formats\";\nimport type { SchemaEvaluateResult } from \"./types\";\nimport { EventsManager, FormatsManager } from \"./managers\";\nimport { cloner, mounter, checker } from \"./services\";\nimport { SchemaException } from \"./utils\";\nimport { formatNatives } from \"./formats\";\nimport { isPlainObject } from \"../testers\";\n\n/**\n * The `Schema` class is used to define and validate data structures, ensuring they conform to criteria node.\n */\nexport class Schema<const T extends SetableCriteria = SetableCriteria<FormatNativeTypes>> {\n\tprivate mountedCriteria: MountedCriteria<T> | undefined;\n\n\tprotected managers = {\n\t\tformats: new FormatsManager(),\n\t\tevents: new EventsManager()\n\t}\n\n\tprotected initiate(criteria: T) {\n\t\tif (!isPlainObject(criteria)) {\n\t\t\tthrow new SchemaException(\n\t\t\t\t\"The 'criteria' parameter must be of type plain object.\"\n\t\t\t);\n\t\t}\n\n\t\tthis.managers.formats.add(formatNatives);\n\t\tthis.mountedCriteria = mounter(this.managers, cloner(criteria));\n\t}\n\n\tconstructor(criteria: T) {\n\t\t// Deferred initiation of criteria if not called directly,\n\t\t// as plugins (or custom extensions) may set up specific\n\t\t// rules and actions for the preparation of the criteria.\n\t\tif (new.target === Schema) this.initiate(criteria);\n\t}\n\n\t/**\n\t * Properties representing the root of the mounted criteria,\n\t * which can be used in other schemas.\n\t */\n\tget criteria(): MountedCriteria<T> {\n\t\tif (!this.mountedCriteria) {\n\t\t\tthrow new SchemaException(\n\t\t\t\t\"The 'mountedCriteria' class property is not initialized.\"\n\t\t\t);\n\t\t}\n\t\treturn (this.mountedCriteria);\n\t}\n\n\t/**\n\t * Validates the provided data against the schema.\n\t * \n\t * @param data - The data to be validated.\n\t * \n\t * @returns A boolean.\n\t */\n\tvalidate(data: unknown): data is GuardedCriteria<MountedCriteria<T>> {\n\t\treturn (checker(this.managers, this.criteria, data).success);\n\t}\n\n\t/**\n\t * Evaluates the provided data against the schema.\n\t *\n\t * @param data - The data to be evaluated.\n\t */\n\tevaluate(data: unknown): SchemaEvaluateResult<GuardedCriteria<MountedCriteria<T>>> {\n\t\treturn (checker(this.managers, this.criteria, data));\n\t}\n\n\tpublic listener = {\n\t\ton: this.managers.events.on,\n\t\toff: this.managers.events.off\n\t}\n}\n\nconst objectSchema = new Schema({\n\ttype: \"object\",\n\tshape: {\n\t\tfoo: { type: \"string\" }\n\t},\n\tvalues: {\n\t\ttype: \"array\",\n\t\ttuple: [{ type: \"string\" }]\n\t}\n});\n","export class Issue extends Error {\n\tconstructor(\n\t\tcontext: string,\n\t\tmessage: string,\n\t\tstack?: string,\n\t\tplugin?: string\n\t) {\n\t\tsuper(message);\n\n\t\tconst red = \"\\x1b[31m\", cyan = \"\\x1b[36m\", gray = \"\\x1b[90m\", reset = \"\\x1b[0m\";\n\t\tconst emitter = \"Valia\" + (plugin ? \":\" + plugin : \"\");\n\t\tconst timestamp = new Date().toISOString();\n\n\t\tthis.message =\n\t\t\t`\\n${red}[Error]${reset} ${cyan}[${emitter}]${reset} ${gray}${timestamp}${reset}` +\n\t\t\t`\\nContext: ${context}` +\n\t\t\t`\\nMessage: ${message}`;\n\t}\n\n\ttoString() {\n\n   \t\treturn `[Error] [Valia] ${new Date().toISOString()}\\nContext: test`;\n  \t}\t\n}\n\nexport function printMemory() {\n\tconst memoryUsage = process.memoryUsage();\n\tconsole.log(\n\t\t`Heap Total: ${memoryUsage.heapTotal / 1024 / 1024} MB\\n` +\n\t\t`Heap Used: ${memoryUsage.heapUsed / 1024 / 1024} MB\\n` +\n\t\t`External: ${memoryUsage.external / 1024 / 1024} MB\\n` +\n\t\t`RSS: ${memoryUsage.rss / 1024 / 1024} MB`\n\t);\n}","import type { SetableCriteria, FormatNativeTypes } from \"./formats\";\nimport type { SchemaPlugin, SchemaInstance } from \"./types\";\nimport { Schema } from \"./schema\";\nimport { Issue } from \"../utils\";\n\ntype MixinPluginsCriteria<\n\tP1C, P1M extends SchemaPlugin,\n\tP2C, P2M extends SchemaPlugin,\n\tP3C, P3M extends SchemaPlugin\n> = (\n\t// CHECK THAT 'P1C' IS NOT UNDEFINED\n\tP1C extends SetableCriteria\n\t\t// CHECK THAT 'P2C' IS NOT UNDEFINED\n\t\t? P2C extends SetableCriteria\n\t\t\t// CHECK THAT 'P3C' IS NOT UNDEFINED\n\t\t\t? P3C extends SetableCriteria\n\t\t\t\t// EXTENDS NECESSARY BECAUSE 'P3C' MAY CONTAIN UNAVAILABLE CRITERIA\n\t\t\t\t? SetableCriteria extends P3C\n\t\t\t\t\t? P1C | P2C | P3C\n\t\t\t\t\t: SetableCriteria<(P1M['formats'] | P2M['formats'] | P3M['formats'])[number]['type'] | FormatNativeTypes>\n\t\t\t\t// EXTENDS NECESSARY BECAUSE 'P2C' MAY CONTAIN UNAVAILABLE CRITERIA\n\t\t\t\t: SetableCriteria extends P2C\n\t\t\t\t\t? P1C | P2C\n\t\t\t\t\t: SetableCriteria<(P1M['formats'] | P2M['formats'])[number]['type'] | FormatNativeTypes>\n\t\t\t// EXTENDS NECESSARY BECAUSE 'P1C' MAY CONTAIN UNAVAILABLE CRITERIA\n\t\t\t: SetableCriteria extends P1C\n\t\t\t\t? P1C\n\t\t\t\t: SetableCriteria<P1M['formats'][number]['type'] | FormatNativeTypes>\n\t\t: never\n);\n\ntype MixinSchemaPlugin<\n\tP1C, P1M extends SchemaPlugin,\n\tP2C, P2M extends SchemaPlugin,\n\tP3C, P3M extends SchemaPlugin\n> =\n\t// CHECK THAT 'P1C' IS NOT UNDEFINED\n\tP1C extends SetableCriteria\n\t\t// CHECK THAT 'P2C' IS NOT UNDEFINED\n\t\t? P2C extends SetableCriteria\n\t\t\t// CHECK THAT 'P3C' IS NOT UNDEFINED\n\t\t\t? P3C extends SetableCriteria\n\t\t\t\t? SchemaInstance<P1C & P2C & P3C> & P1M & P2M & P3M\n\t\t\t\t: SchemaInstance<P1C & P2C> & P1M & P2M\n\t\t\t: SchemaInstance<P1C> & P1M\n\t\t: never;\n\ntype MixinPlugins<\n\tP1C, P1M extends SchemaPlugin,\n\tP2C, P2M extends SchemaPlugin,\n\tP3C, P3M extends SchemaPlugin\n> = new (...args: [MixinPluginsCriteria<P1C, P1M, P2C, P2M, P3C, P3M>]) => Omit<MixinSchemaPlugin<P1C, P1M, P2C, P2M, P3C, P3M>, \"formats\">;\n\nexport function SchemaFactory<\n\tP1C extends SetableCriteria, P1M extends SchemaPlugin,\n\tP2C = unknown, P2M extends SchemaPlugin = never,\n\tP3C = unknown, P3M extends SchemaPlugin = never\n>(\n\tplugin1: (...args: [P1C]) => P1M,\n\tplugin2?: (...args: [P2C]) => P2M,\n\tplugin3?: (...args: [P3C]) => P3M\n): MixinPlugins<P1C, P1M, P2C, P2M, P3C, P3M> {\n\treturn class <const T extends P1C & P2C & P3C> extends Schema<T> {\n\t\tconstructor(criteria: T) {\n\t\t\tsuper(criteria);\n\n\t\t\tconst assignPlugin = (plugin: SchemaPlugin) => {\n\t\t\t\tconst { formats, ...members } = plugin;\n\n\t\t\t\tfor (const key in members) {\n\t\t\t\t\tif (key in this) throw new Issue(\n\t\t\t\t\t\t\"Schema Factory\",\n\t\t\t\t\t\t`Conflictual keys: '${key}'`\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\tObject.assign(this, members);\n\t\t\t\tthis.managers.formats.add(formats);\n\t\t\t};\n\n\t\t\tassignPlugin(plugin1.call(this, criteria));\n\t\t\tif (plugin2) assignPlugin(plugin2.call(this, criteria));\n\t\t\tif (plugin3) assignPlugin(plugin3.call(this, criteria));\n\n\t\t\tthis.initiate(criteria);\n\t\t}\n\t} as any;\n}\n\n/*\nimport type { SetableCriteriaTemplate, GuardedCriteria, Format } from \"./formats\";\nimport { SpecTypesTemplate, FlowTypesTemplate } from \"./formats/types\";\n\nexport interface MongoIdSetableCriteria extends SetableCriteriaTemplate<\"mongoId\"> {\n\tmongoParam: boolean;\n}\n\nexport interface MongoIdSpecTypes extends SpecTypesTemplate<\n\tMongoIdSetableCriteria,\n\t{}\n> {}\n\nexport interface MongoIdFlowTypes extends FlowTypesTemplate<\n\t{},\n\tstring\n> {}\n\ndeclare module './formats/types' {\n\tinterface FormatSpecTypes {\n\t\tmongoId: MongoIdSpecTypes;\n\t}\n\tinterface FormatFlowTypes<T extends SetableCriteria> {\n\t\tmongoId: T extends MongoIdSetableCriteria ? MongoIdFlowTypes : never;\n\t}\n}\n\nconst MongoIdFormat: Format<MongoIdSetableCriteria> = {\n\ttype: \"mongoId\",\n\tdefaultCriteria: {},\n\tmount(chunk, criteria) {\n\t\t\n\t},\n\tcheck(chunk, criteria, value) {\n\t\treturn (null);\n\t},\n}\n\nfunction plugin_A<T extends SetableCriteria>(this: SchemaInstance<T>, definedCriteria: T) {\n\treturn ({\n\t\tformats: [MongoIdFormat],\n\t\tmongo(data: GuardedCriteria<T>) {\n\t\t\t\n\t\t}\n\t} satisfies SchemaPlugin);\n}\n\nconst SchemaA = SchemaFactory(plugin_A);\n\nconst InstanceA = new SchemaA({ type: \"mongoId\", mongoParam: true });\n*/"],"names":["stringTesters"],"mappings":"AAGM,MAAO,eAAgB,SAAQ,KAAK,CAAA;AAGzC,IAAA,WAAA,CAAY,OAAe,EAAA;QACpB,KAAK,CAAC,OAAO,CAAC;QAHlB,IAAI,CAAA,IAAA,GAAG,iBAAiB;;AAK3B;AAEK,MAAO,mBAAoB,SAAQ,KAAK,CAAA;AAe7C,IAAA,WAAA,CACO,IAAY,EACZ,OAAe,EACf,IAAqB,EACrB,QAAkB,EAAA;QAElB,KAAK,CAAC,OAAO,CAAC;QApBlB,IAAI,CAAA,IAAA,GAAG,qBAAqB;AAsBxB,QAAA,IAAI,CAAC,IAAI,GAAG,IAAI;AAChB,QAAA,IAAI,CAAC,IAAI,GAAG,IAAI;AAChB,QAAA,IAAI,CAAC,QAAQ,GAAG,QAAQ;;AAE/B;MAEY,mBAAmB,CAAA;IAwC/B,WACO,CAAA,QAAiB,EACjB,QAAyB,EACzB,IAAY,EACZ,IAAa,EACb,IAAqB,EACrB,QAAkB,EAAA;AAElB,QAAA,IAAI,CAAC,QAAQ,GAAG,QAAQ;AACxB,QAAA,IAAI,CAAC,QAAQ,GAAG,QAAQ;AACxB,QAAA,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC,KAAK;AAC/B,QAAA,IAAI,CAAC,IAAI,GAAG,IAAI;AAChB,QAAA,IAAI,CAAC,IAAI,GAAG,IAAI;AAChB,QAAA,IAAI,CAAC,IAAI,GAAG,IAAI;AAChB,QAAA,IAAI,CAAC,QAAQ,GAAG,QAAQ;AACxB,QAAA,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK;AAEvB,QAAA,IAAI,OAAO,IAAI,CAAC,OAAO,KAAK,UAAU,EAAE;AACpC,YAAA,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CACvB,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,QAAQ,CAC7B;;aACE;AACH,YAAA,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO;;;AAGtC;MAEY,mBAAmB,CAAA;IAc/B,WACO,CAAA,IAAiB,EACjB,IAAqB,EAAA;AAErB,QAAA,IAAI,CAAC,IAAI,GAAG,IAAI;AAChB,QAAA,IAAI,CAAC,IAAI,GAAG,IAAI;AAChB,QAAA,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK;;AAE9B;;MC9HY,cAAc,CAAA;AAGvB,IAAA,WAAA,GAAA;AAFQ,QAAA,IAAA,CAAA,KAAK,GAAG,IAAI,GAAG,EAAuB;;AAI9C,IAAA,GAAG,CAAC,OAAiB,EAAA;AACjB,QAAA,KAAK,MAAM,MAAM,IAAI,OAAO,EAAE;YAC1B,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,MAAM,CAAC,IAAI,EAAE,MAAM,CAAC;;;AAI3C,IAAA,GAAG,CAAC,IAAiB,EAAA;QACjB,OAAO,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC;;AAG/B,IAAA,GAAG,CAAC,IAAiB,EAAA;QACjB,MAAM,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC;AACnC,QAAA,IAAI,CAAC,MAAM;AAAE,YAAA,MAAM,IAAI,eAAe,CAClC,0BAA0B,GAAG,IAAI,CACpC;QAED,QAAQ,MAAM;;AAErB;;MCxBY,aAAa,CAAA;AAGzB,IAAA,WAAA,GAAA;AAFA,QAAA,IAAA,CAAA,SAAS,GAAG,IAAI,GAAG,EAA6C;;IAIhE,EAAE,CAAyB,KAAQ,EAAE,QAAmB,EAAA;QACvD,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE;YAC/B,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,KAAK,EAAE,EAAE,CAAC;;AAE9B,QAAA,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,KAAK,CAAE,CAAC,IAAI,CAAC,QAAQ,CAAC;;AAG1C,IAAA,IAAI,CAAyB,KAAQ,EAAE,GAAG,IAA2B,EAAA;QACpE,MAAM,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,KAAK,CAAC;AAC3C,QAAA,IAAI,CAAC,SAAS;YAAE;AAEhB,QAAA,KAAK,MAAM,QAAQ,IAAI,SAAS,EAAE;AACjC,YAAA,QAAQ,CAAC,GAAG,IAAI,CAAC;;;IAInB,GAAG,CAAyB,KAAQ,EAAE,QAAmB,EAAA;QACxD,MAAM,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,KAAK,CAAC;AAC3C,QAAA,IAAI,CAAC,SAAS;YAAE;QAEhB,MAAM,KAAK,GAAG,SAAS,CAAC,OAAO,CAAC,QAAQ,CAAC;QACzC,IAAI,KAAK,KAAK,EAAE;AAAE,YAAA,SAAS,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC;;AAE7C;;ACxBM,MAAM,UAAU,GAAG,MAAM,CAAC,MAAM,CAAC;AAExC,MAAM,gBAAgB,GAA2B;AAChD,IAAA,uBAAuB,EACtB,EAAE;AACH,IAAA,yBAAyB,EACxB,EAAE;AACH,IAAA,2BAA2B,EAC1B,EAAE;AACH,IAAA,0BAA0B,EACzB,EAAE;AACH,IAAA,4BAA4B,EAC3B;CAC8C;AAEhD,SAAS,WAAW,CACnB,QAAoC,EACpC,IAAqB,EAAA;IAErB,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,OAAO,EAAE,GAAG,IAAI;AAErC,IAAA,IAAI,EAAE,MAAM,IAAI,IAAI,CAAC,EAAE;QACtB,QAAQ,yBAAyB;;AAElC,IAAA,IAAI,OAAO,IAAI,KAAK,QAAQ,EAAE;QAC7B,QAAQ,2BAA2B;;IAEpC,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE;QAChC,QAAQ,6BAA6B;;IAEtC,IAAI,KAAK,KAAK,SAAS,IAAI,OAAO,KAAK,KAAK,QAAQ,EAAE;QACrD,QAAQ,4BAA4B;;IAErC,IACC,OAAO,KAAK;WACT,OAAO,OAAO,KAAK;AACnB,WAAA,OAAO,OAAO,KAAK,UAAU,EAC/B;QACD,QAAQ,8BAA8B;;IAGvC,QAAQ,IAAI;AACb;AAEM,SAAU,aAAa,CAAC,GAAW,EAAA;AACxC,IAAA,QAAQ,OAAO,GAAG,KAAK,QAAQ,IAAI,OAAO,CAAC,GAAG,CAAC,GAAG,EAAE,UAAU,CAAC;AAChE;MAEa,YAAY,CAAA;AAGxB,IAAA,WAAA,CAAY,QAA2C,EAAA;QAFvD,IAAK,CAAA,KAAA,GAAkB,EAAE;AAGxB,QAAA,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC;AACf,YAAA,IAAI,EAAE,QAAQ;YACd,QAAQ,EAAE,EAAE,QAAQ,EAAE,EAAE,EAAE,QAAQ,EAAE,EAAE,EAAE;YACxC,QAAQ,EAAE,EAAE,QAAQ,EAAE,EAAE,EAAE,QAAQ,EAAE,EAAE;AACtC,SAAA,CAAC;;IAGH,SAAS,CACR,UAAuB,EACvB,KAAyB,EAAA;AAEzB,QAAA,MAAM,YAAY,GAAG,UAAU,CAAC,QAAQ;AAExC,QAAA,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YACtC,MAAM,EAAE,IAAI,EAAE,QAAQ,EAAE,GAAG,KAAK,CAAC,CAAC,CAAC;AAEnC,YAAA,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC;gBACf,IAAI;gBACJ,QAAQ;AACR,gBAAA,QAAQ,EAAE;oBACT,QAAQ,EAAE,QAAQ,CAAC;0BAChB,YAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,QAAQ,CAAC,QAAQ;0BAC9C,YAAY,CAAC,QAAQ;oBACxB,QAAQ,EAAE,QAAQ,CAAC;0BAChB,YAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,QAAQ,CAAC,QAAQ;0BAC9C,YAAY,CAAC;AAChB;AACD,aAAA,CAAC;;;AAGJ;AAEe,SAAA,OAAO,CACtB,QAAoC,EACpC,QAA6B,EAAA;AAE7B,IAAA,MAAM,EAAE,OAAO,EAAE,MAAM,EAAE,GAAG,QAAQ;AACpC,IAAA,MAAM,KAAK,GAAG,IAAI,YAAY,CAAC,QAAQ,CAAC;AAExC,IAAA,OAAO,KAAK,CAAC,KAAK,CAAC,MAAM,EAAE;QAC1B,MAAM,WAAW,GAAG,KAAK,CAAC,KAAK,CAAC,GAAG,EAAG;QACtC,MAAM,EAAE,IAAI,EAAE,QAAQ,EAAE,QAAQ,EAAE,GAAG,WAAW;AAEhD,QAAA,IAAI,aAAa,CAAC,IAAI,CAAC,EAAE;YACxB,IAAI,CAAC,UAAU,CAAC,GAAG;gBAClB,GAAG,IAAI,CAAC,UAAU,CAAC;gBACnB;aACA;;aACK;YACN,IAAI,IAAI,GAAkB,IAAI;AAE9B,YAAA,IAAI,GAAG,WAAW,CAAC,QAAQ,EAAE,IAAI,CAAC;YAClC,IAAI,IAAI,EAAE;AACT,gBAAA,MAAM,OAAO,GAAG,gBAAgB,CAAC,IAAI,CAAC;gBAEtC,MAAM,IAAI,mBAAmB,CAC5B,IAAI,EAAE,OAAO,EAAE,IAAI,EAAE,QAAQ,CAC7B;;YAGF,MAAM,MAAM,GAAG,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC;YACrC,MAAM,UAAU,GAAuB,EAAE;YAEzC,IAAI,GAAG,MAAM,CAAC,KAAK,CAAC,UAAU,EAAE,IAAI,CAAC;YACrC,IAAI,IAAI,EAAE;gBACT,MAAM,OAAO,GAAG,MAAM,CAAC,UAAU,CAAC,IAAI,CAAC;gBAEvC,MAAM,IAAI,mBAAmB,CAC5B,IAAI,EAAE,OAAO,EAAE,IAAI,EAAE,QAAQ,CAC7B;;AAGF,YAAA,MAAM,CAAC,MAAM,CAAC,IAAI,EAAE;gBACnB,CAAC,UAAU,GAAG;oBACb,QAAQ;AACR,oBAAA,UAAU,EAAE,UAAU,CAAC,GAAG,CAAC,CAAC,IAAI,KAAK,IAAI,CAAC,IAAI;AAC9C;AACD,aAAA,CAAC;AACF,YAAA,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC;AAEnB,YAAA,IAAI,UAAU,CAAC,MAAM,EAAE;AACtB,gBAAA,KAAK,CAAC,SAAS,CAAC,WAAW,EAAE,UAAU,CAAC;;YAGzC,MAAM,CAAC,IAAI,CAAC,cAAc,EAAE,IAAuB,EAAE,QAAQ,CAAC;;;AAIhE,IAAA,MAAM,CAAC,IAAI,CAAC,cAAc,EAAE,QAA2B,CAAC;AAExD,IAAA,OAAQ,QAA+B;AACxC;;MC/Ia,YAAY,CAAA;IAIxB,WACC,CAAA,QAAyB,EACzB,QAAiB,EAAA;QALlB,IAAK,CAAA,KAAA,GAAkB,EAAE;QACzB,IAAK,CAAA,KAAA,GAAkB,EAAE;AAMxB,QAAA,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC;AACf,YAAA,IAAI,EAAE,QAAQ;AACd,YAAA,IAAI,EAAE,QAAQ;YACd,QAAQ,EAAE,EAAE,QAAQ,EAAE,EAAE,EAAE,QAAQ,EAAE,EAAE,EAAE;AACxC,YAAA,UAAU,EAAE;AACZ,SAAA,CAAC;;IAGH,SAAS,CACR,UAAuB,EACvB,KAAyB,EAAA;AAEzB,QAAA,MAAM,cAAc,GAAG,UAAU,CAAC,UAAU;AAC5C,QAAA,MAAM,YAAY,GAAG,UAAU,CAAC,QAAQ;AAExC,QAAA,MAAM,eAAe,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM;AACzC,QAAA,MAAM,eAAe,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM;AACzC,QAAA,MAAM,eAAe,GAAG,KAAK,CAAC,MAAM;AAEpC,QAAA,IAAI,cAAc,GAAG,CAAC,EAAE,cAAc,GAAG,CAAC;AAC1C,QAAA,OAAO,cAAc,GAAG,eAAe,EAAE;AACxC,YAAA,MAAM,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,KAAK,CAAC,cAAc,CAAC;YAClD,MAAM,QAAQ,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC,QAAQ;YAC1C,IAAI,UAAU,GAAG,cAAc;YAE/B,IAAI,IAAI,EAAE;AACT,gBAAA,UAAU,GAAG;AACZ,oBAAA,GAAG,IAAI;oBACP,UAAU;AACV,oBAAA,cAAc,EAAE,eAAe;oBAC/B,eAAe,EAAE,eAAe,GAAG,cAAc;AACjD,oBAAA,cAAc,EAAE,eAAe;oBAC/B,eAAe,EAAE,eAAe,GAAG;iBACnC;AACD,gBAAA,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,UAAU,CAAC;AAE3B,gBAAA,cAAc,EAAE;;AAGjB,YAAA,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC;gBACf,IAAI;gBACJ,IAAI;AACJ,gBAAA,QAAQ,EAAE;oBACT,QAAQ,EAAE,QAAQ,CAAC;0BAChB,YAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,QAAQ,CAAC,QAAQ;0BAC9C,YAAY,CAAC,QAAQ;oBACxB,QAAQ,EAAE,QAAQ,CAAC;0BAChB,YAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,QAAQ,CAAC,QAAQ;0BAC9C,YAAY,CAAC;AAChB,iBAAA;gBACD;AACA,aAAA,CAAC;AAEF,YAAA,cAAc,EAAE;;;IAIlB,SAAS,CACR,UAAuB,EACvB,SAAkC,EAAA;AAElC,QAAA,IAAI,CAAC,SAAS,IAAI,UAAU,CAAC,eAAe,KAAK,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE;YACnE,QAAQ,IAAI;;QAGb,IAAI,WAAW,GAAG,UAAU;QAC5B,OAAO,WAAW,EAAE;YACnB,MAAM,MAAM,GAAG;AACd,kBAAE,WAAW,CAAC,QAAQ,CAAC,SAAS;AAChC,kBAAE,WAAW,CAAC,QAAQ,EAAE;AAEzB,YAAA,QAAQ,MAAM,CAAC,MAAM;AACpB,gBAAA,KAAK,QAAQ;oBACZ,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,WAAW,CAAC,eAAe;oBAC/C,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,WAAW,CAAC,eAAe;AAC/C,oBAAA,SAAS,GAAG;wBACX,UAAU,EAAE,WAAW,CAAC,UAAU;wBAClC,IAAI,EAAE,MAAM,CAAC;qBACb;oBACD;AACD,gBAAA,KAAK,QAAQ;AACZ,oBAAA,IAAI,MAAM,CAAC,MAAM,KAAK,OAAO,EAAE;wBAC9B,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,WAAW,CAAC,cAAc;wBAC9C,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,WAAW,CAAC,cAAc;;AAE1C,yBAAA,IAAI,MAAM,CAAC,MAAM,KAAK,QAAQ,EAAE;wBACpC,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,WAAW,CAAC,eAAe;wBAC/C,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,WAAW,CAAC,eAAe;;oBAEhD,QAAQ,IAAI;;AAGd,YAAA,IAAI,SAAS,IAAI,WAAW,CAAC,cAAc,KAAK,CAAC;gBAAE;YAEnD,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,cAAc,CAAC;;QAGrD,QAAQ,SAAS;;AAElB;SAEe,OAAO,CACtB,QAAoC,EACpC,QAAyB,EACzB,QAAiB,EAAA;AAEjB,IAAA,MAAM,EAAE,OAAO,EAAE,MAAM,EAAE,GAAG,QAAQ;IACpC,MAAM,KAAK,GAAG,IAAI,YAAY,CAAC,QAAQ,EAAE,QAAQ,CAAC;IAClD,IAAI,SAAS,GAA4B,IAAI;AAG7C,IAAA,OAAO,KAAK,CAAC,KAAK,CAAC,MAAM,EAAE;QAC1B,MAAM,WAAW,GAAG,KAAK,CAAC,KAAK,CAAC,GAAG,EAAG;QACtC,MAAM,EAAE,IAAI,EAAE,IAAI,EAAE,UAAU,EAAE,GAAG,WAAW;QAE9C,MAAM,MAAM,GAAG,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC;QACrC,MAAM,UAAU,GAAuB,EAAE;AAEzC,QAAA,MAAM,IAAI,GAAG,MAAM,CAAC,KAAK,CAAC,UAAU,EAAE,IAAI,EAAE,IAAI,CAAC;AAEjD,QAAA,IAAI,UAAU,CAAC,MAAM,EAAE;AACtB,YAAA,KAAK,CAAC,SAAS,CAAC,WAAW,EAAE,UAAU,CAAC;;QAGzC,IAAI,IAAI,EAAE;YACT,SAAS,GAAG,EAAE,UAAU,EAAE,WAAW,EAAE,IAAI,EAAE;;QAG9C,IAAI,UAAU,EAAE;YACf,SAAS,GAAG,KAAK,CAAC,SAAS,CAAC,UAAU,EAAE,SAAS,CAAC;;AAGnD,QAAA,IAAI,SAAS;YAAE;;IAKhB,IAAI,SAAS,EAAE;AACd,QAAA,MAAM,iBAAiB,GAAG,IAAI,mBAAmB,CAChD,QAAQ,EACR,QAAQ,EACR,SAAS,CAAC,IAAI,EACd,SAAS,CAAC,UAAU,CAAC,IAAI,EACzB,SAAS,CAAC,UAAU,CAAC,IAAI,EACzB,SAAS,CAAC,UAAU,CAAC,QAAQ,CAC7B;AAED,QAAA,MAAM,CAAC,IAAI,CAAC,eAAe,EAAE,iBAAiB,CAAC;AAC/C,QAAA,QAAQ;AACP,YAAA,OAAO,EAAE,KAAK;AACd,YAAA,SAAS,EAAE,iBAAiB;AAC5B,YAAA,SAAS,EAAE;AACX,SAAA;;IAGF,MAAM,iBAAiB,GAAG,IAAI,mBAAmB,CAChD,QAAQ,EACR,QAAQ,CACR;AAED,IAAA,MAAM,CAAC,IAAI,CAAC,eAAe,EAAE,iBAAiB,CAAC;AAC/C,IAAA,QAAQ;AACP,QAAA,OAAO,EAAE,IAAI;AACb,QAAA,SAAS,EAAE,IAAI;AACf,QAAA,SAAS,EAAE;AACX,KAAA;AACF;;ACjLM,SAAU,cAAc,CAAC,MAAe,EAAA;IAC7C,QAAQ,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC;AAC5D;;;;;;;ACLA,SAAS,qBAAqB,CAAC,KAAa,EAAE,MAAc,EAAE,UAAmB,IAAI,EAAA;AACpF,IAAA,MAAM,iBAAiB,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,MAAM,GAAG,EAAE,CAAC,GAAG,EAAE;IAC5D,IAAI,MAAM,GAAG,EAAE;IACf,IAAI,CAAC,GAAG,CAAC;AAET,IAAA,OAAO,CAAC,GAAG,iBAAiB,EAAE;AAC7B,QAAA,MAAM,OAAO,GAAG,QAAQ,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,EAAE,CAAC;AACnD,QAAA,MAAM,MAAM,GAAG,QAAQ,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,EAAE,EAAE,CAAC;AAEvD,QAAA,MAAM,IAAI,MAAM,EAAE,CAAC,OAAO,IAAI,EAAE,IAAI,EAAE;cACnC,MAAM,EAAE,CAAC,OAAO,IAAI,EAAE,IAAI,EAAE;cAC5B,MAAM,EAAE,CAAC,OAAO,IAAI,CAAC,IAAI,EAAE;AAC3B,cAAA,MAAM,EAAE,OAAO,GAAG,EAAE;cACpB,MAAM,EAAE,CAAC,MAAM,IAAI,EAAE,IAAI,EAAE;cAC3B,MAAM,EAAE,CAAC,MAAM,IAAI,EAAE,IAAI,EAAE;cAC3B,MAAM,EAAE,CAAC,MAAM,IAAI,CAAC,IAAI,EAAE;AAC1B,cAAA,MAAM,EAAE,MAAM,GAAG,EAAE,EAAE;QACxB,CAAC,IAAI,EAAE;;AAGR,IAAA,IAAI,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE;AACrB,QAAA,MAAM,SAAS,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;;AAEvC,QAAA,MAAM,SAAS,GAAG,CAAC,OAAO,KAAK,SAAS,CAAC,MAAM,GAAG,CAAC,CAAC,IAAI,EAAE;QAC1D,MAAM,OAAO,GAAG,QAAQ,CAAC,SAAS,EAAE,EAAE,CAAC,IAAI,SAAS;AAEpD,QAAA,MAAM,IAAI,MAAM,EAAE,CAAC,OAAO,IAAI,EAAE,IAAI,EAAE;cACnC,MAAM,EAAE,CAAC,OAAO,IAAI,EAAE,IAAI,EAAE,EAAE;AACjC,QAAA,IAAI,SAAS,GAAG,EAAE,EAAE;AACnB,YAAA,MAAM,IAAI,MAAM,EAAE,CAAC,OAAO,IAAI,CAAC,IAAI,EAAE;AAClC,kBAAA,MAAM,EAAE,OAAO,GAAG,EAAE,EAAE;;;IAI3B,IAAI,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE;AACzB,QAAA,MAAM,SAAS,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC;;AAE5C,QAAA,MAAM,SAAS,GAAG,CAAC,OAAO,KAAK,SAAS,CAAC,MAAM,GAAG,CAAC,CAAC,IAAI,EAAE;QAC1D,MAAM,MAAM,GAAG,QAAQ,CAAC,SAAS,EAAE,EAAE,CAAC,IAAI,SAAS;AAEnD,QAAA,MAAM,IAAI,MAAM,EAAE,CAAC,MAAM,IAAI,EAAE,IAAI,EAAE;cAClC,MAAM,EAAE,CAAC,MAAM,IAAI,EAAE,IAAI,EAAE,EAAE;QAChC,IAAI,SAAS,GAAG,EAAE;AAAE,YAAA,MAAM,IAAI,MAAM,EAAE,CAAC,MAAM,IAAI,CAAC,IAAI,EAAE,EAAE;QAC1D,IAAI,SAAS,GAAG,CAAC;YAAE,MAAM,IAAI,MAAM,EAAE,MAAM,GAAG,EAAE,EAAE;;IAGnD,OAAO,OAAO,IAAI,MAAM,CAAC,MAAM,GAAG,CAAC,KAAK,CAAC,EAAE;QAC1C,MAAM,IAAI,GAAG;;IAGd,QAAQ,MAAM;AACf;AAEA,SAAS,qBAAqB,CAAC,KAAa,EAAE,MAAc,EAAE,OAAgB,EAAA;AAC7E,IAAA,MAAM,iBAAiB,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,GAAG,CAAC;IAC1D,IAAI,MAAM,GAAG,EAAE;IACf,IAAI,CAAC,GAAG,CAAC;AAET,IAAA,OAAO,CAAC,GAAG,iBAAiB,EAAE;AAC7B,QAAA,MAAM,GAAG,GAAG,QAAQ,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,EAAE,CAAC;AAC/C,QAAA,MAAM,KAAK,MAAM,EAAE,CAAC,GAAG,IAAI,EAAE,IAAI,EAAE;cAChC,MAAM,EAAE,CAAC,GAAG,IAAI,EAAE,IAAI,EAAE;cACxB,MAAM,EAAE,CAAC,GAAG,IAAI,CAAC,IAAI,EAAE;cACvB,MAAM,EAAE,GAAG,GAAG,EAAE,EAAE,CAAC;QACtB,CAAC,IAAI,CAAC;;AAGP,IAAA,IAAI,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE;AACrB,QAAA,MAAM,SAAS,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;;AAEvC,QAAA,MAAM,SAAS,GAAG,CAAC,SAAS,KAAK,SAAS,CAAC,MAAM,GAAG,CAAC,CAAC,IAAI,EAAE;QAC5D,MAAM,GAAG,GAAG,QAAQ,CAAC,SAAS,EAAE,EAAE,CAAC,IAAI,SAAS;AAEhD,QAAA,MAAM,IAAI,MAAM,EAAE,CAAC,GAAG,IAAI,EAAE,IAAI,EAAE;cAC/B,MAAM,EAAE,CAAC,GAAG,IAAI,EAAE,IAAI,EAAE,EAAE;QAC7B,IAAI,SAAS,GAAG,EAAE;AAAE,YAAA,MAAM,IAAI,MAAM,EAAE,CAAC,GAAG,IAAI,CAAC,IAAI,EAAE,EAAE;QACvD,IAAI,SAAS,GAAG,CAAC;YAAE,MAAM,IAAI,MAAM,EAAE,GAAG,GAAG,EAAE,EAAE;;IAGhD,OAAO,OAAO,IAAI,MAAM,CAAC,MAAM,GAAG,CAAC,KAAK,CAAC,EAAE;QAC1C,MAAM,IAAI,GAAG;;IAGd,QAAQ,MAAM;AACf;AAEA,SAAS,qBAAqB,CAAC,KAAa,EAAE,MAAc,EAAA;AAC3D,IAAA,IAAI,KAAK,CAAC,QAAQ,CAAC,GAAG,CAAC;AAAE,QAAA,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC,EAAE,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;AACnE,IAAA,MAAM,iBAAiB,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,GAAG,CAAC;IAC1D,MAAM,MAAM,GAAG,kBAAkB;IACjC,IAAI,MAAM,GAAG,EAAE;IACf,IAAI,CAAC,GAAG,CAAC;AAET,IAAA,OAAO,CAAC,GAAG,iBAAiB,EAAE;AAC7B,QAAA,MAAM,GAAG,GAAG,CAAC,MAAM,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE;AACxC,eAAC,MAAM,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,EAAE;AACnC,eAAC,MAAM,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC;cAClC,MAAM,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;AAE/B,QAAA,MAAM,IAAI,MAAM,EAAE,CAAC,GAAG,IAAI,EAAE,IAAI,EAAE;cAC/B,MAAM,EAAE,CAAC,GAAG,IAAI,EAAE,IAAI,EAAE;cACxB,MAAM,EAAE,CAAC,GAAG,IAAI,CAAC,IAAI,EAAE;cACvB,MAAM,EAAE,CAAC,GAAG,IAAI,CAAC,IAAI,EAAE;AACvB,cAAA,MAAM,EAAE,GAAG,GAAG,EAAE,EAAE;QACrB,CAAC,IAAI,CAAC;;AAGP,IAAA,IAAI,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE;QACrB,MAAM,IAAI,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC;AAC3B,QAAA,MAAM,UAAU,GAAG,IAAI,CAAC,MAAM;AAC9B,QAAA,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE;eACvC,IAAI,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC;eAC3C,IAAI,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC;eAC1C,IAAI,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;AAE3C,QAAA,MAAM,IAAI,MAAM,EAAE,CAAC,GAAG,IAAI,EAAE,IAAI,EAAE;cAC/B,MAAM,EAAE,CAAC,GAAG,IAAI,EAAE,IAAI,EAAE,EAAE;AAC7B,QAAA,IAAI,UAAU,GAAG,CAAC,EAAE;AACnB,YAAA,MAAM,IAAI,MAAM,EAAE,CAAC,GAAG,IAAI,CAAC,IAAI,EAAE;kBAC9B,MAAM,EAAE,CAAC,GAAG,IAAI,CAAC,IAAI,EAAE,EAAE;;AAE7B,QAAA,IAAI,UAAU,GAAG,CAAC,EAAE;YACnB,MAAM,IAAI,MAAM,EAAE,GAAG,GAAG,EAAE,EAAE;YAC5B,IAAI,CAAC,GAAG,CAAC,IAAI,KAAK,CAAC,MAAM,EAAE;AAC1B,gBAAA,MAAM,IAAI,MAAM,CAAC,CAAC,CAAC;;;;IAKtB,IAAI,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE;QACzB,MAAM,IAAI,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC;AAC/B,QAAA,MAAM,UAAU,GAAG,IAAI,CAAC,MAAM;AAC9B,QAAA,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE;eACvC,IAAI,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC;eAC3C,IAAI,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC;eAC1C,IAAI,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;AAE3C,QAAA,MAAM,IAAI,MAAM,EAAE,CAAC,GAAG,IAAI,EAAE,IAAI,EAAE;cAC/B,MAAM,EAAE,CAAC,GAAG,IAAI,EAAE,IAAI,EAAE;cACxB,MAAM,EAAE,CAAC,GAAG,IAAI,CAAC,IAAI,EAAE,EAAE;AAC5B,QAAA,IAAI,UAAU,GAAG,CAAC,EAAE;AACnB,YAAA,MAAM,IAAI,MAAM,EAAE,CAAC,GAAG,IAAI,CAAC,IAAI,EAAE;AAC9B,kBAAA,MAAM,EAAE,GAAG,GAAG,EAAE,EAAE;;;IAIvB,QAAQ,MAAM;AACf;AAEA,SAAS,qBAAqB,CAAC,KAAa,EAAE,MAAc,EAAA;AAC3D,IAAA,IAAI,KAAK,CAAC,QAAQ,CAAC,GAAG,CAAC;AAAE,QAAA,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC,EAAE,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;AACnE,IAAA,MAAM,iBAAiB,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,GAAG,CAAC;IAC1D,MAAM,MAAM,GAAG,kBAAkB;IACjC,IAAI,MAAM,GAAG,EAAE;IACf,IAAI,CAAC,GAAG,CAAC;AAET,IAAA,OAAO,CAAC,GAAG,iBAAiB,EAAE;AAC7B,QAAA,MAAM,GAAG,GAAG,CAAC,MAAM,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE;AACxC,eAAC,MAAM,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,EAAE;AACnC,eAAC,MAAM,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC;cAClC,MAAM,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;AAE/B,QAAA,MAAM,IAAI,MAAM,EAAE,CAAC,GAAG,IAAI,EAAE,IAAI,EAAE;cAC/B,MAAM,EAAE,CAAC,GAAG,IAAI,EAAE,IAAI,EAAE;cACxB,MAAM,EAAE,CAAC,GAAG,IAAI,EAAE,IAAI,EAAE;cACxB,MAAM,EAAE,CAAC,GAAG,IAAI,CAAC,IAAI,EAAE;cACvB,MAAM,EAAE,CAAC,GAAG,IAAI,CAAC,IAAI,EAAE;AACvB,cAAA,MAAM,EAAE,GAAG,GAAG,EAAE,EAAE;QACrB,CAAC,IAAI,CAAC;;AAGP,IAAA,IAAI,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE;QACrB,MAAM,IAAI,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC;AAC3B,QAAA,MAAM,UAAU,GAAG,IAAI,CAAC,MAAM;AAC9B,QAAA,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE;eACvC,IAAI,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC;eAC3C,IAAI,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC;eAC1C,IAAI,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;AAE3C,QAAA,MAAM,IAAI,MAAM,EAAE,CAAC,GAAG,IAAI,EAAE,IAAI,EAAE;cAC/B,MAAM,EAAE,CAAC,GAAG,IAAI,EAAE,IAAI,EAAE,EAAE;AAC7B,QAAA,IAAI,UAAU,GAAG,CAAC,EAAE;AACnB,YAAA,MAAM,IAAI,MAAM,EAAE,CAAC,GAAG,IAAI,EAAE,IAAI,EAAE;kBAC/B,MAAM,EAAE,CAAC,GAAG,IAAI,CAAC,IAAI,EAAE,EAAE;;AAE7B,QAAA,IAAI,UAAU,GAAG,CAAC,EAAE;AACnB,YAAA,MAAM,IAAI,MAAM,EAAE,CAAC,GAAG,IAAI,CAAC,IAAI,EAAE;AAC9B,kBAAA,MAAM,EAAE,GAAG,GAAG,EAAE,EAAE;;;IAIvB,QAAQ,MAAM;AACf;AAEA,MAAM,MAAM,GAAG,kCAAkC;AACjD,MAAM,SAAS,GAAG,kCAAkC;AAEpD,MAAM,MAAM,GAAG,kEAAkE;AACjF,MAAM,SAAS,GAAG,kEAAkE;AAE9E,SAAU,cAAc,CAAC,GAAW,EAAE,EAAuB,GAAA,KAAK,EAAE,OAAA,GAAmB,IAAI,EAAA;AAChG,IAAA,IAAI,OAAO,GAAG,KAAK,QAAQ,EAAE;AAC5B,QAAA,MAAM,IAAI,KAAK,CAAC,4CAA4C,CAAC;;AAE9D,IAAA,IAAI,OAAO,EAAE,KAAK,QAAQ,EAAE;AAC3B,QAAA,MAAM,IAAI,KAAK,CAAC,2CAA2C,CAAC;;AAE7D,IAAA,IAAI,OAAO,OAAO,KAAK,SAAS,EAAE;AACjC,QAAA,MAAM,IAAI,KAAK,CAAC,gDAAgD,CAAC;;IAGlE,IAAI,EAAE,KAAK,KAAK;QAAE,QAAQ,qBAAqB,CAAC,GAAG,EAAE,MAAM,EAAE,OAAO,CAAC;IACrE,IAAI,EAAE,KAAK,QAAQ;QAAE,QAAQ,qBAAqB,CAAC,GAAG,EAAE,SAAS,EAAE,OAAO,CAAC;AAE3E,IAAA,MAAM,IAAI,KAAK,CAAC,2CAA2C,CAAC;AAC7D;AAEM,SAAU,cAAc,CAAC,GAAW,EAAE,EAAuB,GAAA,KAAK,EAAE,OAAA,GAAmB,IAAI,EAAA;AAChG,IAAA,IAAI,OAAO,GAAG,KAAK,QAAQ,EAAE;AAC5B,QAAA,MAAM,IAAI,KAAK,CAAC,4CAA4C,CAAC;;AAE9D,IAAA,IAAI,OAAO,EAAE,KAAK,QAAQ,EAAE;AAC3B,QAAA,MAAM,IAAI,KAAK,CAAC,2CAA2C,CAAC;;AAE7D,IAAA,IAAI,OAAO,OAAO,KAAK,SAAS,EAAE;AACjC,QAAA,MAAM,IAAI,KAAK,CAAC,gDAAgD,CAAC;;IAGlE,IAAI,EAAE,KAAK,KAAK;QAAE,QAAQ,qBAAqB,CAAC,GAAG,EAAE,MAAM,EAAE,OAAO,CAAC;IACrE,IAAI,EAAE,KAAK,QAAQ;QAAE,QAAQ,qBAAqB,CAAC,GAAG,EAAE,SAAS,EAAE,OAAO,CAAC;AAE3E,IAAA,MAAM,IAAI,KAAK,CAAC,2CAA2C,CAAC;AAC7D;SAEgB,cAAc,CAAC,GAAW,EAAE,OAAyB,KAAK,EAAA;AACzE,IAAA,IAAI,OAAO,GAAG,KAAK,QAAQ,EAAE;AAC5B,QAAA,MAAM,IAAI,KAAK,CAAC,4CAA4C,CAAC;;AAE9D,IAAA,IAAI,OAAO,IAAI,KAAK,QAAQ,EAAE;AAC7B,QAAA,MAAM,IAAI,KAAK,CAAC,2CAA2C,CAAC;;IAG7D,IAAI,IAAI,KAAK,KAAK;QAAE,QAAQ,qBAAqB,CAAC,GAAG,EAAE,MAAM,CAAC;IAC9D,IAAI,IAAI,KAAK,QAAQ;QAAE,QAAQ,qBAAqB,CAAC,GAAG,EAAE,SAAS,CAAC;AAEpE,IAAA,MAAM,IAAI,KAAK,CAAC,6CAA6C,CAAC;AAC/D;SAEgB,cAAc,CAAC,GAAW,EAAE,OAAyB,KAAK,EAAA;AACzE,IAAA,IAAI,OAAO,GAAG,KAAK,QAAQ,EAAE;AAC5B,QAAA,MAAM,IAAI,KAAK,CAAC,4CAA4C,CAAC;;AAE9D,IAAA,IAAI,OAAO,IAAI,KAAK,QAAQ,EAAE;AAC7B,QAAA,MAAM,IAAI,KAAK,CAAC,2CAA2C,CAAC;;IAG7D,IAAI,IAAI,KAAK,KAAK;QAAE,QAAQ,qBAAqB,CAAC,GAAG,EAAE,MAAM,CAAC;IAC9D,IAAI,IAAI,KAAK,QAAQ;QAAE,QAAQ,qBAAqB,CAAC,GAAG,EAAE,SAAS,CAAC;AAEpE,IAAA,MAAM,IAAI,KAAK,CAAC,6CAA6C,CAAC;AAC/D;;;;;;;;;;AC7Pa,MAAA,OAAO,GAAG;AACtB,IAAA,MAAM,EAAE,aAAa;AACrB,IAAA,MAAM,EAAE;;;ACDH,SAAU,QAAQ,CAAC,CAAU,EAAA;IAClC,QAAQ,CAAC,KAAK,IAAI,IAAI,OAAO,CAAC,KAAK,QAAQ;AAC5C;AAKA;;;;;AAKE;AACI,SAAU,aAAa,CAAC,CAAU,EAAA;AACvC,IAAA,IAAI,CAAC,KAAK,IAAI,IAAI,OAAO,CAAC,KAAK,QAAQ;QAAE,QAAQ,KAAK;IACtD,MAAM,SAAS,GAAG,MAAM,CAAC,cAAc,CAAC,CAAC,CAAC;IAEvC,QAAQ,SAAS,KAAK,IAAI,IAAI,SAAS,KAAK,MAAM,CAAC,SAAS;AAChE;AAEA;AACM,SAAU,OAAO,CAAC,CAAU,EAAA;IACjC,QAAQ,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC;AACzB;AAEA;;;;AAIG;AACG,SAAU,YAAY,CAAC,CAAU,EAAA;AACtC,IAAA,QAAQ,WAAW,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,YAAY,QAAQ,CAAC;AAC1D;AAeA;AACM,SAAU,UAAU,CAAC,CAAU,EAAA;IACpC,QAAQ,cAAc,CAAC,CAAC,CAAC,KAAK,UAAU;AACzC;AAEM,SAAU,eAAe,CAAC,CAAU,EAAA;IACzC,QAAQ,cAAc,CAAC,CAAC,CAAC,KAAK,eAAe;AAC9C;AAEM,SAAU,mBAAmB,CAAC,CAAU,EAAA;IAC7C,QAAQ,cAAc,CAAC,CAAC,CAAC,KAAK,mBAAmB;AAClD;AAEM,SAAU,wBAAwB,CAAC,CAAU,EAAA;IAClD,QAAQ,cAAc,CAAC,CAAC,CAAC,KAAK,wBAAwB;AACvD;;;;;;;;;;;;;;ACrEA;;;;AAIG;AACa,SAAA,OAAO,CAAC,GAAW,EAAE,OAAmB,EAAA;IACpD,QAAQ,MAAM,CAAC,kBAAkB,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC;AAChD;;ACRA;;;;;;;;;;;;;;;;;;;AAmBE;AAOF,MAAM,uBAAuB,GAAG,IAAI,MAAM,CAAC,6EAA6E,EAAE,GAAG,CAAC;AAE9H;;;;AAIG;AACa,SAAA,MAAM,CAAC,GAAW,EAAE,OAAqB,EAAA;AACrD,IAAA,IAAI,OAAO,GAAG,KAAK,QAAQ,EAAE;AAC/B,QAAA,MAAM,IAAI,KAAK,CAAC,4CAA4C,CAAC;;AAE9D,IAAA,IAAI,OAAO,KAAK,SAAS,EAAE;AACpB,QAAA,IAAI,OAAO,OAAO,KAAK,QAAQ,EAAE;AAC7B,YAAA,MAAM,IAAI,KAAK,CAAC,gDAAgD,CAAC;;AAErE,QAAA,IAAI,OAAO,EAAE,OAAO,KAAK,SAAS,EAAE;AAChC,YAAA,IAAI,OAAO,OAAO,CAAC,OAAO,KAAK,QAAQ,EAAE;AACrC,gBAAA,MAAM,IAAI,KAAK,CAAC,uEAAuE,CAAC;;AAE5F,YAAA,IAAI,OAAO,CAAC,OAAO,GAAG,CAAC,IAAI,OAAO,CAAC,OAAO,GAAG,CAAC,EAAE;AAC5C,gBAAA,MAAM,IAAI,KAAK,CAAC,iFAAiF,CAAC;;;;IAKjH,MAAM,UAAU,GAAG,uBAAuB,CAAC,IAAI,CAAC,GAAG,CAAC;AACpD,IAAA,IAAI,CAAC,UAAU,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC;QAAE,QAAQ,KAAK;IAChD,IAAI,CAAC,OAAO,EAAE,OAAO,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAE,GAAG,EAAE,MAAM,OAAO,EAAE,OAAO;QAAE,QAAQ,IAAI;IAEhG,QAAQ,KAAK;AACd;;ACxDM,SAAU,MAAM,CAAmB,QAAiB,EAAA;IACzD,IAAI,GAAG,GAAsB,IAAI;IAE9B,QAAQ,MAAK;QACf,IAAI,CAAC,GAAG,EAAE;AACT,YAAA,MAAM,GAAG,GAAG,QAAQ,EAAE;AACtB,YAAA,GAAG,GAAG,IAAI,OAAO,CAAC,GAAG,CAAC;YACtB,QAAQ,GAAG;;AAGZ,QAAA,MAAM,KAAK,GAAG,GAAG,CAAC,KAAK,EAAE;QACzB,IAAI,CAAC,KAAK,EAAE;AACX,YAAA,MAAM,GAAG,GAAG,QAAQ,EAAE;AACtB,YAAA,GAAG,GAAG,IAAI,OAAO,CAAC,GAAG,CAAC;YACtB,QAAQ,GAAG;;QAGZ,QAAQ,KAAK;AACX,KAAC;AACL;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkCG;;ACvDH;;;;;;;;;;;;;;;;;;AAkBE;AAgBF,MAAM,OAAO,GAAG,sDAAsD;AAC/D,MAAM,WAAW,GAAG,MAAM,OAAO,CAAA,OAAA,EAAU,OAAO,CAAA,CAAE;AAE3D,MAAM,SAAS,GAAG,IAAI,MAAM,CAAC,CAAI,CAAA,EAAA,WAAW,CAAG,CAAA,CAAA,CAAC;AAChD,MAAM,yBAAyB,GAAG,MAAM,CAAC,MAAK,IAAI,MAAM,CAAC,CAAI,CAAA,EAAA,WAAW,CAAuB,qBAAA,CAAA,CAAC,CAAC;AACjG,MAAM,yBAAyB,GAAG,MAAM,CAAC,MAAK,IAAI,MAAM,CAAC,CAAI,CAAA,EAAA,WAAW,CAA4B,0BAAA,CAAA,CAAC,CAAC;AAEtG,MAAM,OAAO,GAAG,sBAAsB;AAC/B,MAAM,WAAW,GAAG,KAAK;IAC/B,CAAM,GAAA,EAAA,OAAO,CAAW,QAAA,EAAA,OAAO,CAAM,IAAA,CAAA;AACrC,IAAA,CAAA,GAAA,EAAM,OAAO,CAAA,QAAA,EAAW,WAAW,CAAA,EAAA,EAAK,OAAO,CAAM,IAAA,CAAA;AACrD,IAAA,CAAA,GAAA,EAAM,OAAO,CAAA,SAAA,EAAY,WAAW,CAAA,KAAA,EAAQ,OAAO,CAAY,UAAA,CAAA;AAC/D,IAAA,CAAA,GAAA,EAAM,OAAO,CAAe,YAAA,EAAA,OAAO,UAAU,WAAW,CAAA,KAAA,EAAQ,OAAO,CAAY,UAAA,CAAA;AACnF,IAAA,CAAA,GAAA,EAAM,OAAO,CAAe,YAAA,EAAA,OAAO,UAAU,WAAW,CAAA,KAAA,EAAQ,OAAO,CAAY,UAAA,CAAA;AACnF,IAAA,CAAA,GAAA,EAAM,OAAO,CAAe,YAAA,EAAA,OAAO,UAAU,WAAW,CAAA,KAAA,EAAQ,OAAO,CAAY,UAAA,CAAA;AACnF,IAAA,CAAA,GAAA,EAAM,OAAO,CAAe,YAAA,EAAA,OAAO,UAAU,WAAW,CAAA,KAAA,EAAQ,OAAO,CAAY,UAAA,CAAA;AACnF,IAAA,CAAA,WAAA,EAAc,OAAO,CAAU,OAAA,EAAA,WAAW,CAAQ,KAAA,EAAA,OAAO,aAAa;AAEvE,MAAM,SAAS,GAAG,IAAI,MAAM,CAAC,CAAI,CAAA,EAAA,WAAW,CAAG,CAAA,CAAA,CAAC;AAChD,MAAM,yBAAyB,GAAG,MAAM,CAAC,MAAK,IAAI,MAAM,CAAC,CAAI,CAAA,EAAA,WAAW,CAAoC,kCAAA,CAAA,CAAC,CAAC;AAC9G,MAAM,yBAAyB,GAAG,MAAM,CAAC,MAAK,IAAI,MAAM,CAAC,CAAI,CAAA,EAAA,WAAW,CAAyC,uCAAA,CAAA,CAAC,CAAC;AAEnH,SAAS,cAAc,CAAC,GAAW,EAAE,OAAmB,EAAA;AACvD,IAAA,IAAI,OAAO,GAAG,KAAK,QAAQ,EAAE;AAC5B,QAAA,MAAM,IAAI,KAAK,CAAC,4CAA4C,CAAC;;AAE9D,IAAA,IAAI,OAAO,KAAK,SAAS,EAAE;AAC1B,QAAA,IAAI,OAAO,OAAO,KAAK,QAAQ,EAAE;AAChC,YAAA,MAAM,IAAI,KAAK,CAAC,gDAAgD,CAAC;;AAElE,QAAA,IAAI,OAAO,CAAC,IAAI,KAAK,SAAS,IAAI,OAAO,OAAO,CAAC,IAAI,KAAK,QAAQ,EAAE;AACnE,YAAA,MAAM,IAAI,KAAK,CAAC,uEAAuE,CAAC;;;AAG3F;AAEA;;;;AAIG;AACa,SAAA,IAAI,CAAC,GAAW,EAAE,OAAmB,EAAA;AACpD,IAAA,cAAc,CAAC,GAAG,EAAE,OAAO,CAAC;AAE5B,IAAA,IAAI,OAAO,EAAE,IAAI,KAAK,SAAS,IAAI,OAAO,CAAC,IAAI,KAAK,QAAQ,EAAE;AAC7D,QAAA,IAAI,SAAS,CAAC,IAAI,CAAC,GAAG,CAAC;YAAE,QAAQ,IAAI;AACrC,QAAA,IAAI,SAAS,CAAC,IAAI,CAAC,GAAG,CAAC;YAAE,QAAQ,IAAI;;AAEjC,SAAA,IAAI,OAAO,CAAC,IAAI,KAAK,QAAQ,EAAE;AACnC,QAAA,IAAI,yBAAyB,EAAE,CAAC,IAAI,CAAC,GAAG,CAAC;YAAE,QAAQ,IAAI;AACvD,QAAA,IAAI,yBAAyB,EAAE,CAAC,IAAI,CAAC,GAAG,CAAC;YAAE,QAAQ,IAAI;;AAEnD,SAAA,IAAI,OAAO,CAAC,IAAI,KAAK,QAAQ,EAAE;AACnC,QAAA,IAAI,yBAAyB,EAAE,CAAC,IAAI,CAAC,GAAG,CAAC;YAAE,QAAQ,IAAI;AACvD,QAAA,IAAI,yBAAyB,EAAE,CAAC,IAAI,CAAC,GAAG,CAAC;YAAE,QAAQ,IAAI;;SAEnD;AACJ,QAAA,MAAM,IAAI,KAAK,CAAC,qDAAqD,CAAC;;IAGvE,QAAQ,KAAK;AACd;AAEA;;;;AAIG;AACa,SAAA,MAAM,CAAC,GAAW,EAAE,OAAmB,EAAA;AACtD,IAAA,cAAc,CAAC,GAAG,EAAE,OAAO,CAAC;AAE5B,IAAA,IAAI,OAAO,EAAE,IAAI,KAAK,SAAS,IAAI,OAAO,CAAC,IAAI,KAAK,QAAQ,EAAE;AAC7D,QAAA,IAAI,SAAS,CAAC,IAAI,CAAC,GAAG,CAAC;YAAE,QAAQ,IAAI;;AAEjC,SAAA,IAAI,OAAO,CAAC,IAAI,KAAK,QAAQ,EAAE;AACnC,QAAA,IAAI,yBAAyB,EAAE,CAAC,IAAI,CAAC,GAAG,CAAC;YAAE,QAAQ,IAAI;;AAEnD,SAAA,IAAI,OAAO,CAAC,IAAI,KAAK,QAAQ,EAAE;AACnC,QAAA,IAAI,yBAAyB,EAAE,CAAC,IAAI,CAAC,GAAG,CAAC;YAAE,QAAQ,IAAI;;SAEnD;AACJ,QAAA,MAAM,IAAI,KAAK,CAAC,qDAAqD,CAAC;;IAGvE,QAAQ,KAAK;AACd;AAEA;;;;AAIG;AACa,SAAA,MAAM,CAAC,GAAW,EAAE,OAAmB,EAAA;AACtD,IAAA,cAAc,CAAC,GAAG,EAAE,OAAO,CAAC;AAE5B,IAAA,IAAI,OAAO,EAAE,IAAI,KAAK,SAAS,IAAI,OAAO,CAAC,IAAI,KAAK,QAAQ,EAAE;AAC7D,QAAA,IAAI,SAAS,CAAC,IAAI,CAAC,GAAG,CAAC;YAAE,QAAQ,IAAI;;AAEjC,SAAA,IAAI,OAAO,CAAC,IAAI,KAAK,QAAQ,EAAE;AACnC,QAAA,IAAI,yBAAyB,EAAE,CAAC,IAAI,CAAC,GAAG,CAAC;YAAE,QAAQ,IAAI;;AAEnD,SAAA,IAAI,OAAO,CAAC,IAAI,KAAK,QAAQ,EAAE;AACnC,QAAA,IAAI,yBAAyB,EAAE,CAAC,IAAI,CAAC,GAAG,CAAC;YAAE,QAAQ,IAAI;;SAEnD;AACJ,QAAA,MAAM,IAAI,KAAK,CAAC,qDAAqD,CAAC;;IAGvE,QAAQ,KAAK;AACd;;AC/IA;;;;;;;;;AASE;AAEF,MAAM,WAAW,GAAG,IAAI,MAAM,CAAC,sFAAsF,CAAC;AAEtH;;;;AAIG;AACa,SAAA,QAAQ,CAAC,GAAW,EAAE,OAAmB,EAAA;AACrD,IAAA,IAAI,OAAO,GAAG,KAAK,QAAQ,EAAE;AAC/B,QAAA,MAAM,IAAI,KAAK,CAAC,4CAA4C,CAAC;;IAG9D,QAAQ,WAAW,CAAC,IAAI,CAAC,GAAG,CAAC;AAC9B;;ACxBA;;;;;;;;;;;;;;;;;;;;;;;;;;AA0BE;AAoBF,MAAM,eAAe,GAAG,0HAA0H;AAClJ,MAAM,iBAAiB,GAAG,oEAAoE;AAE9F,MAAM,aAAa,GAAG,IAAI,MAAM,CAAC,CAAI,CAAA,EAAA,eAAe,CAAG,CAAA,CAAA,CAAC;AACxD,MAAM,yBAAyB,GAAG,MAAM,CAAC,MAAM,IAAI,MAAM,CAAC,OAAO,eAAe,CAAA,CAAA,EAAI,iBAAiB,CAAI,EAAA,CAAA,CAAC,CAAC;AAE3G,MAAM,cAAc,GAAG,MAAM,CAAC,MAAM,IAAI,MAAM,CAAC,eAAe,WAAW,CAAA,CAAA,EAAI,WAAW,CAAO,KAAA,CAAA,CAAC,CAAC;AACjG,MAAM,mBAAmB,GAAG,MAAM,CAAC,MAAM,IAAI,MAAM,CAAC,CAAyD,uDAAA,CAAA,CAAC,CAAC;AAE/G,SAAS,UAAU,CAAC,GAAW,EAAA;AAC9B,IAAA,MAAM,MAAM,GAAG,GAAG,CAAC,MAAM;IACzB,IAAI,CAAC,GAAG,CAAC;;IAGT,MAAM,UAAU,GAAG,CAAC;AACpB,IAAA,IAAI,GAAG,CAAC,UAAU,CAAC,KAAK,IAAI,EAAE;AAC7B,QAAA,OAAO,EAAE,CAAC,GAAG,MAAM,EAAE;AACpB,YAAA,IAAI,GAAG,CAAC,CAAC,CAAC,KAAK,IAAI;AAAE,gBAAA,CAAC,EAAE;AACnB,iBAAA,IAAI,GAAG,CAAC,CAAC,CAAC,KAAK,IAAI,EAAE;AACzB,gBAAA,CAAC,EAAE;gBACH;;;;SAGI;QACN,OAAO,CAAC,GAAG,MAAM,IAAI,GAAG,CAAC,CAAC,CAAC,KAAK,GAAG;AAAE,YAAA,CAAC,EAAE;;IAEzC,IAAI,CAAC,KAAK,UAAU,IAAI,GAAG,CAAC,CAAC,CAAC,KAAK,GAAG;QAAE,QAAQ,IAAI;IACpD,MAAM,QAAQ,GAAG,CAAC;;AAGlB,IAAA,MAAM,WAAW,GAAG,EAAE,CAAC;IACvB,MAAM,SAAS,GAAG,MAAM;IACxB,IAAI,WAAW,KAAK,SAAS;QAAE,QAAQ,IAAI;AAE3C,IAAA,QAAQ;QACP,KAAK,EAAE,GAAG,CAAC,KAAK,CAAC,UAAU,EAAE,QAAQ,CAAC;QACtC,MAAM,EAAE,GAAG,CAAC,KAAK,CAAC,WAAW,EAAE,SAAS;AACxC,KAAA;AACF;AAEA,SAAS,aAAa,CAAC,GAAW,EAAE,OAAsB,EAAA;AACzD,IAAA,IAAI,aAAa,CAAC,IAAI,CAAC,GAAG,CAAC;QAAE,QAAQ,IAAI;IAEzC,IAAI,OAAO,EAAE;AACT,WAAA,yBAAyB,EAAE,CAAC,IAAI,CAAC,GAAG,CAAC;QAAE,QAAQ,IAAI;IAEvD,QAAQ,KAAK;AACd;AAEA,SAAS,cAAc,CAAC,GAAW,EAAE,OAAsB,EAAA;IAC1D,IAAI,QAAQ,CAAC,GAAG,CAAC;QAAE,QAAQ,IAAI;IAE/B,IAAI,OAAO,EAAE;AACT,WAAA,cAAc,EAAE,CAAC,IAAI,CAAC,GAAG,CAAC;QAAE,QAAQ,IAAI;IAC5C,IAAI,OAAO,EAAE;AACT,WAAA,mBAAmB,EAAE,CAAC,IAAI,CAAC,GAAG,CAAC;QAAE,QAAQ,IAAI;IAEjD,QAAQ,KAAK;AACd;AAEA;;;;AAIG;AACa,SAAA,OAAO,CAAC,GAAW,EAAE,OAAsB,EAAA;AAC1D,IAAA,IAAI,OAAO,GAAG,KAAK,QAAQ,EAAE;AAC5B,QAAA,MAAM,IAAI,KAAK,CAAC,4CAA4C,CAAC;;AAE9D,IAAA,IAAI,OAAO,KAAK,SAAS,EAAE;AAC1B,QAAA,IAAI,OAAO,OAAO,KAAK,QAAQ,EAAE;AAChC,YAAA,MAAM,IAAI,KAAK,CAAC,gDAAgD,CAAC;;AAElE,QAAA,IAAI,OAAO,CAAC,eAAe,KAAK,SAAS,IAAI,OAAO,OAAO,CAAC,eAAe,KAAK,SAAS,EAAE;AAC1F,YAAA,MAAM,IAAI,KAAK,CAAC,mFAAmF,CAAC;;AAErG,QAAA,IAAI,OAAO,CAAC,cAAc,KAAK,SAAS,IAAI,OAAO,OAAO,CAAC,cAAc,KAAK,SAAS,EAAE;AACxF,YAAA,MAAM,IAAI,KAAK,CAAC,kFAAkF,CAAC;;AAEpG,QAAA,IAAI,OAAO,CAAC,mBAAmB,KAAK,SAAS,IAAI,OAAO,OAAO,CAAC,mBAAmB,KAAK,SAAS,EAAE;AAClG,YAAA,MAAM,IAAI,KAAK,CAAC,uFAAuF,CAAC;;;AAI1G,IAAA,MAAM,KAAK,GAAG,UAAU,CAAC,GAAG,CAAC;AAC7B,IAAA,IAAI,CAAC,KAAK;QAAE,QAAQ,KAAK;;IAGzB,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,KAAK,EAAE,OAAO,CAAC;QAAE,QAAQ,KAAK;;IAGvD,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,MAAM,EAAE,OAAO,CAAC;QAAE,QAAQ,KAAK;;AAGzD,IAAA,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,MAAM,IAAI,KAAK,CAAC,MAAM,CAAC,MAAM,GAAG,GAAG;QAAE,QAAQ,KAAK;IAEpE,QAAQ,IAAI;AACb;;AC/IA;;;;;;;;;;;;;;;;;;AAkBE;AA2BF,MAAM,iBAAiB,GAAG,+BAA+B;AACzD,MAAM,sBAAsB,GAAG,oDAAoD;AACnF,MAAM,UAAU,GAAG,IAAI,MAAM,CAAC,CAAO,IAAA,EAAA,iBAAiB,CAAI,CAAA,EAAA,sBAAsB,CAAI,EAAA,CAAA,CAAC;AAErF,MAAM,UAAU,GAAG,IAAI,MAAM,CAAC,CAAA,kEAAA,CAAoE,CAAC;AAEnG,MAAM,SAAS,GAAG,IAAI,MAAM,CAAC,CAAA,mDAAA,CAAqD,CAAC;AAEnF,SAAS,YAAY,CAAC,GAAW,EAAA;AAChC,IAAA,MAAM,MAAM,GAAkB;AAC7B,QAAA,IAAI,EAAE,EAAE;AACR,QAAA,IAAI,EAAE,EAAE;AACR,QAAA,OAAO,EAAE,EAAE;AACX,QAAA,UAAU,EAAE,EAAE;AACd,QAAA,QAAQ,EAAE;KACV;IACD,IAAI,CAAC,GAAG,CAAC;AAET,IAAA,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,OAAO,CAAC;QAAE,QAAQ,IAAI;IAC1C,CAAC,IAAI,CAAC;AAEN,IAAA,IAAI,GAAG,CAAC,CAAC,CAAC,KAAK,GAAG,IAAI,GAAG,CAAC,CAAC,CAAC,KAAK,GAAG,EAAE;;QAErC,MAAM,SAAS,GAAG,CAAC;QACnB,OAAO,GAAG,CAAC,CAAC,CAAC,IAAI,GAAG,CAAC,CAAC,CAAC,KAAK,GAAG;AAAE,YAAA,CAAC,EAAE;QACpC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,SAAS,KAAK,CAAC;YAAE,QAAQ,IAAI;QAC5C,MAAM,OAAO,GAAG,CAAC;;AAGjB,QAAA,MAAM,YAAY,GAAG,EAAE,CAAC;AACxB,QAAA,OAAO,GAAG,CAAC,CAAC,CAAC,IAAI,GAAG,CAAC,CAAC,CAAC,KAAK,GAAG,IAAI,GAAG,CAAC,CAAC,CAAC,KAAK,GAAG;AAAE,YAAA,CAAC,EAAE;QACtD,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,YAAY,KAAK,CAAC;YAAE,QAAQ,IAAI;QAC/C,MAAM,UAAU,GAAG,CAAC;QAEpB,MAAM,CAAC,IAAI,GAAG,GAAG,CAAC,KAAK,CAAC,SAAS,EAAE,OAAO,CAAC;QAC3C,MAAM,CAAC,OAAO,GAAG,GAAG,CAAC,KAAK,CAAC,YAAY,EAAE,UAAU,CAAC;;;AAIrD,IAAA,OAAO,GAAG,CAAC,CAAC,CAAC,IAAI,GAAG,CAAC,CAAC,CAAC,KAAK,GAAG,EAAE;QAChC,IAAI,GAAG,CAAC,UAAU,CAAC,UAAU,EAAE,CAAC,CAAC,EAAE;AAClC,YAAA,MAAM,CAAC,QAAQ,GAAG,IAAI;YACtB,CAAC,IAAI,CAAC;YACN;;AAGD,QAAA,MAAM,SAAS,GAAG,EAAE,CAAC;QACrB,OAAO,GAAG,CAAC,CAAC,CAAC,IAAI,GAAG,CAAC,CAAC,CAAC,KAAK,GAAG;AAAE,YAAA,CAAC,EAAE;QACpC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,SAAS,KAAK,CAAC;YAAE,QAAQ,IAAI;QAC5C,MAAM,OAAO,GAAG,CAAC;AAEjB,QAAA,MAAM,UAAU,GAAG,EAAE,CAAC;AACtB,QAAA,IAAI,GAAG,CAAC,UAAU,CAAC,KAAK,IAAI,EAAE;AAC7B,YAAA,OAAO,GAAG,CAAC,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,KAAK,IAAI,KAAK,GAAG,CAAC,CAAC,CAAC,KAAK,GAAG,IAAI,GAAG,CAAC,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC;AAAE,gBAAA,CAAC,EAAE;;aAE9E;AACJ,YAAA,OAAO,GAAG,CAAC,CAAC,CAAC,IAAI,GAAG,CAAC,CAAC,CAAC,KAAK,GAAG,IAAI,GAAG,CAAC,CAAC,CAAC,KAAK,GAAG;AAAE,gBAAA,CAAC,EAAE;;QAEvD,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,UAAU,KAAK,CAAC;YAAE,QAAQ,IAAI;QAC7C,MAAM,QAAQ,GAAG,CAAC;AAElB,QAAA,MAAM,CAAC,UAAU,CAAC,IAAI,CAAC;YACtB,IAAI,EAAE,GAAG,CAAC,KAAK,CAAC,SAAS,EAAE,OAAO,CAAC;YACnC,KAAK,EAAE,GAAG,CAAC,KAAK,CAAC,UAAU,EAAE,QAAQ;AACrC,SAAA,CAAC;;AAGH,IAAA,IAAI,GAAG,CAAC,CAAC,CAAC,KAAK,GAAG;QAAE,QAAQ,IAAI;IAChC,CAAC,IAAI,CAAC;;IAGN,IAAI,GAAG,CAAC,CAAC,CAAC;QAAE,MAAM,CAAC,IAAI,GAAG,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC;IAEtC,QAAQ,MAAM;AACf;AAEA;;;;AAIG;AACa,SAAA,SAAS,CAAC,GAAW,EAAE,OAAwB,EAAA;AAC9D,IAAA,IAAI,OAAO,GAAG,KAAK,QAAQ,EAAE;AAC5B,QAAA,MAAM,IAAI,KAAK,CAAC,4CAA4C,CAAC;;AAE9D,IAAA,IAAI,OAAO,KAAK,SAAS,EAAE;AACpB,QAAA,IAAI,OAAO,OAAO,KAAK,QAAQ,EAAE;AAC7B,YAAA,MAAM,IAAI,KAAK,CAAC,gDAAgD,CAAC;;AAErE,QAAA,IAAI,OAAO,CAAC,IAAI,KAAK,SAAS,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE;AACtD,YAAA,MAAM,IAAI,KAAK,CAAC,uEAAuE,CAAC;;AAEjG,QAAA,IAAI,OAAO,CAAC,OAAO,KAAK,SAAS,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE;AACvD,YAAA,MAAM,IAAI,KAAK,CAAC,0EAA0E,CAAC;;;AAItG,IAAA,MAAM,OAAO,GAAG,YAAY,CAAC,GAAG,CAAC;AACjC,IAAA,IAAI,CAAC,OAAO;QAAE,QAAQ,KAAK;IAE3B,IAAI,OAAO,CAAC,IAAI,IAAI,OAAO,CAAC,OAAO,EAAE;;QAEpC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC;YAAE,QAAQ,KAAK;;AAEjD,QAAA,IAAI,OAAO,CAAC,IAAI,CAAC,MAAM,GAAG,GAAG;YAAE,QAAQ,KAAK;;QAG5C,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC;YAAE,QAAQ,KAAK;;AAEpD,QAAA,IAAI,OAAO,CAAC,OAAO,CAAC,MAAM,GAAG,GAAG;YAAE,QAAQ,KAAK;;;AAIhD,IAAA,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,CAAC,UAAU,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;QACnD,MAAM,SAAS,GAAG,OAAO,CAAC,UAAU,CAAC,CAAC,CAAC;QAEvC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC;YAAE,QAAQ,KAAK;QACnD,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC;YAAE,QAAQ,KAAK;;AAGpD,QAAA,MAAM,gBAAgB,GAAG,OAAO,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,EAAE,EAAE,CAAC,KAC5D,CAAC,KAAK,CAAC,IAAI,IAAI,CAAC,WAAW,EAAE,KAAK,IAAI,CAAC,WAAW,EAAE,CACpD;AACD,QAAA,IAAI,gBAAgB;YAAE,QAAQ,KAAK;;;IAIpC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC;QAAE,QAAQ,KAAK;AAEhD,IAAA,IAAI,OAAO,EAAE,IAAI,EAAE;QAClB,MAAM,YAAY,GAAG,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,IAC1C,IAAI,CAAC,WAAW,EAAE,KAAK,OAAO,CAAC,IAAI,CAAC,WAAW,EAAE,CACjD;AACD,QAAA,IAAI,CAAC,YAAY;YAAE,QAAQ,KAAK;;AAEjC,IAAA,IAAI,OAAO,EAAE,OAAO,EAAE;QACrB,MAAM,eAAe,GAAG,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,IACnD,OAAO,CAAC,WAAW,EAAE,KAAK,OAAO,CAAC,OAAO,CAAC,WAAW,EAAE,CACvD;AACD,QAAA,IAAI,CAAC,eAAe;YAAE,QAAQ,KAAK;;IAGpC,QAAQ,IAAI;AACb;;AC1LA,MAAM,WAAW,GAAG,IAAI,MAAM,CAAC,oBAAoB,CAAC;AAEpD,MAAM,WAAW,GAAG,IAAI,MAAM,CAAC,kHAAkH,CAAC;AAClJ,MAAM,cAAc,GAAG,MAAM,CAAC,MAAM,IAAI,MAAM,CAAC,kHAAkH,CAAC,CAAC;AAEnK,MAAM,WAAW,GAAG,IAAI,MAAM,CAAC,2EAA2E,CAAC;AAC3G,MAAM,cAAc,GAAG,MAAM,CAAC,MAAM,IAAI,MAAM,CAAC,2EAA2E,CAAC,CAAC;AAE5H;;;;;;AAMG;AACa,SAAA,QAAQ,CAAC,GAAW,EAAE,OAAmB,EAAA;AACxD,IAAA,IAAI,OAAO,GAAG,KAAK,QAAQ,EAAE;AAC5B,QAAA,MAAM,IAAI,KAAK,CAAC,4CAA4C,CAAC;;AAG9D,IAAA,QAAQ,GAAG,CAAC,MAAM,GAAG,CAAC,KAAK,CAAC,IAAI,WAAW,CAAC,IAAI,CAAC,GAAG,CAAC;AACtD;AAEA;;;;;;AAMG;AACa,SAAA,QAAQ,CAAC,GAAW,EAAE,OAAmB,EAAA;AACxD,IAAA,IAAI,OAAO,GAAG,KAAK,QAAQ,EAAE;AAC5B,QAAA,MAAM,IAAI,KAAK,CAAC,4CAA4C,CAAC;;AAG9D,IAAA,QAAQ,GAAG,CAAC,MAAM,GAAG,CAAC,KAAK,CAAC,IAAI,WAAW,CAAC,IAAI,CAAC,GAAG,CAAC;AACtD;AAEA;;;;;;AAMG;AACa,SAAA,WAAW,CAAC,GAAW,EAAE,OAAmB,EAAA;AAC3D,IAAA,IAAI,OAAO,GAAG,KAAK,QAAQ,EAAE;AAC5B,QAAA,MAAM,IAAI,KAAK,CAAC,4CAA4C,CAAC;;AAG9D,IAAA,QAAQ,GAAG,CAAC,MAAM,GAAG,CAAC,KAAK,CAAC,IAAI,cAAc,EAAE,CAAC,IAAI,CAAC,GAAG,CAAC;AAC3D;AAEA;;;;;;AAMG;AACa,SAAA,QAAQ,CAAC,GAAW,EAAE,OAAmB,EAAA;AACxD,IAAA,IAAI,OAAO,GAAG,KAAK,QAAQ,EAAE;AAC5B,QAAA,MAAM,IAAI,KAAK,CAAC,4CAA4C,CAAC;;AAG9D,IAAA,QAAQ,GAAG,CAAC,MAAM,GAAG,CAAC,IAAI,CAAC,IAAI,WAAW,CAAC,IAAI,CAAC,GAAG,CAAC;AACrD;AAEA;;;;;;AAMG;AACa,SAAA,WAAW,CAAC,GAAW,EAAE,OAAmB,EAAA;AAC3D,IAAA,IAAI,OAAO,GAAG,KAAK,QAAQ,EAAE;AAC5B,QAAA,MAAM,IAAI,KAAK,CAAC,4CAA4C,CAAC;;AAG9D,IAAA,QAAQ,GAAG,CAAC,MAAM,GAAG,CAAC,KAAK,CAAC,IAAI,cAAc,EAAE,CAAC,IAAI,CAAC,GAAG,CAAC;AAC3D;;;;;;;;;;;;;;;;;;;AC5Ea,MAAA,OAAO,GAAG;AACtB,IAAA,MAAM,EAAE,aAAa;AACrB,IAAA,MAAM,EAAEA;;;ACAT;;;;;;;;AAQG;AACG,SAAU,MAAM,CACrB,OAAU,EAAA;IAEV,IAAI,OAAO,GAAG,EAAE;IAChB,IAAI,KAAK,GAAkB,CAAC;AAC3B,YAAA,GAAG,EAAE,OAAO;AACZ,YAAA,GAAG,EAAE;AACL,SAAA,CAAC;AAEF,IAAA,OAAO,KAAK,CAAC,MAAM,GAAG,CAAC,EAAE;QACxB,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,KAAK,CAAC,GAAG,EAAG;AAE/B,QAAA,IAAI,aAAa,CAAC,GAAG,CAAC,EAAE;AACvB,YAAA,IAAI,aAAa,CAAC,GAAG,CAAC,EAAE;AACvB,gBAAA,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE;;iBAEZ;gBACJ,MAAM,IAAI,GAAG,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC;AACjC,gBAAA,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AACrC,oBAAA,MAAM,GAAG,GAAG,IAAI,CAAC,CAAC,CAAC;oBAEnB,IAAI,aAAa,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,EAAE;wBAC5B,IAAI,aAAa,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,EAAE;4BAC5B,GAAG,CAAC,GAAG,CAAC,GAAG,EAAE,GAAG,GAAG,CAAC,GAAG,CAAC,EAAE;;6BACpB;AACN,4BAAA,GAAG,CAAC,GAAG,CAAC,GAAG,EAAE;4BAEb,KAAK,CAAC,IAAI,CAAC;AACV,gCAAA,GAAG,EAAE,GAAG,CAAC,GAAG,CAAC;AACb,gCAAA,GAAG,EAAE,GAAG,CAAC,GAAG;AACZ,6BAAA,CAAC;;;yBAEG,IAAI,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,EAAE;AAC7B,wBAAA,GAAG,CAAC,GAAG,CAAC,GAAG,EAAE;wBAEb,KAAK,CAAC,IAAI,CAAC;AACV,4BAAA,GAAG,EAAE,GAAG,CAAC,GAAG,CAAC;AACb,4BAAA,GAAG,EAAE,GAAG,CAAC,GAAG;AACZ,yBAAA,CAAC;;yBACI;wBACN,GAAG,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,CAAC;;;;;AAKlB,aAAA,IAAI,OAAO,CAAC,GAAG,CAAC,EAAE;AACtB,YAAA,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBACpC,MAAM,KAAK,GAAG,CAAC;gBAEf,IAAI,aAAa,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,EAAE;oBAC9B,IAAI,aAAa,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,EAAE;wBAC9B,GAAG,CAAC,CAAC,CAAC,GAAG,EAAE,GAAG,GAAG,CAAC,KAAK,CAAC,EAAE;;yBACpB;AACN,wBAAA,GAAG,CAAC,CAAC,CAAC,GAAG,EAAE;wBAEX,KAAK,CAAC,IAAI,CAAC;AACV,4BAAA,GAAG,EAAE,GAAG,CAAC,KAAK,CAAC;AACf,4BAAA,GAAG,EAAE,GAAG,CAAC,KAAK;AACd,yBAAA,CAAC;;;qBAEG,IAAI,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,EAAE;AAC/B,oBAAA,GAAG,CAAC,KAAK,CAAC,GAAG,EAAE;oBAEf,KAAK,CAAC,IAAI,CAAC;AACV,wBAAA,GAAG,EAAE,GAAG,CAAC,KAAK,CAAC;AACf,wBAAA,GAAG,EAAE,GAAG,CAAC,KAAK;AACd,qBAAA,CAAC;;qBACI;oBACN,GAAG,CAAC,KAAK,CAAC,GAAG,GAAG,CAAC,KAAK,CAAC;;;;aAIrB;YACJ,GAAG,GAAG,GAAG;;;AAIX,IAAA,OAAQ,OAAa;AACtB;;AC7FO,MAAM,eAAe,GAIxB;AACH,IAAA,IAAI,EAAE,WAAW;AACjB,IAAA,UAAU,EAAE,EAAE;IACd,KAAK,CAAC,KAAK,EAAE,QAAQ,EAAA;QACpB,QAAQ,IAAI;KACZ;AACD,IAAA,KAAK,CAAC,KAAK,EAAE,QAAQ,EAAE,KAAK,EAAA;AAC3B,QAAA,IAAI,KAAK,KAAK,SAAS,EAAE;YACxB,QAAQ,4BAA4B;;QAGrC,QAAQ,IAAI;;CAEb;;ACfM,MAAM,cAAc,GAKvB;AACH,IAAA,IAAI,EAAE,UAAU;AAChB,IAAA,UAAU,EAAE;AACX,QAAA,2BAA2B,EAC1B,+CAA+C;AAChD,QAAA,oCAAoC,EACnC,+CAA+C;AAChD,QAAA,mCAAmC,EAClC,uEAAuE;AACxE,QAAA,sCAAsC,EACrC,kEAAkE;AACnE,QAAA,wCAAwC,EACvC;AACD,KAAA;AACD,IAAA,cAAc,EAAE;QACf,KAAK,EAAK,CAAC,IAAI,CAAC;QAChB,KAAK,EAAK,CAAC,IAAI,CAAC;QAChB,eAAe,EAAE,CAAC,IAAI,CAAC;QACvB,eAAe,EAAE,CAAC,IAAI;AACtB,KAAA;AACD,IAAA,WAAW,EAAE;QACZ,QAAQ,EAAK,CAAC,IAAI,CAAC;QACnB,aAAa,EAAI,CAAC,IAAI,CAAC;QACvB,iBAAiB,EAAG,CAAC,IAAI,CAAC;QAC1B,sBAAsB,EAAE,CAAC,IAAI;AAC7B,KAAA;IACD,KAAK,CAAC,KAAK,EAAE,QAAQ,EAAA;AACpB,QAAA,MAAM,EAAE,MAAM,EAAE,GAAG,QAAQ;AAE3B,QAAA,IAAI,MAAM,KAAK,SAAS,EAAE;AACzB,YAAA,IAAI,OAAO,MAAM,IAAI,QAAQ,EAAE;gBAC9B,IAAI,EAAE,MAAM,IAAI,IAAI,CAAC,cAAc,CAAC,EAAE;oBACrC,QAAQ,sCAAsC;;;AAEzC,iBAAA,IAAI,OAAO,CAAC,MAAM,CAAC,EAAE;AAC3B,gBAAA,IAAI,MAAM,CAAC,MAAM,GAAG,CAAC,EAAE;oBACtB,QAAQ,qCAAqC;;AAE9C,gBAAA,KAAK,MAAM,IAAI,IAAI,MAAM,EAAE;AAC1B,oBAAA,IAAI,OAAO,IAAI,KAAK,QAAQ,EAAE;wBAC7B,QAAQ,0CAA0C;;oBAEnD,IAAI,EAAE,IAAI,IAAI,IAAI,CAAC,cAAc,CAAC,EAAE;wBACnC,QAAQ,0CAA0C;;;;iBAG9C;gBACN,QAAQ,6BAA6B;;;AAIvC,QAAA,IAAI,OAAO,CAAC,MAAM,CAAC,EAAE;AACpB,YAAA,MAAM,CAAC,MAAM,CAAC,QAAQ,EAAE;gBACvB,aAAa,EAAE,MAAM,CAAC,MAAM,CAAC,CAAC,IAAI,EAAE,GAAG,MACtC,IAAI,GAAG,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,CAC/B,EAAE,CAAC;AACJ,aAAA,CAAC;;aACI;AACN,YAAA,MAAM,CAAC,MAAM,CAAC,QAAQ,EAAE;AACvB,gBAAA,aAAa,EAAE;AACd,sBAAE,IAAI,CAAC,cAAc,CAAC,MAAM;AAC5B,sBAAE;AACH,aAAA,CAAC;;QAGH,QAAQ,IAAI;KACZ;AACD,IAAA,KAAK,CAAC,KAAK,EAAE,QAAQ,EAAE,KAAK,EAAA;AAC3B,QAAA,IAAI,OAAO,KAAK,KAAK,UAAU,EAAE;YAChC,QAAQ,2BAA2B;;AAGpC,QAAA,MAAM,EAAE,aAAa,EAAE,GAAG,QAAQ;AAClC,QAAA,MAAM,EAAE,WAAW,EAAE,GAAG,IAAI;QAE5B,IAAI,aAAa,EAAE;AAClB,YAAA,MAAM,GAAG,GAAG,cAAc,CAAC,KAAK,CAAW;AAC3C,YAAA,MAAM,UAAU,GAAG,WAAW,CAAC,GAAG,CAAC;YAEnC,IAAI,CAAC,UAAU,IAAI,EAAE,aAAa,GAAG,UAAU,CAAC,EAAE;gBACjD,QAAQ,oBAAoB;;;QAI9B,QAAQ,IAAI;;CAEb;;AC7FM,MAAM,aAAa,GAItB;AACH,IAAA,IAAI,EAAE,SAAS;AACf,IAAA,UAAU,EAAE;AACX,QAAA,4BAA4B,EAC3B;AACD,KAAA;IACD,KAAK,CAAC,KAAK,EAAE,QAAQ,EAAA;AACpB,QAAA,MAAM,EAAE,OAAO,EAAE,GAAG,QAAQ;QAE5B,IAAI,OAAO,KAAK,SAAS,IAAI,OAAO,OAAO,KAAK,SAAS,EAAE;YAC1D,QAAQ,8BAA8B;;QAGvC,QAAQ,IAAI;KACZ;AACD,IAAA,KAAK,CAAC,KAAK,EAAE,QAAQ,EAAE,KAAK,EAAA;AAC3B,QAAA,IAAI,OAAO,KAAK,KAAK,SAAS,EAAE;YAC/B,QAAQ,0BAA0B;;AAGnC,QAAA,MAAM,EAAE,OAAO,EAAE,GAAG,QAAQ;QAE5B,IAAI,OAAO,KAAK,SAAS,IAAI,OAAO,KAAK,KAAK,EAAE;YAC/C,QAAQ,qBAAqB;;QAG9B,QAAQ,IAAI;;CAEb;;AChCM,MAAM,aAAa,GAAmC;AAC5D,IAAA,IAAI,EAAE,SAAS;AACf,IAAA,UAAU,EAAE,EAAE;IACd,KAAK,CAAC,KAAK,EAAE,QAAQ,EAAA;QACpB,QAAQ,IAAI;KACZ;AACD,IAAA,KAAK,CAAC,KAAK,EAAE,QAAQ,EAAE,KAAK,EAAA;QAC3B,QAAQ,IAAI;;CAEb;;ACRM,MAAM,YAAY,GAIrB;AACH,IAAA,IAAI,EAAE,QAAQ;AACd,IAAA,UAAU,EAAE;AACX,QAAA,4BAA4B,EAC3B,uEAAuE;AACxE,QAAA,oCAAoC,EACnC,iFAAiF;AAClF,QAAA,uCAAuC,EACtC,mEAAmE;AACpE,QAAA,qCAAqC,EACpC,sFAAsF;AACvF,QAAA,uCAAuC,EACtC,mEAAmE;AACpE,QAAA,yCAAyC,EACxC,qEAAqE;AACtE,QAAA,2BAA2B,EACjB;AACV,KAAA;IACD,KAAK,CAAC,KAAK,EAAE,QAAQ,EAAA;AACpB,QAAA,MAAM,EAAE,OAAO,EAAE,MAAM,EAAE,GAAG,QAAQ;AAEpC,QAAA,IAAI,OAAO,KAAK,SAAS,EAAE;AAC1B,YAAA,IAAI,eAAe;AAEnB,YAAA,IAAI,OAAO,OAAO,KAAK,QAAQ,EAAE;gBAChC,eAAe,GAAG,IAAI,GAAG,CAAC,CAAC,OAAO,CAAC,CAAC;;AAC9B,iBAAA,IAAI,OAAO,CAAC,OAAO,CAAC,EAAE;AAC5B,gBAAA,IAAI,OAAO,CAAC,MAAM,GAAG,CAAC,EAAE;oBACvB,QAAQ,sCAAsC;;AAG/C,gBAAA,KAAK,MAAM,IAAI,IAAI,OAAO,EAAE;AAC3B,oBAAA,IAAI,OAAO,IAAI,KAAK,QAAQ,EAAE;wBAC7B,QAAQ,yCAAyC;;;AAInD,gBAAA,eAAe,GAAG,IAAI,GAAG,CAAC,OAAO,CAAC;;AAC5B,iBAAA,IAAI,aAAa,CAAC,OAAO,CAAC,EAAE;gBAClC,MAAM,IAAI,GAAG,OAAO,CAAC,OAAO,CAAC,OAAO,CAAC;AACrC,gBAAA,IAAI,IAAI,CAAC,MAAM,GAAG,CAAC,EAAE;oBACpB,QAAQ,uCAAuC;;AAGhD,gBAAA,KAAK,MAAM,GAAG,IAAI,IAAI,EAAE;AACvB,oBAAA,IAAI,OAAO,GAAG,KAAK,QAAQ,EAAE;wBAC5B,QAAQ,yCAAyC;;oBAElD,IAAI,OAAO,OAAO,CAAC,GAAG,CAAC,KAAK,QAAQ,EAAE;wBACrC,QAAQ,2CAA2C;;;gBAIrD,eAAe,GAAG,IAAI,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;;iBAC3C;gBACN,QAAQ,8BAA8B;;YAGvC,MAAM,CAAC,MAAM,CAAC,QAAQ,EAAE,EAAE,eAAe,EAAE,CAAC;;QAE7C,IAAI,MAAM,KAAK,SAAS,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,EAAE;YAChD,QAAQ,6BAA6B;;QAGtC,QAAQ,IAAI;KACZ;AACD,IAAA,KAAK,CAAC,KAAK,EAAE,QAAQ,EAAE,KAAK,EAAA;AAC3B,QAAA,IAAI,OAAO,KAAK,KAAK,QAAQ,EAAE;YAC9B,QAAQ,yBAAyB;;AAGlC,QAAA,MAAM,EAAE,eAAe,EAAE,MAAM,EAAE,GAAG,QAAQ;AAE5C,QAAA,IAAI,eAAe,KAAK,SAAS,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE;YACjE,QAAQ,qBAAqB;;QAE9B,IAAI,MAAM,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE;YAC7B,QAAQ,oBAAoB;;QAG7B,QAAQ,IAAI;;CAEb;;ACtFM,MAAM,YAAY,GAIrB;AACH,IAAA,IAAI,EAAE,QAAQ;AACd,IAAA,UAAU,EAAE;AACL,QAAA,wBAAwB,EAC1B,4CAA4C;AAC1C,QAAA,wBAAwB,EACpB,4CAA4C;AAChD,QAAA,gCAAgC,EACrC,wDAAwD;AACnD,QAAA,4BAA4B,EACjC,uEAAuE;AACxE,QAAA,oCAAoC,EACnC,iFAAiF;AAClF,QAAA,uCAAuC,EACtC,mEAAmE;AACpE,QAAA,qCAAqC,EACpC,iFAAiF;AAClF,QAAA,uCAAuC,EACtC,mEAAmE;AACpE,QAAA,yCAAyC,EACxC,qEAAqE;AAChE,QAAA,2BAA2B,EACvB;AACP,KAAA;IACJ,KAAK,CAAC,KAAK,EAAE,QAAQ,EAAA;QACpB,MAAM,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,MAAM,EAAE,GAAG,QAAQ;QAE9C,IAAI,GAAG,KAAK,SAAS,IAAI,OAAO,GAAG,KAAK,QAAQ,EAAE;YACjD,QAAQ,0BAA0B;;QAEnC,IAAI,GAAG,KAAK,SAAS,IAAI,OAAO,GAAG,KAAK,QAAQ,EAAE;YACjD,QAAQ,0BAA0B;;AAEnC,QAAA,IAAI,GAAG,KAAK,SAAS,IAAI,GAAG,KAAK,SAAS,IAAI,GAAG,GAAG,GAAG,EAAE;YACxD,QAAQ,kCAAkC;;AAG3C,QAAA,IAAI,OAAO,KAAK,SAAS,EAAE;AAC1B,YAAA,IAAI,eAAe;AAEnB,YAAA,IAAI,OAAO,OAAO,KAAK,QAAQ,EAAE;gBAChC,eAAe,GAAG,IAAI,GAAG,CAAC,CAAC,OAAO,CAAC,CAAC;;AAC9B,iBAAA,IAAI,OAAO,CAAC,OAAO,CAAC,EAAE;AAC5B,gBAAA,IAAI,OAAO,CAAC,MAAM,GAAG,CAAC,EAAE;oBACvB,QAAQ,sCAAsC;;AAG/C,gBAAA,KAAK,MAAM,IAAI,IAAI,OAAO,EAAE;AAC3B,oBAAA,IAAI,OAAO,IAAI,KAAK,QAAQ,EAAE;wBAC7B,QAAQ,yCAAyC;;;AAInD,gBAAA,eAAe,GAAG,IAAI,GAAG,CAAC,OAAO,CAAC;;AAC5B,iBAAA,IAAI,aAAa,CAAC,OAAO,CAAC,EAAE;gBAClC,MAAM,IAAI,GAAG,OAAO,CAAC,OAAO,CAAC,OAAO,CAAC;AACrC,gBAAA,IAAI,IAAI,CAAC,MAAM,GAAG,CAAC,EAAE;oBACpB,QAAQ,uCAAuC;;AAGhD,gBAAA,KAAK,MAAM,GAAG,IAAI,IAAI,EAAE;AACvB,oBAAA,IAAI,OAAO,GAAG,KAAK,QAAQ,EAAE;wBAC5B,QAAQ,yCAAyC;;oBAElD,IAAI,OAAO,OAAO,CAAC,GAAG,CAAC,KAAK,QAAQ,EAAE;wBACrC,QAAQ,2CAA2C;;;gBAIrD,eAAe,GAAG,IAAI,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;;iBAC3C;gBACN,QAAQ,8BAA8B;;YAGvC,MAAM,CAAC,MAAM,CAAC,QAAQ,EAAE,EAAE,eAAe,EAAE,CAAC;;QAE7C,IAAI,MAAM,KAAK,SAAS,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,EAAE;YAChD,QAAQ,6BAA6B;;QAGtC,QAAQ,IAAI;KACZ;AACD,IAAA,KAAK,CAAC,KAAK,EAAE,QAAQ,EAAE,KAAK,EAAA;AAC3B,QAAA,IAAI,OAAO,KAAK,KAAK,QAAQ,EAAE;YAC9B,QAAQ,yBAAyB;;QAGlC,MAAM,EAAE,GAAG,EAAE,GAAG,EAAE,eAAe,EAAE,MAAM,EAAE,GAAG,QAAQ;QAEtD,IAAI,GAAG,KAAK,SAAS,IAAI,KAAK,GAAG,GAAG,EAAE;YACrC,QAAQ,iBAAiB;;QAE1B,IAAI,GAAG,KAAK,SAAS,IAAI,KAAK,GAAG,GAAG,EAAE;YACrC,QAAQ,iBAAiB;;AAE1B,QAAA,IAAI,eAAe,KAAK,SAAS,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE;YACjE,QAAQ,qBAAqB;;QAE9B,IAAI,MAAM,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE;YAC7B,QAAQ,oBAAoB;;QAG7B,QAAQ,IAAI;;CAEb;;AC5GD,MAAM,aAAa,GAA6C,IAAI,GAAG,CAAC,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;AAEhG,MAAM,YAAY,GAIrB;AACH,IAAA,IAAI,EAAE,QAAQ;AACd,IAAA,UAAU,EAAE;AACX,QAAA,wBAAwB,EACvB,4CAA4C;AAC7C,QAAA,wBAAwB,EACvB,4CAA4C;AAC7C,QAAA,gCAAgC,EAC/B,2DAA2D;AAC5D,QAAA,0BAA0B,EACzB,qDAAqD;AACtD,QAAA,4BAA4B,EAC3B,uEAAuE;AACxE,QAAA,oCAAoC,EACnC,iFAAiF;AAClF,QAAA,uCAAuC,EACtC,mEAAmE;AACpE,QAAA,qCAAqC,EACpC,iFAAiF;AAClF,QAAA,uCAAuC,EACtC,mEAAmE;AACpE,QAAA,yCAAyC,EACxC,qEAAqE;AACtE,QAAA,+BAA+B,EAC9B,yDAAyD;AAC1D,QAAA,wCAAwC,EACvC,oFAAoF;AACrF,QAAA,0CAA0C,EACzC,sEAAsE;AACvE,QAAA,4CAA4C,EAC3C,sEAAsE;AACvE,QAAA,4CAA4C,EAC3C,sFAAsF;AACvF,QAAA,2BAA2B,EAC1B;AACD,KAAA;IACD,KAAK,CAAC,KAAK,EAAE,QAAQ,EAAA;AACpB,QAAA,MAAM,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,OAAO,EAAE,UAAU,EAAE,MAAM,EAAE,GAAG,QAAQ;QAEjE,IAAI,GAAG,KAAK,SAAS,IAAI,OAAO,GAAG,KAAK,QAAQ,EAAE;YACjD,QAAQ,0BAA0B;;QAEnC,IAAI,GAAG,KAAK,SAAS,IAAI,OAAO,GAAG,KAAK,QAAQ,EAAE;YACjD,QAAQ,0BAA0B;;AAEnC,QAAA,IAAI,GAAG,KAAK,SAAS,IAAI,GAAG,KAAK,SAAS,IAAI,GAAG,GAAG,GAAG,EAAE;YACxD,QAAQ,kCAAkC;;QAE3C,IAAI,KAAK,KAAK,SAAS,IAAI,EAAE,KAAK,YAAY,MAAM,CAAC,EAAE;YACtD,QAAQ,4BAA4B;;AAErC,QAAA,IAAI,OAAO,KAAK,SAAS,EAAE;AAC1B,YAAA,IAAI,eAAe;AAEnB,YAAA,IAAI,OAAO,OAAO,KAAK,QAAQ,EAAE;gBAChC,eAAe,GAAG,IAAI,GAAG,CAAC,CAAC,OAAO,CAAC,CAAC;;AAC9B,iBAAA,IAAI,OAAO,CAAC,OAAO,CAAC,EAAE;AAC5B,gBAAA,IAAI,OAAO,CAAC,MAAM,GAAG,CAAC,EAAE;oBACvB,QAAQ,sCAAsC;;AAG/C,gBAAA,KAAK,MAAM,IAAI,IAAI,OAAO,EAAE;AAC3B,oBAAA,IAAI,OAAO,IAAI,KAAK,QAAQ,EAAE;wBAC7B,QAAQ,yCAAyC;;;AAInD,gBAAA,eAAe,GAAG,IAAI,GAAG,CAAC,OAAO,CAAC;;AAC5B,iBAAA,IAAI,aAAa,CAAC,OAAO,CAAC,EAAE;gBAClC,MAAM,IAAI,GAAG,OAAO,CAAC,OAAO,CAAC,OAAO,CAAC;AACrC,gBAAA,IAAI,IAAI,CAAC,MAAM,GAAG,CAAC,EAAE;oBACpB,QAAQ,uCAAuC;;AAGhD,gBAAA,KAAK,MAAM,GAAG,IAAI,IAAI,EAAE;AACvB,oBAAA,IAAI,OAAO,GAAG,KAAK,QAAQ,EAAE;wBAC5B,QAAQ,yCAAyC;;oBAElD,IAAI,OAAO,OAAO,CAAC,GAAG,CAAC,KAAK,QAAQ,EAAE;wBACrC,QAAQ,2CAA2C;;;gBAIrD,eAAe,GAAG,IAAI,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;;iBAC3C;gBACN,QAAQ,8BAA8B;;YAGvC,MAAM,CAAC,MAAM,CAAC,QAAQ,EAAE,EAAE,eAAe,EAAE,CAAC;;AAE7C,QAAA,IAAI,UAAU,KAAK,SAAS,EAAE;AAC7B,YAAA,IAAI,aAAa,CAAC,UAAU,CAAC,EAAE;gBAC9B,MAAM,IAAI,GAAG,OAAO,CAAC,OAAO,CAAC,UAAU,CAAC;AACxC,gBAAA,IAAI,IAAI,CAAC,MAAM,GAAG,CAAC,EAAE;oBACpB,QAAQ,0CAA0C;;AAGnD,gBAAA,MAAM,kBAAkB,GAAG,IAAI,GAAG,EAAE;AACpC,gBAAA,KAAK,MAAM,GAAG,IAAI,IAAI,EAAE;AACvB,oBAAA,IAAI,OAAO,GAAG,KAAK,QAAQ,EAAE;wBAC5B,QAAQ,4CAA4C;;oBAErD,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE;wBAC5B,QAAQ,8CAA8C;;AAGvD,oBAAA,MAAM,KAAK,GAAG,UAAU,CAAC,GAA8B,CAAC;oBACxD,IAAI,OAAO,KAAK,KAAK,SAAS,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,EAAE;wBACxD,QAAQ,8CAA8C;;oBAGvD,IAAI,KAAK,KAAK,KAAK;wBAAE;AAErB,oBAAA,IAAI,KAAK,KAAK,IAAI,EAAE;AACnB,wBAAA,kBAAkB,CAAC,GAAG,CAAC,GAAG,EAAE,SAAS,CAAC;;yBAElC;AACJ,wBAAA,kBAAkB,CAAC,GAAG,CAAC,GAAG,EAAE,KAAK,CAAC;;;gBAIpC,MAAM,CAAC,MAAM,CAAC,QAAQ,EAAE,EAAE,kBAAkB,EAAE,CAAC;;iBACzC;gBACN,QAAQ,iCAAiC;;;QAG3C,IAAI,MAAM,KAAK,SAAS,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,EAAE;YAChD,QAAQ,6BAA6B;;QAGtC,QAAQ,IAAI;KACZ;AACD,IAAA,KAAK,CAAC,KAAK,EAAE,QAAQ,EAAE,KAAK,EAAA;AAC3B,QAAA,IAAI,OAAO,KAAK,KAAK,QAAQ,EAAE;YAC9B,QAAQ,yBAAyB;;AAGlC,QAAA,MAAM,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,eAAe,EAAE,kBAAkB,EAAE,MAAM,EAAE,GAAG,QAAQ;AACjF,QAAA,MAAM,WAAW,GAAG,KAAK,CAAC,MAAM;QAEhC,IAAI,GAAG,KAAK,SAAS,IAAI,WAAW,GAAG,GAAG,EAAE;YAC3C,QAAQ,iBAAiB;;QAE1B,IAAI,GAAG,KAAK,SAAS,IAAI,WAAW,GAAG,GAAG,EAAE;YAC3C,QAAQ,iBAAiB;;AAE1B,QAAA,IAAI,KAAK,KAAK,SAAS,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE;YAC9C,QAAQ,mBAAmB;;AAE5B,QAAA,IAAI,eAAe,KAAK,SAAS,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE;YACjE,QAAQ,qBAAqB;;AAE9B,QAAA,IAAI,kBAAkB,KAAK,SAAS,EAAE;YACrC,IAAI,QAAQ,GAAG,KAAK;YAEpB,KAAK,MAAM,CAAC,GAAG,EAAE,MAAM,CAAC,IAAI,kBAAkB,EAAE;AAC/C,gBAAA,IAAI,aAAa,CAAC,GAAG,CAAC,GAAG,CAAE,CAAC,KAAK,EAAE,MAAM,CAAC,EAAE;oBAC3C,QAAQ,GAAG,IAAI;oBACf;;;YAIF,IAAI,CAAC,QAAQ,EAAE;gBACd,QAAQ,wBAAwB;;;QAGlC,IAAI,MAAM,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE;YAC7B,QAAQ,oBAAoB;;QAG7B,QAAQ,IAAI;;CAEb;;AClLM,MAAM,YAAY,GAKrB;AACH,IAAA,IAAI,EAAE,QAAQ;AACd,IAAA,UAAU,EAAE;AACX,QAAA,2BAA2B,EAC1B,+CAA+C;AAChD,QAAA,6BAA6B,EAC5B,+CAA+C;AAChD,QAAA,wBAAwB,EACvB,4CAA4C;AAC7C,QAAA,wBAAwB,EACvB,4CAA4C;AAC7C,QAAA,gCAAgC,EAC/B,wDAAwD;AACzD,QAAA,0BAA0B,EACzB,oDAAoD;AACrD,QAAA,uCAAuC,EACtC,yEAAyE;AAC1E,QAAA,kCAAkC,EACjC,mGAAmG;AACpG,QAAA,kCAAkC,EACjC,mGAAmG;AACpG,QAAA,yDAAyD,EACxD,wIAAwI;AACzI,QAAA,6BAA6B,EAC5B,2DAA2D;AAC5D,QAAA,wCAAwC,EACvC,8EAA8E;AAC/E,QAAA,0CAA0C,EACzC,yEAAyE;AAC1E,QAAA,yBAAyB,EACxB,mDAAmD;AACpD,QAAA,4CAA4C,EAC3C,sEAAsE;AACvE,QAAA,8CAA8C,EAC7C,6EAA6E;AAC9E,QAAA,gDAAgD,EAC/C,mFAAmF;AACpF,QAAA,2BAA2B,EAC1B;AACD,KAAA;IACD,OAAO,EAAE,CAAC,OAAO,CAAC;IAClB,eAAe,CAAC,QAAQ,EAAE,YAAY,EAAA;QACrC,IAAI,QAAQ,KAAK,IAAI;YAAE,QAAQ,YAAY;QAC3C,IAAI,QAAQ,KAAK,KAAK;YAAE,QAAQ,EAAE;AAElC,QAAA,QAAQ,YAAY,CAAC,MAAM,CAAC,GAAG,IAAI,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;KAC1D;IACD,eAAe,CAAC,QAAQ,EAAE,YAAY,EAAA;QACrC,IAAI,QAAQ,KAAK,IAAI;YAAE,QAAQ,EAAE;QACjC,IAAI,QAAQ,KAAK,KAAK;YAAE,QAAQ,YAAY;AAE5C,QAAA,QAAQ,YAAY,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;KAC3D;AACD,IAAA,gBAAgB,CAAC,GAAG,EAAA;QACnB,QAAQ,aAAa,CAAC,GAAG,CAAC,KAAK,EAAE,MAAM,IAAI,GAAG,CAAC,IAAI,OAAO,GAAG,CAAC,IAAI,KAAK,QAAQ,CAAC;KAChF;IACD,KAAK,CAAC,KAAK,EAAE,QAAQ,EAAA;AACpB,QAAA,MAAM,EAAE,MAAM,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,QAAQ,EAAE,IAAI,EAAE,MAAM,EAAE,GAAG,QAAQ;AACpE,QAAA,MAAM,gBAAgB,GAAG,QAAQ,IAAI,KAAK;AAE1C,QAAA,IAAI,MAAM,KAAK,SAAS,EAAE;AACzB,YAAA,IAAI,OAAO,MAAM,KAAK,QAAQ,EAAE;gBAC/B,QAAQ,6BAA6B;;YAEtC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAE;gBACnC,QAAQ,+BAA+B;;;QAGzC,IAAI,GAAG,KAAK,SAAS,IAAI,OAAO,GAAG,KAAK,QAAQ,EAAE;YACjD,QAAQ,0BAA0B;;QAEnC,IAAI,GAAG,KAAK,SAAS,IAAI,OAAO,GAAG,KAAK,QAAQ,EAAE;YACjD,QAAQ,0BAA0B;;AAEnC,QAAA,IAAI,GAAG,KAAK,SAAS,IAAI,GAAG,KAAK,SAAS,IAAI,GAAG,GAAG,GAAG,EAAE;YACxD,QAAQ,kCAAkC;;AAE3C,QAAA,IAAI,KAAK,KAAK,SAAS,EAAE;AACxB,YAAA,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,EAAE;gBAC1B,QAAQ,4BAA4B;;YAErC,IACC,CAAC,GAAG,KAAK,SAAS,IAAI,GAAG,KAAK,SAAS;AACpC,mBAAA,EAAE,MAAM,IAAI,QAAQ;AACpB,mBAAA,EAAE,QAAQ,IAAI,QAAQ,CAAC,EACzB;gBACD,QAAQ,2DAA2D;;YAGpE,MAAM,SAAS,GAAG,OAAO,CAAC,OAAO,CAAC,KAAK,CAAC;AACxC,YAAA,MAAM,eAAe,GAAG,SAAS,CAAC,MAAM;YAExC,IAAI,GAAG,KAAK,SAAS,IAAK,GAAG,GAAG,eAAe,EAAE;gBAChD,QAAQ,oCAAoC;;YAE7C,IAAI,GAAG,KAAK,SAAS,IAAK,GAAG,GAAG,eAAe,EAAE;gBAChD,QAAQ,oCAAoC;;AAG7C,YAAA,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,eAAe,EAAE,CAAC,EAAE,EAAE;AACzC,gBAAA,MAAM,GAAG,GAAG,SAAS,CAAC,CAAC,CAAC;AACxB,gBAAA,IAAI,IAAI,GAAG,KAAK,CAAC,GAAG,CAAC;AAErB,gBAAA,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,EAAE;oBACzB,QAAQ,yCAAyC;;AAGlD,gBAAA,IAAI,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,EAAE;AAChC,oBAAA,IAAI,GAAG;AACN,wBAAA,IAAI,EAAE,QAAQ;AACd,wBAAA,KAAK,EAAE;qBACP;AACD,oBAAA,KAAK,CAAC,GAAG,CAAC,GAAG,IAAI;;gBAGlB,KAAK,CAAC,IAAI,CAAC;AACV,oBAAA,IAAI,EAAE,IAAI;AACV,oBAAA,QAAQ,EAAE;AACT,wBAAA,QAAQ,EAAE,CAAC,OAAO,EAAE,GAAG,CAAC;AACxB,wBAAA,QAAQ,EAAE,CAAC,GAAG,EAAE,GAAG;AACnB;AACD,iBAAA,CAAC;;AAGH,YAAA,MAAM,CAAC,MAAM,CAAC,QAAQ,EAAE;AACvB,gBAAA,cAAc,EAAE,IAAI,GAAG,CAAC,SAAS,CAAC;AAClC,gBAAA,cAAc,EAAE,IAAI,GAAG,CAAC,IAAI,CAAC,eAAe,CAAC,gBAAgB,EAAE,SAAS,CAAC,CAAC;AAC1E,gBAAA,cAAc,EAAE,IAAI,GAAG,CAAC,IAAI,CAAC,eAAe,CAAC,gBAAgB,EAAE,SAAS,CAAC;AACzE,aAAA,CAAC;;AAEH,QAAA,IAAI,QAAQ,KAAK,SAAS,EAAE;AAC3B,YAAA,IAAI,OAAO,CAAC,QAAQ,CAAC,EAAE;AACtB,gBAAA,KAAK,MAAM,IAAI,IAAI,QAAQ,EAAE;oBAC5B,IAAI,OAAO,IAAI,KAAK,QAAQ,IAAI,OAAO,IAAI,KAAK,QAAQ,EAAE;wBACzD,QAAQ,0CAA0C;;;;AAIhD,iBAAA,IAAI,OAAO,QAAQ,KAAK,SAAS,EAAE;gBACvC,QAAQ,+BAA+B;;AAGxC,YAAA,IAAI,KAAK,KAAK,SAAS,EAAE;gBACxB,QAAQ,4CAA4C;;AAGrD,YAAA,MAAM,CAAC,MAAM,CAAC,QAAQ,EAAE;AACvB,gBAAA,QAAQ,EAAE;AACV,aAAA,CAAC;;AAEH,QAAA,IAAI,IAAI,KAAK,SAAS,EAAE;AACvB,YAAA,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,EAAE;gBACzB,QAAQ,2BAA2B;;AAEpC,YAAA,IAAI,EAAE,MAAM,IAAI,IAAI,CAAC,EAAE;gBACtB,QAAQ,8CAA8C;;AAEvD,YAAA,IAAI,OAAO,IAAI,CAAC,IAAI,KAAK,QAAQ,EAAE;gBAClC,QAAQ,gDAAgD;;AAEzD,YAAA,IAAI,IAAI,CAAC,IAAI,KAAK,QAAQ,IAAI,IAAI,CAAC,IAAI,KAAK,QAAQ,EAAE;gBACrD,QAAQ,kDAAkD;;YAG3D,KAAK,CAAC,IAAI,CAAC;AACV,gBAAA,IAAI,EAAE,IAAI;AACV,gBAAA,QAAQ,EAAE;oBACT,QAAQ,EAAE,CAAC,MAAM,CAAC;AAClB,oBAAA,QAAQ,EAAE;AACV;AACD,aAAA,CAAC;;AAEH,QAAA,IAAI,MAAM,KAAK,SAAS,EAAE;AACzB,YAAA,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,EAAE;gBAC3B,QAAQ,6BAA6B;;YAGtC,KAAK,CAAC,IAAI,CAAC;AACV,gBAAA,IAAI,EAAE,MAAM;AACZ,gBAAA,QAAQ,EAAE;oBACT,QAAQ,EAAE,CAAC,QAAQ,CAAC;AACpB,oBAAA,QAAQ,EAAE,CAAC,GAAG,EAAE,QAAQ,EAAE,QAAQ;AAClC;AACD,aAAA,CAAC;;QAGH,QAAQ,IAAI;KACZ;AACD,IAAA,KAAK,CAAC,KAAK,EAAE,QAAQ,EAAE,IAAI,EAAA;AAC1B,QAAA,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE;YACpB,QAAQ,yBAAyB;;QAGlC,MAAM,EACL,MAAM,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,IAAI,EAAE,MAAM,EACrC,cAAc,EAAE,cAAc,EAAE,cAAc,EAC9C,GAAG,QAAQ;QAEZ,IAAI,MAAM,KAAK,OAAO,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,EAAE;YAC/C,QAAQ,0BAA0B;;QAGnC,MAAM,eAAe,GAAG,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC;AAC7C,QAAA,MAAM,eAAe,GAAG,eAAe,CAAC,MAAM;QAE9C,IAAI,GAAG,KAAK,SAAS,IAAI,eAAe,GAAG,GAAG,EAAE;YAC/C,QAAQ,iBAAiB;;QAE1B,IAAI,GAAG,KAAK,SAAS,IAAI,eAAe,GAAG,GAAG,EAAE;YAC/C,QAAQ,iBAAiB;;AAE1B,QAAA,IAAI,KAAK,KAAK,SAAS,EAAE;AACxB,YAAA,MAAM,gBAAgB,GAAG,cAAe,CAAC,IAAI;AAC7C,YAAA,MAAM,gBAAgB,GAAG,cAAe,CAAC,IAAI;AAE7C,YAAA,IAAI,eAAe,GAAG,gBAAgB,EAAE;gBACvC,QAAQ,mBAAmB;;YAG5B,IAAI,IAAI,KAAK,SAAS,IAAI,MAAM,KAAK,SAAS,EAAE;AAC/C,gBAAA,IAAI,eAAe,GAAG,gBAAgB,EAAE;oBACvC,QAAQ,mBAAmB;;gBAG5B,IAAI,eAAe,GAAG,gBAAgB;AACtC,gBAAA,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,eAAe,EAAE,CAAC,EAAE,EAAE;AACzC,oBAAA,MAAM,GAAG,GAAG,eAAe,CAAC,CAAC,CAAC;AAE9B,oBAAA,IAAI,cAAe,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE;AAC7B,wBAAA,eAAe,EAAE;;AAEb,yBAAA,IAAI,eAAe,GAAG,CAAC,EAAE;wBAC7B,QAAQ,mBAAmB;;yBAEvB,IAAI,CAAC,cAAe,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE;wBACnC,QAAQ,mBAAmB;;oBAG5B,KAAK,CAAC,IAAI,CAAC;AACV,wBAAA,IAAI,EAAE,IAAI,CAAC,GAAG,CAAC;AACf,wBAAA,IAAI,EAAE,KAAK,CAAC,GAAG;AACf,qBAAA,CAAC;;;iBAEG;gBACN,IAAI,eAAe,GAAG,gBAAgB;AACtC,gBAAA,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,eAAe,EAAE,CAAC,EAAE,EAAE;AACzC,oBAAA,MAAM,GAAG,GAAG,eAAe,CAAC,CAAC,CAAC;AAE9B,oBAAA,IAAI,cAAe,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE;AAC7B,wBAAA,eAAe,EAAE;;AAEb,yBAAA,IAAI,eAAe,GAAG,CAAC,EAAE;wBAC7B,QAAQ,mBAAmB;;yBAEvB,IAAI,CAAC,cAAe,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE;AACnC,wBAAA,IAAI,IAAI,KAAK,SAAS,EAAE;4BACvB,KAAK,CAAC,IAAI,CAAC;AACV,gCAAA,IAAI,EAAE,GAAG;AACT,gCAAA,IAAI,EAAE;AACN,6BAAA,CAAC;;AAEH,wBAAA,IAAI,MAAM,KAAK,SAAS,EAAE;4BACzB,KAAK,CAAC,IAAI,CAAC;AACV,gCAAA,IAAI,EAAE,IAAI,CAAC,GAAG,CAAC;AACf,gCAAA,IAAI,EAAE;AACN,6BAAA,CAAC;;wBAEH;;oBAGD,KAAK,CAAC,IAAI,CAAC;AACV,wBAAA,IAAI,EAAE,IAAI,CAAC,GAAG,CAAC;AACf,wBAAA,IAAI,EAAE,KAAK,CAAC,GAAG;AACf,qBAAA,CAAC;;;;QAIL,IAAI,KAAK,KAAK,SAAS,IAAI,IAAI,KAAK,SAAS,EAAE;AAC9C,YAAA,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,eAAe,EAAE,CAAC,EAAE,EAAE;AACzC,gBAAA,MAAM,GAAG,GAAG,eAAe,CAAC,CAAC,CAAC;gBAE9B,KAAK,CAAC,IAAI,CAAC;AACV,oBAAA,IAAI,EAAE,GAAG;AACT,oBAAA,IAAI,EAAE;AACN,iBAAA,CAAC;;;QAGJ,IAAI,KAAK,KAAK,SAAS,IAAI,MAAM,KAAK,SAAS,EAAE;AAChD,YAAA,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,eAAe,EAAE,CAAC,EAAE,EAAE;AACzC,gBAAA,MAAM,GAAG,GAAG,eAAe,CAAC,CAAC,CAAC;gBAE9B,KAAK,CAAC,IAAI,CAAC;AACV,oBAAA,IAAI,EAAE,IAAI,CAAC,GAAG,CAAC;AACf,oBAAA,IAAI,EAAE;AACN,iBAAA,CAAC;;;QAIJ,QAAQ,IAAI;;CAEb;;ACjTM,MAAM,WAAW,GAKpB;AACH,IAAA,IAAI,EAAE,OAAO;AACb,IAAA,UAAU,EAAE;AACX,QAAA,wBAAwB,EACvB,4CAA4C;AAC7C,QAAA,wBAAwB,EACvB,4CAA4C;AAC7C,QAAA,gCAAgC,EAC/B,wDAAwD;AACzD,QAAA,0BAA0B,EACzB,6CAA6C;AAC9C,QAAA,qCAAqC,EACpC,gFAAgF;AACjF,QAAA,kCAAkC,EACjC,6FAA6F;AAC9F,QAAA,kCAAkC,EACjC,6FAA6F;AAC9F,QAAA,iDAAiD,EAChD,oHAAoH;AACrH,QAAA,0BAA0B,EACzB;AACD,KAAA;AACD,IAAA,gBAAgB,CAAC,GAAG,EAAA;AACnB,QAAA,QAAQ,OAAO,CAAC,GAAG,CAAC;KACpB;IACD,KAAK,CAAC,KAAK,EAAE,QAAQ,EAAA;QACpB,MAAM,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,KAAK,EAAE,GAAG,QAAQ;QAE3C,IAAI,GAAG,KAAK,SAAS,IAAI,OAAO,GAAG,KAAK,QAAQ,EAAE;YACjD,QAAQ,0BAA0B;;QAEnC,IAAI,GAAG,KAAK,SAAS,IAAI,OAAO,GAAG,KAAK,QAAQ,EAAE;YACjD,QAAQ,0BAA0B;;AAEnC,QAAA,IAAI,GAAG,KAAK,SAAS,IAAI,GAAG,KAAK,SAAS,IAAI,GAAG,GAAG,GAAG,EAAE;YACxD,QAAQ,kCAAkC;;AAE3C,QAAA,IAAI,KAAK,KAAK,SAAS,EAAE;AACxB,YAAA,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE;gBACpB,QAAQ,4BAA4B;;AAErC,YAAA,IAAI,CAAC,GAAG,KAAK,SAAS,IAAI,GAAG,KAAK,SAAS,KAAK,EAAE,OAAO,IAAI,QAAQ,CAAC,EAAE;gBACvE,QAAQ,mDAAmD;;AAG5D,YAAA,MAAM,WAAW,GAAG,KAAK,CAAC,MAAM;YAEhC,IAAI,GAAG,KAAK,SAAS,IAAI,GAAG,GAAG,WAAW,EAAE;gBAC3C,QAAQ,oCAAoC;;YAE7C,IAAI,GAAG,KAAK,SAAS,IAAI,GAAG,GAAG,WAAW,EAAE;gBAC3C,QAAQ,oCAAoC;;AAG7C,YAAA,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,WAAW,EAAE,CAAC,EAAE,EAAE;AACrC,gBAAA,IAAI,IAAI,GAAG,KAAK,CAAC,CAAC,CAAC;AAEnB,gBAAA,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE;oBAC3C,QAAQ,uCAAuC;;AAGhD,gBAAA,IAAI,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,EAAE;AAChC,oBAAA,IAAI,GAAG;AACN,wBAAA,IAAI,EAAE,OAAO;AACb,wBAAA,KAAK,EAAE;qBACP;AACD,oBAAA,KAAK,CAAC,CAAC,CAAC,GAAG,IAAI;;gBAGhB,KAAK,CAAC,IAAI,CAAC;AACV,oBAAA,IAAI,EAAE,IAAI;AACV,oBAAA,QAAQ,EAAE;AACT,wBAAA,QAAQ,EAAE,CAAC,OAAO,EAAE,CAAC,CAAC;AACtB,wBAAA,QAAQ,EAAE,CAAC,GAAG,EAAE,CAAC;AACjB;AACD,iBAAA,CAAC;;;AAGJ,QAAA,IAAI,KAAK,KAAK,SAAS,EAAE;AACxB,YAAA,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,EAAE;gBAC1B,QAAQ,4BAA4B;;AAGrC,YAAA,IAAI,KAAK,CAAC,IAAI,KAAK,SAAS,EAAE;gBAC7B,KAAK,CAAC,IAAI,CAAC;AACV,oBAAA,IAAI,EAAE,KAAK;AACX,oBAAA,QAAQ,EAAE;wBACT,QAAQ,EAAE,CAAC,OAAO,CAAC;AACnB,wBAAA,QAAQ,EAAE,CAAC,GAAG,EAAE,QAAQ;AACxB;AACD,iBAAA,CAAC;;;QAIJ,QAAQ,IAAI;KACZ;AACD,IAAA,KAAK,CAAC,KAAK,EAAE,QAAQ,EAAE,IAAI,EAAA;AAC1B,QAAA,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE;YACnB,QAAQ,wBAAwB;;QAGjC,MAAM,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,KAAK,EAAE,GAAG,QAAQ;AAC3C,QAAA,MAAM,cAAc,GAAG,KAAK,EAAE,MAAM,IAAI,CAAC;AACzC,QAAA,MAAM,aAAa,GAAG,IAAI,CAAC,MAAM;QAEjC,IAAI,GAAG,KAAK,SAAS,IAAI,aAAa,GAAG,GAAG,EAAE;YAC7C,QAAQ,iBAAiB;;QAE1B,IAAI,GAAG,KAAK,SAAS,IAAI,aAAa,GAAG,GAAG,EAAE;YAC7C,QAAQ,iBAAiB;;AAE1B,QAAA,IAAI,KAAK,KAAK,SAAS,EAAE;AACxB,YAAA,IAAI,aAAa,GAAG,cAAc,EAAE;gBACnC,QAAQ,mBAAmB;;AAE5B,YAAA,IAAI,CAAC,KAAK,IAAI,aAAa,GAAG,cAAc,EAAE;gBAC7C,QAAQ,mBAAmB;;AAG5B,YAAA,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,cAAc,EAAE,CAAC,EAAE,EAAE;gBACxC,KAAK,CAAC,IAAI,CAAC;AACV,oBAAA,IAAI,EAAE,IAAI,CAAC,CAAC,CAAC;AACb,oBAAA,IAAI,EAAE,KAAK,CAAC,CAAC;AACb,iBAAA,CAAC;;;AAGJ,QAAA,IAAI,KAAK,KAAK,SAAS,EAAE;YACxB,IAAI,cAAc,KAAK,aAAa,IAAI,KAAK,CAAC,IAAI,KAAK,SAAS,EAAE;gBACjE,QAAQ,IAAI;;AAGb,YAAA,KAAK,IAAI,CAAC,GAAG,cAAc,EAAE,CAAC,GAAG,aAAa,EAAE,CAAC,EAAE,EAAE;gBACpD,KAAK,CAAC,IAAI,CAAC;AACV,oBAAA,IAAI,EAAE,IAAI,CAAC,CAAC,CAAC;AACb,oBAAA,IAAI,EAAE;AACN,iBAAA,CAAC;;;QAIJ,QAAQ,IAAI;;CAEb;;ACjJM,MAAM,WAAW,GAAsD;AAC7E,IAAA,IAAI,EAAE,OAAO;AACb,IAAA,UAAU,EAAE;AACX,QAAA,wBAAwB,EACd,uCAAuC;AAC3C,QAAA,0BAA0B,EAC/B,6CAA6C;AAC9C,QAAA,kCAAkC,EACjC,+EAA+E;AAC1E,QAAA,qCAAqC,EACjC,uEAAuE;AAC9E,KAAA;IACJ,KAAK,CAAC,KAAK,EAAE,QAAQ,EAAA;AACpB,QAAA,IAAI,EAAE,OAAO,IAAI,QAAQ,CAAC,EAAE;YAC3B,QAAQ,0BAA0B;;AAGnC,QAAA,MAAM,KAAK,GAAG,QAAQ,CAAC,KAAK;AAC5B,QAAA,MAAM,WAAW,GAAG,KAAK,CAAC,MAAM;AAEhC,QAAA,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE;YACpB,QAAQ,4BAA4B;;AAErC,QAAA,IAAI,WAAW,GAAG,CAAC,EAAE;YACpB,QAAQ,oCAAoC;;AAG7C,QAAA,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,WAAW,EAAE,CAAC,EAAE,EAAE;AACrC,YAAA,MAAM,IAAI,GAAG,KAAK,CAAC,CAAC,CAAC;AAErB,YAAA,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE;gBAC3C,QAAQ,uCAAuC;;YAGhD,KAAK,CAAC,IAAI,CAAC;AACV,gBAAA,IAAI,EAAE,IAAI;AACV,gBAAA,QAAQ,EAAE;AACT,oBAAA,QAAQ,EAAE,CAAC,OAAO,EAAE,CAAC;AACrB;AACD,aAAA,CAAC;;QAGH,QAAQ,IAAI;KACZ;AACD,IAAA,KAAK,CAAC,KAAK,EAAE,QAAQ,EAAE,IAAI,EAAA;AAC1B,QAAA,MAAM,KAAK,GAAG,QAAQ,CAAC,KAAK;AAC5B,QAAA,MAAM,WAAW,GAAG,KAAK,CAAC,MAAM;QAEhC,IAAI,cAAc,GAAG,CAAC;AACtB,QAAA,MAAM,IAAI,GAA8C;YACvD,QAAQ,GAAA;AACP,gBAAA,QAAQ;AACP,oBAAA,MAAM,EAAE,QAAQ;AAChB,oBAAA,MAAM,EAAE;AACR,iBAAA;aACD;YACD,QAAQ,GAAA;AACP,gBAAA,IAAI,EAAE,cAAc,KAAK,WAAW,EAAE;AACrC,oBAAA,QAAQ;AACP,wBAAA,MAAM,EAAE,QAAQ;AAChB,wBAAA,IAAI,EAAE;AACN,qBAAA;;AAGF,gBAAA,QAAQ;AACP,oBAAA,MAAM,EAAE,QAAQ;AAChB,oBAAA,MAAM,EAAE;AACR,iBAAA;;SAEF;AAED,QAAA,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,WAAW,EAAE,CAAC,EAAE,EAAE;YACrC,KAAK,CAAC,IAAI,CAAC;gBACV,IAAI;gBACJ,IAAI;AACJ,gBAAA,IAAI,EAAE,KAAK,CAAC,CAAC,CAAC;AACd,aAAA,CAAC;;QAGH,QAAQ,IAAI;;CAEb;;ACnFM,MAAM,UAAU,GAInB;AACH,IAAA,IAAI,EAAE,MAAM;AACZ,IAAA,UAAU,EAAE,EAAE;IACd,KAAK,CAAC,KAAK,EAAE,QAAQ,EAAA;QACpB,QAAQ,IAAI;KACZ;AACD,IAAA,KAAK,CAAC,KAAK,EAAE,QAAQ,EAAE,KAAK,EAAA;AAC3B,QAAA,IAAI,KAAK,KAAK,IAAI,EAAE;YACnB,QAAQ,uBAAuB;;QAGhC,QAAQ,IAAI;;CAEb;;ACRM,MAAM,aAAa,GAAG;IAC5B,eAAe;IACf,cAAc;IACd,aAAa;IACb,aAAa;IACb,YAAY;IACZ,YAAY;IACZ,YAAY;IACZ,YAAY;IACZ,WAAW;IACX,WAAW;IACX;CACA;;AChBD;;AAEG;MACU,MAAM,CAAA;AAQR,IAAA,QAAQ,CAAC,QAAW,EAAA;AAC7B,QAAA,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,EAAE;AAC7B,YAAA,MAAM,IAAI,eAAe,CACxB,wDAAwD,CACxD;;QAGF,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,aAAa,CAAC;AACxC,QAAA,IAAI,CAAC,eAAe,GAAG,OAAO,CAAC,IAAI,CAAC,QAAQ,EAAE,MAAM,CAAC,QAAQ,CAAC,CAAC;;AAGhE,IAAA,WAAA,CAAY,QAAW,EAAA;AAhBb,QAAA,IAAA,CAAA,QAAQ,GAAG;YACpB,OAAO,EAAE,IAAI,cAAc,EAAE;YAC7B,MAAM,EAAE,IAAI,aAAa;SACzB;AAqDM,QAAA,IAAA,CAAA,QAAQ,GAAG;AACjB,YAAA,EAAE,EAAE,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAE;AAC3B,YAAA,GAAG,EAAE,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC;SAC1B;;;;AAvCA,QAAA,IAAI,GAAG,CAAC,MAAM,KAAK,MAAM;AAAE,YAAA,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC;;AAGnD;;;AAGG;AACH,IAAA,IAAI,QAAQ,GAAA;AACX,QAAA,IAAI,CAAC,IAAI,CAAC,eAAe,EAAE;AAC1B,YAAA,MAAM,IAAI,eAAe,CACxB,0DAA0D,CAC1D;;AAEF,QAAA,QAAQ,IAAI,CAAC,eAAe;;AAG7B;;;;;;AAMG;AACH,IAAA,QAAQ,CAAC,IAAa,EAAA;AACrB,QAAA,QAAQ,OAAO,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC,OAAO;;AAG5D;;;;AAIG;AACH,IAAA,QAAQ,CAAC,IAAa,EAAA;AACrB,QAAA,QAAQ,OAAO,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC;;AAOpD;AAEoB,IAAI,MAAM,CAAC;AAC/B,IAAA,IAAI,EAAE,QAAQ;AACd,IAAA,KAAK,EAAE;AACN,QAAA,GAAG,EAAE,EAAE,IAAI,EAAE,QAAQ;AACrB,KAAA;AACD,IAAA,MAAM,EAAE;AACP,QAAA,IAAI,EAAE,OAAO;AACb,QAAA,KAAK,EAAE,CAAC,EAAE,IAAI,EAAE,QAAQ,EAAE;AAC1B;AACD,CAAA;;ACrFK,MAAO,KAAM,SAAQ,KAAK,CAAA;AAC/B,IAAA,WAAA,CACC,OAAe,EACf,OAAe,EACf,KAAc,EACd,MAAe,EAAA;QAEf,KAAK,CAAC,OAAO,CAAC;AAEd,QAAA,MAAM,GAAG,GAAG,UAAU,EAAE,IAAI,GAAG,UAAU,EAAE,IAAI,GAAG,UAAU,EAAE,KAAK,GAAG,SAAS;AAC/E,QAAA,MAAM,OAAO,GAAG,OAAO,IAAI,MAAM,GAAG,GAAG,GAAG,MAAM,GAAG,EAAE,CAAC;QACtD,MAAM,SAAS,GAAG,IAAI,IAAI,EAAE,CAAC,WAAW,EAAE;AAE1C,QAAA,IAAI,CAAC,OAAO;AACX,YAAA,CAAA,EAAA,EAAK,GAAG,CAAA,OAAA,EAAU,KAAK,CAAA,CAAA,EAAI,IAAI,CAAI,CAAA,EAAA,OAAO,CAAI,CAAA,EAAA,KAAK,IAAI,IAAI,CAAA,EAAG,SAAS,CAAA,EAAG,KAAK,CAAE,CAAA;AACjF,gBAAA,CAAA,WAAA,EAAc,OAAO,CAAE,CAAA;gBACvB,CAAc,WAAA,EAAA,OAAO,EAAE;;IAGzB,QAAQ,GAAA;QAEJ,OAAO,CAAA,gBAAA,EAAmB,IAAI,IAAI,EAAE,CAAC,WAAW,EAAE,iBAAiB;;AAEvE;;SC8Be,aAAa,CAK5B,OAAgC,EAChC,OAAiC,EACjC,OAAiC,EAAA;IAEjC,OAAO,cAAgD,MAAS,CAAA;AAC/D,QAAA,WAAA,CAAY,QAAW,EAAA;YACtB,KAAK,CAAC,QAAQ,CAAC;AAEf,YAAA,MAAM,YAAY,GAAG,CAAC,MAAoB,KAAI;gBAC7C,MAAM,EAAE,OAAO,EAAE,GAAG,OAAO,EAAE,GAAG,MAAM;AAEtC,gBAAA,KAAK,MAAM,GAAG,IAAI,OAAO,EAAE;oBAC1B,IAAI,GAAG,IAAI,IAAI;wBAAE,MAAM,IAAI,KAAK,CAC/B,gBAAgB,EAChB,CAAsB,mBAAA,EAAA,GAAG,CAAG,CAAA,CAAA,CAC5B;;AAEF,gBAAA,MAAM,CAAC,MAAM,CAAC,IAAI,EAAE,OAAO,CAAC;gBAC5B,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC;AACnC,aAAC;YAED,YAAY,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC;AAC1C,YAAA,IAAI,OAAO;gBAAE,YAAY,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC;AACvD,YAAA,IAAI,OAAO;gBAAE,YAAY,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC;AAEvD,YAAA,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC;;KAEjB;AACT;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkDE;;;;"}