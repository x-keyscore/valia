{"version":3,"file":"index.js","sources":["../src/utils.ts","../src/schema/managers/formats.ts","../src/schema/managers/events.ts","../src/schema/utils.ts","../src/schema/services/mounter.ts","../src/schema/services/checker.ts","../src/helpers/object.ts","../src/helpers/string.ts","../src/helpers/index.ts","../src/testers/object/object.ts","../src/testers/string/isAscii.ts","../src/testers/string/isUuid.ts","../src/testers/utils.ts","../src/testers/string/isIp.ts","../src/testers/string/isDomain.ts","../src/testers/string/isEmail.ts","../src/testers/string/isDataUrl.ts","../src/testers/string/isBase.ts","../src/testers/index.ts","../src/schema/services/cloner.ts","../src/schema/formats/function/format.ts","../src/schema/formats/boolean/format.ts","../src/schema/formats/symbol/format.ts","../src/schema/formats/number/format.ts","../src/schema/formats/string/format.ts","../src/schema/formats/simple/format.ts","../src/schema/formats/object/format.ts","../src/schema/formats/array/format.ts","../src/schema/formats/union/format.ts","../src/schema/formats/formats.ts","../src/schema/schema.ts","../src/schema/plugin.ts"],"sourcesContent":["export class Issue extends Error {\n\tconstructor(\n\t\tcontext: string,\n\t\tmessage: string,\n\t\tstack?: string,\n\t\tplugin?: string\n\t) {\n\t\tsuper(message);\n\n\t\tconst red = \"\\x1b[31m\", cyan = \"\\x1b[36m\", gray = \"\\x1b[90m\", reset = \"\\x1b[0m\";\n\t\tconst emitter = \"Valia\" + (plugin ? \":\" + plugin : \"\");\n\t\tconst timestamp = new Date().toISOString();\n\n\t\tthis.message =\n\t\t\t`\\n${red}[Error]${reset} ${cyan}[${emitter}]${reset} ${gray}${timestamp}${reset}` +\n\t\t\t`\\nContext: ${context}` +\n\t\t\t`\\nMessage: ${message}`;\n\t}\n\n\ttoString() {\n\n   \t\treturn `[Error] [Valia] ${new Date().toISOString()}\\nContext: test`;\n  \t}\t\n}\n\nexport function printMemory() {\n\tconst memoryUsage = process.memoryUsage();\n\tconsole.log(\n\t\t`Heap Total: ${memoryUsage.heapTotal / 1024 / 1024} MB\\n` +\n\t\t`Heap Used: ${memoryUsage.heapUsed / 1024 / 1024} MB\\n` +\n\t\t`External: ${memoryUsage.external / 1024 / 1024} MB\\n` +\n\t\t`RSS: ${memoryUsage.rss / 1024 / 1024} MB`\n\t);\n}","import type { SetableCriteria, Format, FormatTypes } from '../formats';\nimport { Issue } from '../../utils';\n\nexport class FormatsManager {\n    private store = new Map<string, Format<SetableCriteria>>();\n\n    constructor() {}\n\n    add(formats: Format[]) {\n        for (const format of formats) {\n            this.store.set(format.type, format);\n        }\n    }\n\n    has(type: string): boolean {\n        return (!!this.store.has(type));\n    }\n\n    get(type: FormatTypes): Format {\n        const format = this.store.get(type);\n        if (!format) throw new Issue(\n            \"FORMATS MANAGER\",\n            \"This type is not recognized: \" + type\n        );\n\n        return (format);\n    }\n}\n","import type { Events } from \"./types\";\n\nexport class EventsManager {\n\tlisteners = new Map<keyof Events, ((...args: any[]) => any)[]>();\n\n\tconstructor() {}\n\n\ton<K extends keyof Events>(event: K, callback: Events[K]) {\n\t\tif (!this.listeners.has(event)) {\n\t\t\tthis.listeners.set(event, []);\n\t\t}\n\t\tthis.listeners.get(event)!.push(callback);\n\t}\n\n\temit<K extends keyof Events>(event: K, ...args: Parameters<Events[K]>) {\n\t\tconst callbacks = this.listeners.get(event);\n\t\tif (!callbacks) return;\n\n\t\tfor (const callback of callbacks) {\n\t\t\tcallback(...args);\n\t\t}\n\t}\n\n\toff<K extends keyof Events>(event: K, callback: Events[K]) {\n\t\tconst listeners = this.listeners.get(event);\n\t\tif (!listeners) return;\n\n\t\tconst index = listeners.indexOf(callback);\n\t\tif (index !== -1) listeners.splice(index, 1);\n\t}\n}\n\n\n\n","import type { NodeExceptionReport, DataRejectionReport } from \"./types\";\nimport type { SetableCriteria } from \"./formats\";\nimport type { NodePath } from \"./services\";\n\nexport class SchemaNodeException extends Error {\n    public code: string;\n    public message: string;\n    public node: SetableCriteria;\n    public nodePath: NodePath;\n\n\tconstructor(report: NodeExceptionReport) {\n        super();\n\n        this.code = report.code;\n        this.message = report.message;\n        this.node = report.node;\n        this.nodePath = report.nodePath;\n\t}\n}\n\nexport class SchemaDataRejection {\n    /**\n     * Syntax: `<MEMBER>[<DETAIL>]<REASON>`\n     *\n     * Components:\n     * - `<MEMBER>`    : The criterion involved (e.g. EMPTY, MIN, ENUM)\n     * - `<DETAIL>`    : Specific detail or sub-aspect of the criteria (e.g. LENGTH, PATTERN)\n     * - `<REASON>`    : The reason for rejection (e.g. NOT_SATISFIED, NOT_ALLOWED)\n     */\n    public code: string;\n    public node: SetableCriteria;\n    public nodePath: NodePath;\n\n\tconstructor(report: DataRejectionReport) {\n        this.code = report.code;\n        this.node = report.node;\n        this.nodePath = report.nodePath;\n\t}\n}","import type { SetableCriteria, MountedCriteria } from \"../formats\";\nimport type { MounterTask, MounterChunk, CommonErrorCodes } from \"./types\";\nimport type { SchemaInstance } from \"../types\";\nimport { SchemaNodeException } from \"../utils\";\n\nexport const nodeSymbol = Symbol(\"node\");\n\nconst commonErrors: Record<string, string> = {\n\tTYPE_PROPERTY_REQUIRED:\n\t\t\"\",\n\tTYPE_PROPERTY_MALFORMED:\n\t\t\"\",\n\tTYPE_PROPERTY_MISCONFIGURED:\n\t\t\"\",\n\tLABEL_PROPERTY_MALFORMED:\n\t\t\"\",\n\tMESSAGE_PROPERTY_MALFORMED:\n\t\t\"\",\n\tNULLABLE_PROPERTY_MALFORMED:\n\t\t\"\"\n} satisfies Record<CommonErrorCodes, string>;\n\nfunction commonMount(\n\tmanagers: SchemaInstance['managers'],\n\tnode: SetableCriteria\n): CommonErrorCodes | null {\n\tconst { type, label, message, nullable } = node;\n\n\tif (!(\"type\" in node)) {\n\t\treturn (\"TYPE_PROPERTY_REQUIRED\");\n\t}\n\tif (typeof type !== \"string\") {\n\t\treturn (\"TYPE_PROPERTY_MALFORMED\");\n\t}\n\tif (!managers.formats.has(type)) {\n\t\treturn (\"TYPE_PROPERTY_MISCONFIGURED\");\n\t}\n\tif (label !== undefined && typeof label !== \"string\") {\n\t\treturn (\"LABEL_PROPERTY_MALFORMED\");\n\t}\n\tif (message !== undefined && typeof message !== \"string\") {\n\t\treturn (\"MESSAGE_PROPERTY_MALFORMED\");\n\t}\n\tif (nullable !== undefined && typeof nullable !== \"boolean\") {\n\t\treturn (\"NULLABLE_PROPERTY_MALFORMED\");\n\t}\n\n\treturn (null);\n}\n\nexport function hasNodeSymbol(obj: object): obj is MountedCriteria {\n\treturn (typeof obj === \"object\" && Reflect.has(obj, nodeSymbol));\n}\n\nexport class MounterStack {\n\ttasks: MounterTask[] = [];\n\n\tconstructor(\n\t\trootNode: SetableCriteria | MountedCriteria\n\t) {\n\t\tthis.tasks.push({\n\t\t\tnode: rootNode,\n\t\t\tpartPath: { explicit: [], implicit: [] },\n\t\t\tfullPath: { explicit: [], implicit: [] }\n\t\t})\n\t}\n\n\tpushChunk(\n\t\tsourceTask: MounterTask,\n\t\tchunk: MounterChunk\n\t) {\n\t\tconst {\n\t\t\texplicit: fullPathExplicit,\n\t\t\timplicit: fullPathImplicit\n\t\t} = sourceTask.fullPath;\n\n\t\tfor (let i = 0; i < chunk.length; i++) {\n\t\t\tconst { node, partPath } = chunk[i];\n\n\t\t\tthis.tasks.push({\n\t\t\t\tnode,\n\t\t\t\tpartPath,\n\t\t\t\tfullPath: {\n\t\t\t\t\texplicit: partPath.explicit\n\t\t\t\t\t\t? fullPathExplicit.concat(partPath.explicit)\n\t\t\t\t\t\t: fullPathExplicit,\n\t\t\t\t\timplicit: partPath.implicit\n\t\t\t\t\t\t? fullPathImplicit.concat(partPath.implicit)\n\t\t\t\t\t\t: fullPathImplicit\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n}\n\nexport function mounter<T extends SetableCriteria>(\n\tmanagers: SchemaInstance['managers'],\n\trootNode: SetableCriteria & T\n): MountedCriteria<T> {\n\tconst { formats, events } = managers;\n\tconst stack = new MounterStack(rootNode);\n\n\twhile (stack.tasks.length) {\n\t\tconst currentTask = stack.tasks.pop()!;\n\t\tconst { node, partPath, fullPath } = currentTask;\n\n\t\tif (hasNodeSymbol(node)) {\n\t\t\tnode[nodeSymbol] = {\n\t\t\t\t...node[nodeSymbol],\n\t\t\t\tpartPath\n\t\t\t}\n\t\t} else {\n\t\t\tlet code: string | null = null;\n\n\t\t\tcode = commonMount(managers, node);\n\t\t\tif (code) {\n\t\t\t\tthrow new SchemaNodeException({\n\t\t\t\t\tcode: code,\n\t\t\t\t\tnode: node,\n\t\t\t\t\tnodePath: fullPath,\n\t\t\t\t\tmessage: commonErrors[code]\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tconst chunk: MounterChunk = [];\n\t\t\tconst format = formats.get(node.type);\n\n\t\t\tcode = format.mount(chunk, node);\n\t\t\tif (code) {\n\t\t\t\tthrow new SchemaNodeException({\n\t\t\t\t\tcode: code,\n\t\t\t\t\tnode: node,\n\t\t\t\t\tnodePath: fullPath,\n\t\t\t\t\tmessage: format.errors[code]\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tObject.assign(node, {\n\t\t\t\t[nodeSymbol]: {\n\t\t\t\t\tpartPath,\n\t\t\t\t\tchildNodes: chunk.map((task) => task.node)\n\t\t\t\t}\n\t\t\t});\n\t\t\tObject.freeze(node);\n\n\t\t\tif (chunk.length) stack.pushChunk(currentTask, chunk);\n\n\t\t\tevents.emit(\"NODE_MOUNTED\", node as MountedCriteria, fullPath);\n\t\t}\n\t}\n\n\tevents.emit(\"TREE_MOUNTED\", rootNode as MountedCriteria<T>);\n\n\treturn (rootNode as MountedCriteria<T>);\n};","import type { CheckerTask, CheckerChunk, CheckerRejection } from \"./types\";\nimport type { MountedCriteria } from \"../formats\";\nimport type { SchemaInstance } from \"../types\";\nimport { nodeSymbol } from \"./mounter\";\n\nexport class CheckerStack {\n\ttasks: CheckerTask[] = [];\n\n\tconstructor(\n\t\trootNode: MountedCriteria,\n\t\trootData: unknown\n\t) {\n\t\tthis.tasks.push({\n\t\t\tdata: rootData,\n\t\t\tnode: rootNode,\n\t\t\tfullPath: { explicit: [], implicit: [] }\n\t\t});\n\t}\n\n\tpushChunk(\n\t\tsourceTask: CheckerTask,\n\t\tchunk: CheckerChunk\n\t): void {\n\t\tconst {\n\t\t\texplicit: fullPathExplicit,\n\t\t\timplicit: fullPathImplicit\n\t\t} = sourceTask.fullPath;\n\n\t\tfor (let i = 0; i < chunk.length; i++) {\n\t\t\tconst task = chunk[i];\n\t\t\tconst partPath = task.node[nodeSymbol].partPath;\n\t\t\tlet stackHooks = sourceTask.stackHooks;\n\n\t\t\tif (task.hooks) {\n\t\t\t\tconst hooks = {\n\t\t\t\t\ttaskOwner: sourceTask,\n\t\t\t\t\tstackIndex: {\n\t\t\t\t\t\tchunk: this.tasks.length - i,\n\t\t\t\t\t\tbranch: this.tasks.length\n\t\t\t\t\t},\n\t\t\t\t\t...task.hooks\n\t\t\t\t}\n\n\t\t\t\tstackHooks = stackHooks ? stackHooks.concat(hooks) : [hooks];\n\t\t\t}\n\n\t\t\tthis.tasks.push({\n\t\t\t\tdata: task.data,\n\t\t\t\tnode: task.node,\n\t\t\t\tfullPath: {\n\t\t\t\t\texplicit: partPath.explicit\n\t\t\t\t\t\t? fullPathExplicit.concat(partPath.explicit)\n\t\t\t\t\t\t: fullPathExplicit,\n\t\t\t\t\timplicit: partPath.implicit\n\t\t\t\t\t\t? fullPathImplicit.concat(partPath.implicit)\n\t\t\t\t\t\t: fullPathImplicit\n\t\t\t\t},\n\t\t\t\tstackHooks\n\t\t\t});\n\t\t}\n\t}\n\n\tcallHooks(\n\t\tsourceTask: CheckerTask,\n\t\trejection: CheckerRejection | null\n\t): CheckerRejection | null {\n\t\tconst stackHooks = sourceTask.stackHooks;\n\t\tif (!stackHooks) return (null);\n\n\t\tconst lastHooks = stackHooks[stackHooks.length - 1];\n\t\tif (!rejection && lastHooks.stackIndex.branch !== this.tasks.length) {\n\t\t\treturn (null);\n\t\t}\n\n\t\tloop: for (let i = stackHooks.length - 1; i >= 0; i--) {\n\t\t\tconst hooks = stackHooks[i];\n\n\t\t\tconst claim = rejection ? hooks.onReject(rejection) : hooks.onAccept();\n\n\t\t\tswitch (claim.action) {\n\t\t\t\tcase \"DEFAULT\":\n\t\t\t\t\tthis.tasks.length = hooks.stackIndex.branch;\n\t\t\t\t\tif (!rejection) {\n\t\t\t\t\t\trejection = null;\n\t\t\t\t\t\tbreak loop;\n\t\t\t\t\t}\n\t\t\t\t\tcontinue;\n\t\t\t\tcase \"REJECT\":\n\t\t\t\t\tthis.tasks.length = hooks.stackIndex.branch;\n\t\t\t\t\trejection = { task: hooks.taskOwner, code: claim.code };\n\t\t\t\t\tcontinue;\n\t\t\t\tcase \"IGNORE\":\n\t\t\t\t\tif (claim?.target === \"CHUNK\") {\n\t\t\t\t\t\tthis.tasks.length = hooks.stackIndex.chunk;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.tasks.length = hooks.stackIndex.branch;\n\t\t\t\t\t}\n\t\t\t\t\trejection = null;\n\t\t\t\t\tbreak loop;\n\t\t\t}\n\t\t}\n\n\t\treturn (rejection);\n\t}\n}\n\nexport function checker(\n\tmanagers: SchemaInstance['managers'],\n\trootNode: MountedCriteria,\n\trootData: unknown\n): CheckerRejection | null {\n\tconst { formats, events } = managers;\n\tconst stack = new CheckerStack(rootNode, rootData);\n\n\tlet rejection: CheckerRejection | null = null;\n\twhile (stack.tasks.length) {\n\t\tconst currentTask = stack.tasks.pop()!;\n\t\tconst { data, node, stackHooks } = currentTask;\n\t\tconst chunk: CheckerChunk = [];\n\n\t\tlet code: string | null = null;\n\t\tif (!(node.nullable && data === null)) {\n\t\t\tconst format = formats.get(node.type)!;\n\t\t\tcode = format.check(chunk, node, data);\n\t\t}\n\n\t\tif (code) rejection = { task: currentTask, code };\n\t\telse if (chunk.length) stack.pushChunk(currentTask, chunk);\n\t\tif (stackHooks) rejection = stack.callHooks(currentTask, rejection);\n\n\t\tif (rejection) break;\n\t}\n\n\tevents.emit(\"DATA_CHECKED\", rootNode, rootData, rejection);\n\n\treturn (rejection);\n};\n\n","import type { LooseAutocomplete } from \"../types\";\nimport type { InternalTags } from \"./types\";\n\nexport function getInternalTag(target: unknown): LooseAutocomplete<InternalTags> {\n\treturn (Object.prototype.toString.call(target).slice(8, -1));\n}","import { Issue } from \"../utils\";\n\nfunction convertBase16ToBase64(input: string, base64: string, padding: boolean) {\n\tconst totalChunksLength = Math.floor(input.length / 6) * 6;\n\tlet output = \"\";\n\tlet i = 0;\n\n\twhile (i < totalChunksLength) {\n\t\tconst dec = parseInt(input.slice(i, i + 6), 16);\n\t\toutput += (base64[((dec >> 18) & 63)]\n\t\t\t+ base64[((dec >> 12) & 63)] \n\t\t\t+ base64[((dec >> 6) & 63)]\n\t\t\t+ base64[(dec & 63)]);\n\t\ti += 6;\n\t}\n\n\tif (i < input.length) {\n\t\tconst restChunk = input.slice(i, i + 6);\n\t\t// 143016576 = 00100 01000 01100 10000 10100 00000 = 4 8 12 16 20 0\n\t\tconst leftShift = (143016576 >> (restChunk.length * 5)) & 31;\n\t\tconst dec = parseInt(restChunk, 16) << leftShift;\n\n\t\toutput += base64[((dec >> 18) & 63)]\n\t\t\t+ base64[((dec >> 12) & 63)];\n\t\tif (leftShift < 12) output += base64[((dec >> 6) & 63)];\n\t\tif (leftShift < 8) output += base64[(dec & 63)];\n\t}\n\n\twhile (padding && output.length % 4 !== 0) {\n\t\toutput += '=';\n\t}\n\n\treturn (output);\n}\n\nfunction convertBase16ToBase32(input: string, base32: string, padding: boolean = true) {\n\tconst totalChunksLength = Math.floor(input.length / 10) * 10;\n\tlet output = \"\";\n\tlet i = 0;\n\n\twhile (i < totalChunksLength) {\n\t\tconst decHigh = parseInt(input.slice(i, i + 5), 16);\n\t\tconst decLow = parseInt(input.slice(i + 5, i + 10), 16);\n\n\t\toutput += base32[((decHigh >> 15) & 31)]\n\t\t\t+ base32[((decHigh >> 10) & 31)]\n\t\t\t+ base32[((decHigh >> 5) & 31)]\n\t\t\t+ base32[(decHigh & 31)]\n\t\t\t+ base32[((decLow >> 15) & 31)]\n\t\t\t+ base32[((decLow >> 10) & 31)]\n\t\t\t+ base32[((decLow >> 5) & 31)]\n\t\t\t+ base32[(decLow & 31)];\n\t\ti += 10;\n\t}\n\n\tif (i < input.length) {\n\t\tconst restChunk = input.slice(i, i + 5);\n\t\t// 4469248 = 00100 01000 01100 10000 00000 = 4 8 12 16 0\n\t\tconst leftShift = (4469248 >> (restChunk.length * 5)) & 31;\n\t\tconst decHigh = parseInt(restChunk, 16) << leftShift;\n\n\t\toutput += base32[((decHigh >> 15) & 31)]\n\t\t\t+ base32[((decHigh >> 10) & 31)];\n\t\tif (leftShift < 12) {\n\t\t\toutput += base32[((decHigh >> 5) & 31)]\n\t\t\t\t+ base32[(decHigh & 31)];\n\t\t}\n\t}\n\n\tif (i + 5 < input.length) {\n\t\tconst restChunk = input.slice(i + 5, i + 10);\n\t\t// 4469248 = 00100 01000 01100 10000 00000 = 4 8 12 16 0\n\t\tconst leftShift = (4469248 >> (restChunk.length * 5)) & 31;\n\t\tconst decLow = parseInt(restChunk, 16) << leftShift;\n\n\t\toutput += base32[((decLow >> 15) & 31)]\n\t\t\t+ base32[((decLow >> 10) & 31)];\n\t\tif (leftShift < 12) output += base32[((decLow >> 5) & 31)];\n\t\tif (leftShift < 8) output += base32[(decLow & 31)];\n\t}\n\n\twhile (padding && output.length % 8 !== 0) {\n\t\toutput += '=';\n\t}\n\n\treturn (output);\n}\n\nfunction convertBase64ToBase16(input: string, base64: string) {\n\tif (input.endsWith(\"=\")) input = input.slice(0, input.indexOf(\"=\"));\n\tconst totalChunksLength = Math.floor(input.length / 4) * 4;\n\tconst base16 = \"0123456789ABCDEF\";\n\tlet output = \"\";\n\tlet i = 0;\n\n\twhile (i < totalChunksLength) {\n\t\tconst dec = (base64.indexOf(input[i]) << 18)\n\t\t\t| (base64.indexOf(input[i + 1]) << 12)\n\t\t\t| (base64.indexOf(input[i + 2]) << 6)\n\t\t\t| base64.indexOf(input[i + 3]);\n\n\t\toutput += base16[((dec >> 20) & 15)]\n\t\t\t+ base16[((dec >> 16) & 15)]\n\t\t\t+ base16[((dec >> 12) & 15)]\n\t\t\t+ base16[((dec >> 8) & 15)]\n\t\t\t+ base16[((dec >> 4) & 15)]\n\t\t\t+ base16[(dec & 15)];\n\t\ti += 4;\n\t}\n\n\tif (i < input.length) {\n\t\tconst rest = input.slice(i);\n\t\tconst restLength = rest.length;\n\t\tconst dec = ((base64.indexOf(rest[0]) << 18)\n\t\t\t| (rest[1] ? base64.indexOf(rest[1]) << 12 : 0)\n\t\t\t| (rest[2] ? base64.indexOf(rest[2]) << 6 : 0)\n\t\t\t| (rest[3] ? base64.indexOf(rest[3]) : 0));\n\n\t\toutput += base16[((dec >> 20) & 15)]\n\t\t\t+ base16[((dec >> 16) & 15)];\n\t\tif (restLength > 2) {\n\t\t\toutput += base16[((dec >> 12) & 15)]\n\t\t\t\t+ base16[((dec >> 8) & 15)];\n\t\t}\n\t\tif (restLength > 3) {\n\t\t\toutput += base16[((dec >> 4) & 15)]\n\t\t\t\t+ base16[(dec & 15)];\n\t\t}\n\t}\n\n\treturn (output);\n}\n\nfunction convertBase32ToBase16(input: string, base32: string) {\n\tif (input.endsWith(\"=\")) input = input.slice(0, input.indexOf(\"=\"));\n\tconst totalChunksLength = Math.floor(input.length / 8) * 8;\n\tconst base16 = \"0123456789ABCDEF\";\n\tlet output = \"\";\n\tlet i = 0;\n\n\twhile (i < totalChunksLength) {\n\t\tconst dec = (base32.indexOf(input[i]) << 15)\n\t\t\t| (base32.indexOf(input[i + 1]) << 10)\n\t\t\t| (base32.indexOf(input[i + 2]) << 5)\n\t\t\t| base32.indexOf(input[i + 3]);\n\n\t\toutput += base16[((dec >> 16) & 15)]\n\t\t\t+ base16[((dec >> 12) & 15)]\n\t\t\t+ base16[((dec >> 8) & 15)]\n\t\t\t+ base16[((dec >> 4) & 15)]\n\t\t\t+ base16[(dec & 15)];\n\t\ti += 4;\n\t}\n\n\tif (i < input.length) {\n\t\tconst rest = input.slice(i);\n\t\tconst restLength = rest.length;\n\t\tconst dec = ((base32.indexOf(rest[0]) << 15)\n\t\t\t| (rest[1] ? base32.indexOf(rest[1]) << 10 : 0)\n\t\t\t| (rest[2] ? base32.indexOf(rest[2]) << 5 : 0)\n\t\t\t| (rest[3] ? base32.indexOf(rest[3]) : 0));\n\n\t\toutput += base16[((dec >> 16) & 15)]\n\t\t\t+ base16[((dec >> 12) & 15)];\n\t\tif (restLength > 1) {\n\t\t\toutput += base16[((dec >> 8) & 15)]\n\t\t\t\t+ base16[((dec >> 4) & 15)];\n\t\t}\n\t\tif (restLength > 3) {\n\t\t\toutput += base16[(dec & 15)]\n\t\t\tif (i + 5 >= input.length) {\n\t\t\t\toutput += base16[0];\n\t\t\t}\n\t\t}\n\t}\n\n\tif (i + 5 < input.length) {\n\t\tconst rest = input.slice(i + 5);\n\t\tconst restLength = rest.length;\n\t\tconst dec = ((base32.indexOf(rest[0]) << 15)\n\t\t\t| (rest[1] ? base32.indexOf(rest[1]) << 10 : 0)\n\t\t\t| (rest[2] ? base32.indexOf(rest[2]) << 5 : 0)\n\t\t\t| (rest[3] ? base32.indexOf(rest[3]) : 0));\n\n\t\toutput += base16[((dec >> 16) & 15)]\n\t\t\t+ base16[((dec >> 12) & 15)]\n\t\t\t+ base16[((dec >> 8) & 15)];\n\t\tif (restLength > 2) {\n\t\t\toutput += base16[((dec >> 4) & 15)]\n\t\t\t\t+ base16[(dec & 15)];\n\t\t}\n\t}\n\n\treturn (output);\n}\n\nexport function base16ToBase64(input: string, to: \"B64\" | \"B64URL\" = \"B64\", padding: boolean = true) {\n\tif (to === \"B64\") {\n\t\tconst base64 = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\n\t\treturn (convertBase16ToBase64(input, base64, padding));\n\t} else if (to === \"B64URL\") {\n\t\tconst base64Url = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_\";\n\t\treturn (convertBase16ToBase64(input, base64Url, padding));\n\t} else {\n\t\tthrow new Issue(\"Parameters\", \"The base64 type of the parameter 'to' is unknown.\");\n\t}\n}\n\nexport function base16ToBase32(input: string, to: \"B16\" | \"B16HEX\" = \"B16\", padding: boolean = true) {\n\tif (to === \"B16\") {\n\t\tconst base32 = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ234567';\n\treturn (convertBase16ToBase32(input, base32, padding));\n\t} else if (to === \"B16HEX\") {\n\t\tconst base32Hex = \"0123456789ABCDEFGHIJKLMNOPQRSTUV\";\n\t\treturn (convertBase16ToBase32(input, base32Hex, padding));\n\t} else {\n\t\tthrow new Issue(\"Parameters\", \"The base32 type of the parameter 'to' is unknown.\");\n\t}\n}\n\nexport function base64ToBase16(input: string, from: \"B64\" | \"B64URL\" = \"B64\") {\n\tif (from === \"B64\") {\n\t\tconst base64 = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\n\t\treturn (convertBase64ToBase16(input, base64));\n\t} else if (from === \"B64URL\") {\n\t\tconst base64Url = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_\";\n\t\treturn (convertBase64ToBase16(input, base64Url));\n\t} else {\n\t\tthrow new Issue(\"Parameters\", \"The base64 type of the parameter 'from' is unknown.\");\n\t}\n}\n\nexport function base32ToBase16(input: string, from: \"B16\" | \"B16HEX\" = \"B16\") {\n\tif (from === \"B16\") {\n\t\tconst base32 = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ234567';\n\t\treturn (convertBase32ToBase16(input, base32));\n\t} else if (from === \"B16HEX\") {\n\t\tconst base32Hex = \"0123456789ABCDEFGHIJKLMNOPQRSTUV\";\n\t\treturn (convertBase32ToBase16(input, base32Hex));\n\t} else {\n\t\tthrow new Issue(\"Parameters\", \"The base32 type of the parameter 'from' is unknown.\");\n\t}\n}","import * as objectHelpers from './object';\nimport * as stringHelpers from './string';\n\nexport type * from \"./types\";\nexport * from './object';\nexport * from './string';\n\nexport const helpers = {\n\tobject: objectHelpers,\n\tstring: stringHelpers\n};","import type { BasicObject, PlainObject, BasicArray, TypedArray, BasicFunction, AsyncFunction } from \"../types\";\nimport { getInternalTag } from \"../../helpers\";\n\n// OBJECT\n\nexport function isObject(x: null | undefined | number | bigint | string | boolean | symbol | object): x is object;\nexport function isObject(x: unknown): x is BasicObject;\n\nexport function isObject(x: unknown): x is BasicObject {\n\treturn (x !== null && typeof x === \"object\");\n}\n\nexport function isPlainObject(x: null | undefined | number | bigint | string | boolean | symbol | object): x is object;\nexport function isPlainObject(x: unknown): x is PlainObject;\n\n/**\n * A plain object is considered as follows:\n * - It must not be null.\n * - It must be an object.\n * - It must have a prototype of `Object.prototype` or `null`.\n*/\nexport function isPlainObject(x: unknown): x is PlainObject {\n\tif (x === null || typeof x !== \"object\") return (false);\n\tconst prototype = Object.getPrototypeOf(x);\n\n    return (prototype === null || prototype === Object.prototype);\n}\n\n// ARRAY\nexport function isArray(x: unknown): x is BasicArray {\n\treturn (Array.isArray(x));\n}\n\n/**\n * A typed array is considered as follows:\n * - It must be a view on an ArrayBuffer.\n * - It must not be a `DataView`.\n */\nexport function isTypedArray(x: unknown): x is TypedArray {\n\treturn (ArrayBuffer.isView(x) && !(x instanceof DataView));\n}\n\n/**\n * An array-like value is considered as follows:\n * - It must not be `null` or `undefined`.\n * - It must be of `object` or `function` type.\n * - It must have a numeric `length` property.\n */\nexport function isArrayLike(x: unknown): x is ArrayLike<unknown> {\n  return (\n    x != null && (typeof x === \"object\" || typeof x === \"function\") &&\n\t(\"length\" in x) && (typeof x.length === \"number\") && x.length >= 0\n  );\n}\n\n// FUNCTION\nexport function isFunction(x: unknown): x is BasicFunction {\n\treturn (getInternalTag(x) === \"Function\");\n}\n\nexport function isAsyncFunction(x: unknown): x is AsyncFunction {\n\treturn (getInternalTag(x) === \"AsyncFunction\");\n}\n\nexport function isGeneratorFunction(x: unknown): x is GeneratorFunction {\n\treturn (getInternalTag(x) === \"GeneratorFunction\");\n}\n\nexport function isAsyncGeneratorFunction(x: unknown): x is AsyncGeneratorFunction {\n\treturn (getInternalTag(x) === \"AsyncGeneratorFunction\");\n}","interface AsciiConfig {\n    /** **Default:** `false` */\n\tonlyPrintable?: boolean;\n}\n\n/**\n * Check if all characters of the string are in the ASCII table (%d0-%d127).\n * \n * If you enable `onlyPrintable` valid characters will be limited to\n * printable characters from the ASCII table (%32-%d126).\n * \n * Empty returns `false`.\n */\nexport function isAscii(str: string, config?: AsciiConfig): boolean {\n    if (config?.onlyPrintable) return (RegExp(\"^[\\\\x20-\\\\x7E]+$\").test(str))\n    return (RegExp(\"^[\\\\x00-\\\\x7F]+$\").test(str));\n}","/*\nComposition :\n    DIGIT    = %x30-39\n    HEXDIG   = DIGIT / \"A\" / \"B\" / \"C\" / \"D\" / \"E\" / \"F\"\n    hexOctet = HEXDIG HEXDIG\n    uuid     = 4*4hexOctet \"-\"\n               2*2hexOctet \"-\"\n               2*2hexOctet \"-\"\n               2*2hexOctet \"-\"\n               6*6hexOctet\n\nSources :\n    RFC 9562 Section 4 : DIGIT\n                         HEXDIG\n                         hexOctet\n                         UUID -> uuid\n\nLinks :\n    https://datatracker.ietf.org/doc/html/rfc9562#section-4\n*/\n\ninterface UuidParams {\n\t/** **Default:** All versions are allowed */\n\tversion?: 1|2|3|4|5|6|7;\n}\n\nconst extractUuidVersionRegex = new RegExp(\"^[0-9A-F]{8}-[0-9A-F]{4}-([1-7])[0-9A-F]{3}-[89AB][0-9A-F]{3}-[0-9A-F]{12}$\", \"i\");\n\n/**\n * **Standard :** RFC 9562\n * \n * @version 1.0.0\n */\nexport function isUuid(str: string, params?: UuidParams): boolean {\n\tconst extracted = extractUuidVersionRegex.exec(str);\n\tif (!extracted || !extracted[1]) return (false);\n\tif (!params?.version || (extracted[1].codePointAt(0)! - 48) === params?.version) return (true);\n\n\treturn (false);\n}","export function weakly<O extends object>(callback: () => O): () => O {\n\tlet ref: WeakRef<O> | null = null;\n\n    return (() => {\n\t\tif (!ref) {\n\t\t\tconst obj = callback();\n\t\t\tref = new WeakRef(obj);\n\t\t\treturn (obj);\n\t\t}\n\t\t\n\t\tconst value = ref.deref();\n\t\tif (!value) {\n\t\t\tconst obj = callback();\n\t\t\tref = new WeakRef(obj);\n\t\t\treturn (obj);\n\t\t}\n\n\t\treturn (value);\n    });\n}\n\n/**\n * @see https://www.garykessler.net/library/file_sigs.html\n * @see https://en.wikipedia.org/wiki/List_of_file_signatures\n */\nconst signatures = [\n\t// Image\n\t{ ext: \"png\" as const, offset: 0, flags: [\"89504E470D0A1A0A\"]},\n\t{ ext: \"jpg\" as const, offset: 0, flags: [\"FFD8FFE0\"]},\n\t{ ext: \"jp2\" as const, offset: 0, flags: [\"0000000C6A5020200D0A870A\"]},\n\t{ ext: \"gif\" as const, offset: 0, flags: [\"474946383761\", \"474946383961\"]},\n\t{ ext: \"webp\" as const, offset: 0, flags: [\"52494646????????57454250\"]},\n\t// Audio\n\t{ ext: \"mp3\" as const, offset: 0, flags: [\"FFFB\", \"FFF3\", \"FFF2\", \"494433\"]},\n\t{ ext: \"mp4\" as const, offset: 4, flags: [\"6674797069736F6D\", \"667479704D534E56\"]},\n\t// 3D\n\t{ ext: \"stl\" as const, offset: 4, flags: [\"736F6C6964\"]}\n];\n\nexport function hasFileSignature(hex: string, extensions: Array<(typeof signatures)[number]['ext']>) {\n\tfor (let i = 0; i < extensions.length; i++) {\n\t\tconst { offset, flags } = signatures.find(({ ext }) => ext === extensions[i])!;\n\n\t\tfor (let i = 0; i < flags.length; i++) {\n\t\t\tconst flag = flags[i];\n\t\t\tlet j = (flag.length - 1) + offset;\n\n\t\t\tif (j >= hex.length) continue;\n\t\t\twhile (j >= 0) {\n\t\t\t\tif (flag[j] !== \"?\" && hex[j] !== flag[j]) break;\n\t\t\t\tj--;\n\t\t\t}\n\t\t\tif (j === 0) return (true);\n\t\t}\n\t}\n}","/**\n# IPV4\n\nComposition :\n    dec-octet = 1*3DIGIT ; Representing a decimal integer value in the range 0 through 255\n    prefix    = 1*2DIGIT ; Representing a decimal integer value in the range 0 through 32.\n    IPv4      = dec-octet 3(\".\" dec-octet) [\"/\" prefix]\n\n# IPV6\n\nComposition :\n    HEXDIG      = DIGIT / A-F / a-f\n    IPv6-full   = 1*4HEXDIG 7(\":\" 1*4HEXDIG)\n    IPv6-comp   = [1*4HEXDIG *5(\":\" 1*4HEXDIG)] \"::\" [1*4HEXDIG *5(\":\" 1*4HEXDIG)]\n    IPv6v4-full = 1*4HEXDIG 5(\":\" 1*4HEXDIG) \":\" IPv4\n    IPv6v4-comp = [1*4HEXDIG *3(\":\" 1*4HEXDIG)] \"::\" [1*4HEXDIG *3(\":\" 1*4HEXDIG) \":\"] IPv4\n    prefix      = 1*3DIGIT ; Representing a decimal integer value in the range 0 through 128.\n    IPv6        = (IPv6-full / IPv6-comp / IPv6v4-full / IPv6v4-comp) [\"/\" prefix]\n*/\n\nimport { weakly } from \"../utils\";\n\ninterface IpParams {\n\t/**\n\t * Allow prefixes at the end of IP addresses (e.g., `192.168.0.1/22`).\n\t * \n\t * \n\t * **Default:** `false`\n\t */\n\tallowPrefix?: boolean;\n}\n\nconst ipV4Seg = \"(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\";\nexport const ipV4Pattern = `(?:${ipV4Seg}\\\\.){3}${ipV4Seg}`;\n\nconst ipV4SimpleRegex = new RegExp(`^${ipV4Pattern}$`);\nconst ipV4PrefixRegex = weakly(() =>new RegExp(`^${ipV4Pattern}/(3[0-2]|[12]?[0-9])$`));\n\nconst ipV6Seg = \"(?:[0-9a-fA-F]{1,4})\";\nexport const ipV6Pattern = \"(?:\" +\n\t`(?:${ipV6Seg}:){7}(?:${ipV6Seg}|:)|` +\n\t`(?:${ipV6Seg}:){6}(?:${ipV4Pattern}|:${ipV6Seg}|:)|` +\n\t`(?:${ipV6Seg}:){5}(?::${ipV4Pattern}|(?::${ipV6Seg}){1,2}|:)|` +\n\t`(?:${ipV6Seg}:){4}(?:(?::${ipV6Seg}){0,1}:${ipV4Pattern}|(?::${ipV6Seg}){1,3}|:)|` +\n\t`(?:${ipV6Seg}:){3}(?:(?::${ipV6Seg}){0,2}:${ipV4Pattern}|(?::${ipV6Seg}){1,4}|:)|` +\n\t`(?:${ipV6Seg}:){2}(?:(?::${ipV6Seg}){0,3}:${ipV4Pattern}|(?::${ipV6Seg}){1,5}|:)|` +\n\t`(?:${ipV6Seg}:){1}(?:(?::${ipV6Seg}){0,4}:${ipV4Pattern}|(?::${ipV6Seg}){1,6}|:)|` +\n\t`(?::(?:(?::${ipV6Seg}){0,5}:${ipV4Pattern}|(?::${ipV6Seg}){1,7}|:)))`;\n\nconst ipV6SimpleRegex = new RegExp(`^${ipV6Pattern}$`);\nconst ipV6PrefixRegex = weakly(() =>new RegExp(`^${ipV6Pattern}/(12[0-8]|1[01][0-9]|[1-9]?[0-9])$`));\n\n/**\n * **Standard:** No standard\n * \n * @version 1.0.0\n */\nexport function isIp(str: string, params?: IpParams): boolean {\n\tif (!params?.allowPrefix && ipV4SimpleRegex.test(str)) return (true);\n\telse if (params?.allowPrefix && ipV4PrefixRegex().test(str)) return (true);\n\n\tif (!params?.allowPrefix && ipV6SimpleRegex.test(str)) return (true);\n\telse if (params?.allowPrefix && ipV6PrefixRegex().test(str)) return (true);\n\n\treturn (false);\n}\n\n/**\n * **Standard:** No standard\n * \n * @version 1.0.0\n */\nexport function isIpV4(str: string, params?: IpParams): boolean {\n\tif (!params?.allowPrefix && ipV4SimpleRegex.test(str)) return (true);\n\telse if (params?.allowPrefix && ipV4PrefixRegex().test(str)) return (true);\n\n\treturn (false);\n}\n\n/**\n * **Standard:** No standard\n * \n * @version 1.0.0\n */\nexport function isIpV6(str: string, params?: IpParams): boolean {\n\tif (!params?.allowPrefix && ipV4SimpleRegex.test(str)) return (true);\n\telse if (params?.allowPrefix && ipV4PrefixRegex().test(str)) return (true);\n\n\treturn (false);\n}","/*\nComposition :\n    letter = %d65-%d90 / %d97-%d122; A-Z / a-z\n    digit  = %x30-39; 0-9\n    label  = letter [*(digit / letter / \"-\") digit / letter]\n    domain = label *(\".\" label)\n\nLinks :\n    https://datatracker.ietf.org/doc/html/rfc1035#section-2.3.1\n*/\n\nconst domainRegex = new RegExp(\"^[A-Za-z](?:[A-Za-z0-9-]*[A-Za-z0-9])?(?:\\\\.[A-Za-z](?:[A-Za-z0-9-]*[A-Za-z0-9])?)*$\");\n\n/**\n * **Standard :** RFC 1035\n * \n * @version 1.0.0\n */\nexport function isDomain(str: string, params?: undefined): boolean {\n\treturn (domainRegex.test(str));\n}\n","/*\nComposition :\n    atom            = 1*atext\n    dot-local       = atom *(\".\"  atom)\n    quoted-local    = DQUOTE *QcontentSMTP DQUOTE\n    ip-address      = IPv4-address-literal / IPv6-address-literal\n    general-address = General-address-literal\n    local           = dot-local / quote-local\n    domain          = Domain\n    address         = ip-address / general-address\n    mailbox         = local \"@\" (domain / address)\n\nSources :\n    RFC 5234 Appendix B.1   : DQUOTE\n    RFC 5322 Section  3.2.3 : atext\n    RFC 5321 Section  4.1.3 : IPv4-address-literal\n                              IPv6-address-literal\n                              General-address-literal\n    RFC 5321 Section  4.1.2 : QcontentSMTP\n                              Domain\n\nLinks :\n    https://datatracker.ietf.org/doc/html/rfc5234#appendix-B.1\n    https://datatracker.ietf.org/doc/html/rfc5322#section-3.2.3\n    https://datatracker.ietf.org/doc/html/rfc5321#section-4.1.3\n    https://datatracker.ietf.org/doc/html/rfc5321#section-4.1.2\n*/\n\nimport { ipV4Pattern, ipV6Pattern } from \"./isIp\";\nimport { isDomain } from \"./isDomain\";\nimport { weakly } from \"../utils\";\n\ninterface EmailObject {\n\tlocal: string;\n\tdomain: string;\n}\n\ninterface EmailParams {\n\t/** **Default:** `false` */\n\tallowQuotedString?: boolean;\n\t/** **Default:** `false` */\n\tallowIpAddress?: boolean;\n\t/** **Default:** `false` */\n\tallowGeneralAddress?: boolean;\n}\n\nconst dotStringPattern = \"(?:[-!=?A-B\\\\x23-\\\\x27\\\\x2A-\\\\x2B\\\\x2F-\\\\x39\\\\x5E-\\\\x7E]+(?:\\\\.[-!=?A-B\\\\x23-\\\\x27\\\\x2A-\\\\x2B\\\\x2F-\\\\x39\\\\x5E-\\\\x7E]+)*)\";\nconst quotedStringPattern = \"(?:\\\"(?:[\\\\x20-\\\\x21\\\\x23-\\\\x5B\\\\x5D-\\\\x7E]|\\\\\\\\[\\\\x20-\\\\x7E])*\\\")\";\n\nconst dotLocalRegex = new RegExp(`^${dotStringPattern}$`);\nconst dotOrQuoteLocalRegex = weakly(() => new RegExp(`^(?:${dotStringPattern}|${quotedStringPattern})$`));\n\nconst ipAddressRegex = weakly(() => new RegExp(`^\\\\[(?:IPv6:${ipV6Pattern}|${ipV4Pattern})\\\\]$`));\nconst generalAddressRegex = weakly(() => new RegExp(`(?:[a-zA-Z0-9-]*[a-zA-Z0-9]+:[\\\\x21-\\\\x5A\\\\x5E-\\\\x7E]+)`));\n\nfunction parseEmail(str: string): EmailObject | null {\n\tconst length = str.length;\n\tlet i = 0;\n\n\t// EXTRACT LOCAL\n\tconst localStart = i;\n\tif (str[localStart] === \"\\\"\") {\n\t\twhile (++i < length) {\n\t\t\tif (str[i] === \"\\\\\") i++;\n\t\t\telse if (str[i] === \"\\\"\") {\n\t\t\t\ti++;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t} else {\n\t\twhile (i < length && str[i] !== \"@\") i++;\n\t}\n\tif (i === localStart || str[i] !== \"@\") return (null);\n\tconst localEnd = i;\n\n\t// EXTRACT DOMAIN\n\tconst domainStart = ++i;\n\tconst domainEnd = length;\n\tif (domainStart === domainEnd) return (null);\n\n\treturn ({\n\t\tlocal: str.slice(localStart, localEnd),\n\t\tdomain: str.slice(domainStart, domainEnd)\n\t});\n}\n\nfunction isValidLocal(str: string, params?: EmailParams): boolean {\n\tif (dotLocalRegex.test(str)) return (true);\n\n\tif (params?.allowQuotedString\n\t\t&& dotOrQuoteLocalRegex().test(str)) return (true);\n\n\treturn (false);\n}\n\nfunction isValidDomain(str: string, params?: EmailParams): boolean {\n\tif (isDomain(str)) return (true);\n\n\tif (params?.allowIpAddress\n\t\t&& ipAddressRegex().test(str)) return (true);\n\tif (params?.allowGeneralAddress\n\t\t&& generalAddressRegex().test(str)) return (true);\n\t\n\treturn (false);\n}\n\n/**\n * **Standard :** RFC 5321\n * \n * @version 2.0.0\n */\nexport function isEmail(str: string, params?: EmailParams): boolean {\n\tconst email = parseEmail(str);\n\tif (!email) return (false);\n\n\t// CHECK LOCAL\n\tif (!isValidLocal(email.local, params)) return (false);\n\n\t// CHECK DOMAIN\n\tif (!isValidDomain(email.domain, params)) return (false);\n\t\n\t// RFC 5321 4.5.3.1.2 : Length restriction\n\tif (!email.domain.length || email.domain.length > 255) return (false);\n\n\treturn (true);\n}","/*\nComposition :\n    data      = pchar\n    value     = value\n    token     = restricted-name\n    mediatype = [token \"/\" token] *(\";\" token \"=\" value)\n    dataurl   = \"data:\" [mediatype] [\";base64\"] \",\" data\n\nSources :\n    RFC 3986 Section 3.3 : pchar\n    RFC 2045 Section 5.1 : value\n    RFC 6838 Section 4.2 : restricted-name\n\nLinks :\n    https://datatracker.ietf.org/doc/html/rfc3986#section-3.3\n    https://datatracker.ietf.org/doc/html/rfc2045#section-5.1\n    https://datatracker.ietf.org/doc/html/rfc6838#section-4.2\n    https://datatracker.ietf.org/doc/html/rfc2397#section-3\n*/\n\ninterface DataUrlObject {\n\tdata: string;\n\ttype: string;\n\tsubtype: string;\n\tisBase64: boolean;\n\tparameters: { name: string, value: string }[];\n}\n\ninterface DataUrlParams {\n\t/**\n\t * Specifies the type of media.\n\t * \n\t * @see http://www.iana.org/assignments/media-types/\n\t */\n\ttype: string[];\n\t/**\n\t * Specifies the sub-type of media.\n\t * \n\t * @see http://www.iana.org/assignments/media-types/\n\t */\n\tsubtype: string[];\n}\n\nconst paramTokenPattern = \"[a-zA-Z0-9!#$%&'*+.^_`{|}~-]+\";\nconst paramTokenQuotePattern = \"\\\"[a-zA-Z0-9!#$%&'()*+,./:;<=>?@\\[\\\\\\]^_`{|}~-]+\\\"\";\nconst valueRegex = new RegExp(`^(?:${paramTokenPattern}|${paramTokenQuotePattern})$`);\n\nconst tokenRegex = new RegExp(`^[a-zA-Z0-9](?:[a-zA-Z0-9!#$&^/_.+-]{0,125}[a-zA-Z0-9!#$&^/_.-])?$`);\n\nconst dataRegex = new RegExp(`^(?:[a-zA-Z0-9._~!$&'()*+,;=:@-]|%[a-zA-Z0-9]{2})*$`);\n\n\n\nfunction parseDataUrl(str: string): DataUrlObject | null {\n\tconst result: DataUrlObject = {\n\t\tdata: \"\",\n\t\ttype: \"\",\n\t\tsubtype: \"\",\n\t\tparameters: [],\n\t\tisBase64: false\n\t};\n\tlet i = 0;\n\n\tif (!str.startsWith(\"data:\")) return (null);\n\ti += 5;\n\n\tif (str[i] !== \";\" && str[i] !== \",\") {\n\t\t// EXTRACT TYPE\n\t\tconst typeStart = i;\n\t\twhile (str[i] && str[i] !== \"/\") i++;\n\t\tif (!str[i] || typeStart === i) return (null);\n\t\tconst typeEnd = i;\n\n\t\t// EXTRACT SUBTYPE\n\t\tconst subtypeStart = ++i;\n\t\twhile (str[i] && str[i] !== \";\" && str[i] !== \",\") i++;\n\t\tif (!str[i] || subtypeStart === i) return (null);\n\t\tconst subtypeEnd = i;\n\n\t\tresult.type = str.slice(typeStart, typeEnd);\n\t\tresult.subtype = str.slice(subtypeStart, subtypeEnd);\n\t}\n\n\t// EXTRACT PARAMETERS\n\twhile (str[i] && str[i] === \";\") {\n\t\tif (str.startsWith(\";base64,\", i)) {\n\t\t\tresult.isBase64 = true;\n\t\t\ti += 7;\n\t\t\tbreak;\n\t\t}\n\n\t\tconst nameStart = ++i;\n\t\twhile (str[i] && str[i] !== \"=\") i++;\n\t\tif (!str[i] || nameStart === i) return (null);\n\t\tconst nameEnd = i;\n\n\t\tconst valueStart = ++i;\n\t\tif (str[valueStart] === \"\\\"\") {\n\t\t\twhile (str[i] && !(str[i - 1] === \"\\\"\" && (str[i] === \";\" || str[i] === \",\"))) i++;\n\t\t}\n\t\telse {\n\t\t\twhile (str[i] && str[i] !== \";\" && str[i] !== \",\") i++;\n\t\t}\n\t\tif (!str[i] || valueStart === i) return (null);\n\t\tconst valueEnd = i;\n\n\t\tresult.parameters.push({\n\t\t\tname: str.slice(nameStart, nameEnd),\n\t\t\tvalue: str.slice(valueStart, valueEnd)\n\t\t});\n\t}\n\n\tif (str[i] !== \",\") return (null);\n\ti += 1;\n\n\t// EXTRACT DATA\n\tif (str[i]) result.data = str.slice(i);\n\n\treturn (result);\n}\n\n/**\n * **Standard :** RFC 2397 (RFC 2045, RFC 6838, RFC 3986)\n * \n * @version 2.0.0\n */\nexport function isDataUrl(str: string, params?: DataUrlParams): boolean {\n\tconst dataUrl = parseDataUrl(str);\n\tif (!dataUrl) return (false);\n\n\tif (dataUrl.type || dataUrl.subtype) {\n\t\t// CHECK TYPE\n\t\tif (!tokenRegex.test(dataUrl.type)) return (false);\n\t\t// RFC 6838 4.2: Length restriction\n\t\tif (dataUrl.type.length > 127) return (false);\n\n\t\t// CHECK SUBTYPE\n\t\tif (!tokenRegex.test(dataUrl.subtype)) return (false);\n\t\t// RFC 6838 4.2: Length restriction\n\t\tif (dataUrl.subtype.length > 127) return (false);\n\t}\n\n\t// CHECK PARAMETERS\n\tfor (let i = 0; i < dataUrl.parameters.length; i++) {\n\t\tconst parameter = dataUrl.parameters[i];\n\t\t\n\t\tif (!tokenRegex.test(parameter.name)) return (false);\n\t\tif (!valueRegex.test(parameter.value)) return (false);\n\n\t\t// RFC 6838 4.3: Identical name restriction and case insensitive\n\t\tif (dataUrl.parameters.some(({ name }, j) =>\n\t\t\tj !== i && name.toLowerCase() === name.toLowerCase())) return (false);\n\t}\n\n\t// CHECK DATA\n\tif (!dataRegex.test(dataUrl.data)) return (false);\n\n\tif (params?.type) {\n\t\tconst hasValidType = params.type.some(type => \n\t\t\ttype.toLowerCase() === dataUrl.type.toLowerCase());\n\t\tif (!hasValidType) return (false);\n\t}\n\tif (params?.subtype) {\n\t\tconst hasValidSubtype = params.subtype.some(subtype => \n\t\t\tsubtype.toLowerCase() === dataUrl.subtype.toLowerCase());\n\t\tif (!hasValidSubtype) return (false);\n\t}\n\n\treturn (true);\n}\n\n","import { Issue } from \"../../utils\";\nimport { weakly } from \"../utils\";\n\nconst base16Regex = new RegExp(\"^(?:[A-F0-9]{2})*$\");\n\nconst base32Regex = new RegExp(\"^(?:[A-Z2-7]{8})*(?:[A-Z2-7]{2}[=]{6}|[A-Z2-7]{4}[=]{4}|[A-Z2-7]{5}[=]{3}|[A-Z2-7]{6}[=]{2}|[A-Z2-7]{7}[=]{1})?$\");\nconst base32HexRegex = weakly(() => new RegExp(\"^(?:[0-9A-V]{8})*(?:[0-9A-V]{2}[=]{6}|[0-9A-V]{4}[=]{4}|[0-9A-V]{5}[=]{3}|[0-9A-V]{6}[=]{2}|[0-9A-V]{7}[=]{1})?$\"));\n\nconst base64Regex = new RegExp(\"^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}[=]{2}|[A-Za-z0-9+/]{3}[=]{1})?$\");\nconst base64UrlRegex = weakly(() => new RegExp(\"^(?:[A-Za-z0-9_-]{4})*(?:[A-Za-z0-9_-]{2}[=]{2}|[A-Za-z0-9_-]{3}[=]{1})?$\"));\n\n/**\n * **Standard :** RFC 4648\n * \n * @see https://datatracker.ietf.org/doc/html/rfc4648#section-4\n * \n * @version 1.0.0\n */\nexport function isBase64(str: string, params?: undefined): boolean {\n\tif (typeof str !== \"string\") new Issue(\"Parameters\", \"'str' must be of type string.\");\n\treturn (str.length % 4 == 0 && base64Regex.test(str));\n}\n\n/**\n * **Standard :** RFC 4648\n * \n * @see https://datatracker.ietf.org/doc/html/rfc4648#section-5\n * \n * @version 1.0.0\n */\nexport function isBase64Url(str: string, params?: undefined): boolean {\n\tif (typeof str !== \"string\") new Issue(\"Parameters\", \"'str' must be of type string.\");\n\treturn (str.length % 4 === 0 && base64UrlRegex().test(str));\n}\n\n/**\n * **Standard :** RFC 4648\n * \n * @see https://datatracker.ietf.org/doc/html/rfc4648#section-6\n * \n * @version 1.0.0\n */\nexport function isBase32(str: string, params?: undefined): boolean {\n\tif (typeof str !== \"string\") new Issue(\"Parameters\", \"'str' must be of type string.\");\n\treturn (str.length % 8 === 0 && base32Regex.test(str));\n}\n\n/**\n * **Standard :** RFC 4648\n * \n * @see https://datatracker.ietf.org/doc/html/rfc4648#section-7\n * \n * @version 1.0.0\n */\nexport function isBase32Hex(str: string, params?: undefined): boolean {\n\tif (typeof str !== \"string\") new Issue(\"Parameters\", \"'str' must be of type string.\");\n\treturn (str.length % 8 === 0 && base32HexRegex().test(str));\n}\n\n/**\n * **Standard :** RFC 4648\n * \n * @see https://datatracker.ietf.org/doc/html/rfc4648#section-8\n * \n * @version 1.0.0\n */\nexport function isBase16(str: string, params?: undefined): boolean {\n\tif (typeof str !== \"string\") new Issue(\"Parameters\", \"'str' must be of type string.\");\n\treturn (str.length % 2 === 0 && base16Regex.test(str));\n}","import * as objectTesters from './object';\nimport * as stringTesters from './string';\n\nexport type * from \"./types\";\nexport * from './object';\nexport * from './string';\n\nexport const testers = {\n\tobject: objectTesters,\n\tstring: stringTesters\n};","import type { SetableCriteria } from \"../formats\";\nimport { isArray, isPlainObject } from \"../../testers\";\nimport { hasNodeSymbol } from \"./mounter\";\n\ninterface CloningTask {\n\tsrc: unknown;\n\tcpy: any;\n}\n\n/**\n * Clones the object starting from the root and stops traversing a branch\n * when a mounted criteria node is encountered. In such cases, the mounted\n * object encountered see its internal properties copied to a new reference\n * so that the junction is a unique reference in the tree.\n * \n * @param src Source object of the clone\n * @returns Clone of the source object\n */\nexport function cloner<T extends SetableCriteria>(\n\trootSrc: T\n): T {\n\tlet rootCpy = {};\n\tlet stack: CloningTask[] = [{ \n\t\tsrc: rootSrc, \n\t\tcpy: rootCpy\n\t}];\n\n\twhile (stack.length > 0) {\n\t\tlet { src, cpy } = stack.pop()!;\n\n\t\tif (isPlainObject(src)) {\n\t\t\tif (hasNodeSymbol(src)) {\n\t\t\t\tcpy = { ...src };\n\t\t\t}\n\t\t\telse {\n\t\t\t\tconst keys = Reflect.ownKeys(src);\n\t\t\t\tfor (let i = 0; i < keys.length; i++) {\n\t\t\t\t\tconst key = keys[i];\n\t\n\t\t\t\t\tif (isPlainObject(src[key])) {\n\t\t\t\t\t\tif (hasNodeSymbol(src[key])) {\n\t\t\t\t\t\t\tcpy[key] = { ...src[key] };\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tcpy[key] = {};\n\t\n\t\t\t\t\t\t\tstack.push({\n\t\t\t\t\t\t\t\tsrc: src[key],\n\t\t\t\t\t\t\t\tcpy: cpy[key]\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (isArray(src[key])) {\n\t\t\t\t\t\tcpy[key] = [];\n\t\n\t\t\t\t\t\tstack.push({\n\t\t\t\t\t\t\tsrc: src[key],\n\t\t\t\t\t\t\tcpy: cpy[key]\n\t\t\t\t\t\t});\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcpy[key] = src[key];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse if (isArray(src)) {\n\t\t\tfor (let i = 0; i < src.length; i++) {\n\t\t\t\tconst index = i;\n\t\n\t\t\t\tif (isPlainObject(src[index])) {\n\t\t\t\t\tif (hasNodeSymbol(src[index])) {\n\t\t\t\t\t\tcpy[i] = { ...src[index] };\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcpy[i] = {};\n\t\n\t\t\t\t\t\tstack.push({\n\t\t\t\t\t\t\tsrc: src[index],\n\t\t\t\t\t\t\tcpy: cpy[index]\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t} else if (isArray(src[index])) {\n\t\t\t\t\tcpy[index] = [];\n\n\t\t\t\t\tstack.push({\n\t\t\t\t\t\tsrc: src[index],\n\t\t\t\t\t\tcpy: cpy[index]\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tcpy[index] = src[index];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tcpy = src;\n\t\t}\n\t}\n\n\treturn (rootCpy as T);\n};","import type { FunctionSetableCriteria, FunctionErrorCodes, FunctionRejectCodes, FunctionCustomMembers } from \"./types\";\nimport type { Format } from \"../types\";\nimport { getInternalTag } from \"../../../helpers\";\nimport { isArray } from \"../../../testers\";\n\nexport const FunctionFormat: Format<\n\tFunctionSetableCriteria,\n\tFunctionErrorCodes,\n\tFunctionRejectCodes,\n\tFunctionCustomMembers\n> = {\n\ttype: \"function\",\n\terrors: {\n\t\tVARIANT_PROPERTY_MALFORMED:\n\t\t\t\"The 'variant' property must be of type String.\",\n\t\tVARIANT_PROPERTY_STRING_MISCONFIGURED:\n\t\t\t\"The 'variant' property must be a known string.\",\n\t\tVARIANT_PROPERTY_ARRAY_LENGTH_MISCONFIGURED:\n\t\t\t\"The array length of the 'variant' must be greater than 0.\",\n\t\tVARIANT_PROPERTY_ARRAY_ITEM_MISCONFIGURED:\n\t\t\t\"The array items of the 'variant' property must be a known string.\"\n\t},\n\tvariantBitflags: {\n\t\tBASIC:\t\t\t\t1 << 1,\n\t\tASYNC:\t\t\t\t1 << 2,\n\t\tBASIC_GENERATOR:\t1 << 3,\n\t\tASYNC_GENERATOR:\t1 << 4\n\t},\n\ttagBitflags: {\n\t\tFunction:\t\t\t\t1 << 1,\n\t\tAsyncFunction:\t\t\t1 << 2,\n\t\tGeneratorFunction:\t\t1 << 3,\n\t\tAsyncGeneratorFunction:\t1 << 4\n\t},\n\tmount(chunk, criteria) {\n\t\tconst { variant } = criteria;\n\n\t\tif (variant !== undefined) {\n\t\t\tif (typeof variant == \"string\") {\n\t\t\t\tif (!(variant in this.variantBitflags)) {\n\t\t\t\t\treturn (\"VARIANT_PROPERTY_STRING_MISCONFIGURED\");\n\t\t\t\t}\n\t\t\t} else if (isArray(variant)) {\n\t\t\t\tif (variant.length < 1) {\n\t\t\t\t\treturn (\"VARIANT_PROPERTY_ARRAY_LENGTH_MISCONFIGURED\");\n\t\t\t\t}\n\t\t\t\tfor (const item of variant) {\n\t\t\t\t\tif (!(item in this.variantBitflags)) {\n\t\t\t\t\t\treturn (\"VARIANT_PROPERTY_ARRAY_ITEM_MISCONFIGURED\");\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\treturn (\"VARIANT_PROPERTY_MALFORMED\");\n\t\t\t}\n\t\t}\n\n\t\tif (isArray(variant)) {\n\t\t\tObject.assign(criteria, {\n\t\t\t\tbitcode: variant.reduce((code, key) => (\n\t\t\t\t\tcode | this.variantBitflags[key]\n\t\t\t\t), 0)\n\t\t\t});\n\t\t} else {\n\t\t\tObject.assign(criteria, {\n\t\t\t\tbitcode: variant\n\t\t\t\t\t? this.variantBitflags[variant]\n\t\t\t\t\t: 0\n\t\t\t});\n\t\t}\n\n\t\treturn (null);\n\t},\n\tcheck(chunk, criteria, value) {\n\t\tif (typeof value !== \"function\") {\n\t\t\treturn (\"TYPE_FUNCTION_UNSATISFIED\");\n\t\t}\n\n\t\tconst { variantBitcode } = criteria;\n\t\tconst { tagBitflags } = this;\n\n\t\tif (variantBitcode) {\n\t\t\tconst tag = getInternalTag(value) as string;\n\t\t\tconst tagBitflag = tagBitflags[tag];\n\n\t\t\tif (!tagBitflag || !(variantBitcode & tagBitflag)) {\n\t\t\t\treturn (\"VARIANT_UNSATISFIED\");\n\t\t\t}\n\t\t}\n\n\n\t\treturn (null);\n\t}\n}\n","import type { BooleanSetableCriteria, BooleanErrorCodes, BooleanRejectCodes } from \"./types\";\nimport type { Format } from \"../types\";\n\nexport const BooleanFormat: Format<BooleanSetableCriteria, BooleanErrorCodes, BooleanRejectCodes> = {\n\ttype: \"boolean\",\n\terrors: {\n\t\tLITERAL_PROPERTY_MALFORMED:\n\t\t\t\"The 'literal' property must be of type Boolean.\"\n\t},\n\tmount(chunk, criteria) {\n\t\tconst { literal } = criteria;\n\n\t\tif (literal !== undefined && typeof literal !== \"boolean\") {\n\t\t\treturn (\"LITERAL_PROPERTY_MALFORMED\");\n\t\t}\n\n\t\treturn (null);\n\t},\n\tcheck(chunk, criteria, value) {\n\t\tif (typeof value !== \"boolean\") {\n\t\t\treturn (\"TYPE_BOOLEAN_UNSATISFIED\");\n\t\t}\n\n\t\tconst { literal } = criteria;\n\n\t\tif (literal !== undefined && literal !== value) {\n\t\t\treturn (\"LITERAL_UNSATISFIED\");\n\t\t}\n\n\t\treturn (null);\n\t},\n}\n","import type { SymbolSetableCriteria, SymbolErrorCodes, SymbolRejectCodes } from \"./types\";\nimport type { Format } from \"../types\";\n\nexport const SymbolFormat: Format<SymbolSetableCriteria, SymbolErrorCodes, SymbolRejectCodes> = {\n\ttype: \"symbol\",\n\terrors: {\n        LITERAL_PROPERTY_MALFORMED:\n            \"The 'literal' property must be of type Symbol.\"\n    },\n\tmount(chunk, criteria) {\n\t\tconst { literal } = criteria;\n\n\t\tif (literal !== undefined && typeof literal !== \"symbol\") {\n\t\t\treturn (\"LITERAL_PROPERTY_MALFORMED\");\n\t\t}\n\n\t\treturn (null);\n\t},\n\tcheck(chunk, criteria, value) {\n\t\tif (typeof value !== \"symbol\") {\n\t\t\treturn (\"TYPE_SYMBOL_UNSATISFIED\");\n\t\t}\n\n\t\tconst { literal } = criteria;\n\n\t\tif (literal !== undefined && literal !== value) {\n\t\t\treturn (\"LITERAL_UNSATISFIED\");\n\t\t}\n\n\t\treturn (null);\n\t}\n}\n","import type { NumberSetableCriteria, NumberErrorCodes, NumberRejectCodes } from \"./types\";\nimport type { Format } from \"../types\";\nimport { isPlainObject, isArray, isFunction } from \"../../../testers\";\n\nexport const NumberFormat: Format<NumberSetableCriteria, NumberErrorCodes, NumberRejectCodes> = {\n\ttype: \"number\",\n\terrors: {\n        MIN_PROPERTY_MALFORMED:\n\t\t    \"The 'min' property must be of type Number.\",\n       \tMAX_PROPERTY_MALFORMED:\n            \"The 'max' property must be of type Number.\",\n        MIN_AND_MAX_PROPERTIES_MISCONFIGURED:\n\t\t\t\"The 'min' property cannot be greater than 'max' property.\",\n        LITERAL_PROPERTY_MALFORMED:\n\t\t\t\"The 'literal' property must be of type Number, Array or Plain Object.\",\n\t\tLITERAL_PROPERTY_ARRAY_MISCONFIGURED:\n\t\t\t\"The array of the 'literal' property must contain at least one item.\",\n\t\tLITERAL_PROPERTY_ARRAY_ITEM_MALFORMED:\n\t\t\t\"The array items of the 'literal' property must be of type Number.\",\n\t\tLITERAL_PROPERTY_OBJECT_MISCONFIGURED:\n\t\t\t\"The object of the 'literal' property must contain at least one key.\",\n\t\tLITERAL_PROPERTY_OBJECT_KEY_MALFORMED:\n\t\t\t\"The object keys of the 'literal' property must be of type String.\",\n\t\tLITERAL_PROPERTY_OBJECT_VALUE_MALFORMED:\n\t\t\t\"The object values of the 'literal' property must be of type Number.\",\n        CUSTOM_PROPERTY_MALFORMED:\n            \"The 'custom' property must be of type Basic Function.\"\n    },\n\tmount(chunk, criteria) {\n\t\tconst {  min, max, literal, custom } = criteria;\n\n\t\tif (min !== undefined && typeof min !== \"number\") {\n\t\t\treturn (\"MIN_PROPERTY_MALFORMED\");\n\t\t}\n\t\tif (max !== undefined && typeof max !== \"number\") {\n\t\t\treturn (\"MAX_PROPERTY_MALFORMED\");\n\t\t}\n\t\tif (min !== undefined && max !== undefined && min > max) {\n\t\t\treturn (\"MIN_AND_MAX_PROPERTIES_MISCONFIGURED\");\n\t\t}\n\t\tif (literal !== undefined) {\n\t\t\tif (isArray(literal)) {\n\t\t\t\tif (literal.length < 1) {\n\t\t\t\t\treturn (\"LITERAL_PROPERTY_ARRAY_MISCONFIGURED\");\n\t\t\t\t}\n\n\t\t\t\tfor (const item of literal) {\n\t\t\t\t\tif (typeof item !== \"number\") {\n\t\t\t\t\t\treturn (\"LITERAL_PROPERTY_ARRAY_ITEM_MALFORMED\");\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (isPlainObject(literal)) {\n\t\t\t\tconst keys = Reflect.ownKeys(literal);\n\t\t\t\tif (keys.length < 1) {\n\t\t\t\t\treturn (\"LITERAL_PROPERTY_OBJECT_MISCONFIGURED\");\n\t\t\t\t}\n\n\t\t\t\tfor (const key of keys) {\n\t\t\t\t\tif (typeof key !== \"string\") {\n\t\t\t\t\t\treturn (\"LITERAL_PROPERTY_OBJECT_KEY_MALFORMED\");\n\t\t\t\t\t}\n\t\t\t\t\tif (typeof literal[key] !== \"number\") {\n\t\t\t\t\t\treturn (\"LITERAL_PROPERTY_OBJECT_VALUE_MALFORMED\");\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (typeof literal !== \"number\") {\n\t\t\t\treturn (\"LITERAL_PROPERTY_MALFORMED\");\n\t\t\t}\n\t\t}\n\t\tif (custom !== undefined && !isFunction(custom)) {\n\t\t\treturn (\"CUSTOM_PROPERTY_MALFORMED\");\n\t\t}\n\n\t\treturn (null);\n\t},\n\tcheck(chunk, criteria, value) {\n\t\tif (typeof value !== \"number\") {\n\t\t\treturn (\"TYPE_NUMBER_UNSATISFIED\");\n\t\t}\n\n\t\tconst { min, max, literal, custom } = criteria;\n\n\t\tif (min !== undefined && value < min) {\n\t\t\treturn (\"MIN_UNSATISFIED\");\n\t\t}\n\t\tif (max !== undefined && value > max) {\n\t\t\treturn (\"MAX_UNSATISFIED\");\n\t\t}\n\t\tif (literal !== undefined) {\n\t\t\tif (isArray(literal)) {\n\t\t\t\tif (!literal.includes(value)) {\n\t\t\t\t\treturn (\"LITERAL_UNSATISFIED\");\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (isPlainObject(literal)) {\n\t\t\t\tif (!Object.values(literal).includes(value)) {\n\t\t\t\t\treturn (\"LITERAL_UNSATISFIED\");\n\t\t\t\t}\n\t\t\t} else if (literal !== value) {\n\t\t\t\treturn (\"LITERAL_UNSATISFIED\");\n\t\t\t}\n\t\t}\n\t\tif (custom && !custom(value)) {\n\t\t\treturn (\"CUSTOM_UNSATISFIED\");\n\t\t}\n\n\t\treturn (null);\n\t}\n}\n","import type { StringSetableCriteria, StringErrorCodes, StringRejectCodes, StringCustomMembers } from \"./types\";\nimport type { Format } from \"../types\";\nimport { isPlainObject, isArray, isFunction, testers } from \"../../../testers\";\n\nconst stringTesters: Record<string, (...args: any[]) => boolean> = testers.string;\n\nexport const StringFormat: Format<StringSetableCriteria, StringErrorCodes, StringRejectCodes, StringCustomMembers> = {\n\ttype: \"string\",\n\terrors: {\n\t\tMIN_PROPERTY_MALFORMED:\n\t\t\t\"The 'min' property must be of type Number.\",\n\t\tMAX_PROPERTY_MALFORMED:\n\t\t\t\"The 'max' property must be of type Number.\",\n\t\tMIN_MAX_PROPERTIES_MISCONFIGURED:\n\t\t\t\"The 'min' property cannot be greater than 'max' property.\",\n\t\tREGEX_PROPERTY_MALFORMED:\n\t\t\t\"The 'regex' property must be of type String or RegExp Object.\",\n\t\tLITERAL_PROPERTY_MALFORMED:\n\t\t\t\"The 'literal' property must be of type String, Array or Plain Object.\",\n\t\tLITERAL_PROPERTY_ARRAY_MISCONFIGURED:\n\t\t\t\"The array of the 'literal' property must contain at least one item.\",\n\t\tLITERAL_PROPERTY_ARRAY_ITEM_MALFORMED:\n\t\t\t\"The array items of the 'literal' property must be of type String.\",\n\t\tLITERAL_PROPERTY_OBJECT_MISCONFIGURED:\n\t\t\t\"The object of the 'literal' property must contain at least one key.\",\n\t\tLITERAL_PROPERTY_OBJECT_KEY_MALFORMED:\n\t\t\t\"The object keys of the 'literal' property must be of type String.\",\n\t\tLITERAL_PROPERTY_OBJECT_VALUE_MALFORMED:\n\t\t\t\"The object values of the 'literal' property must be of type String.\",\n\t\tCONSTRAINT_PROPERTY_MALFORMED:\n\t\t\t\"The 'constraint' property must be of type Plain Object.\",\n\t\tCONSTRAINT_PROPERTY_MISCONFIGURED:\n\t\t\t\"The object of the 'constraint' property must contain at least one key.\",\n\t\tCONSTRAINT_PROPERTY_OBJECT_KEY_MALFORMED:\n\t\t\t\"The object keys of the 'constraint' property must be of type String.\",\n\t\tCONSTRAINT_PROPERTY_OBJECT_KEY_MISCONFIGURED:\n\t\t\t\"The object keys of the 'constraint' property must be a known string.\",\n\t\tCONSTRAINT_PROPERTY_OBJECT_VALUE_MALFORMED:\n\t\t\t\"The object values of the 'constraint' property must be of type True or Plain Object.\",\n\t\tCUSTOM_PROPERTY_MALFORMED:\n\t\t\t\"The 'custom' property must be of type Basic Function.\"\n\t},\n\tmountConstraint(definedConstraint) {\n\t\tif (!isPlainObject(definedConstraint)) {\n\t\t\treturn (\"CONSTRAINT_PROPERTY_MALFORMED\");\n\t\t}\n\n\t\tconst definedKeys = Reflect.ownKeys(definedConstraint);\n\t\tconst setableKeys = Object.keys(stringTesters);\n\n\t\tif (definedKeys.length < 1) {\n\t\t\treturn (\"LITERAL_PROPERTY_OBJECT_MISCONFIGURED\");\n\t\t}\n\n\t\tfor (const definedKey of definedKeys) {\n\t\t\tconst definedValue = definedConstraint[definedKey];\n\n\t\t\tif (typeof definedKey !== \"string\") {\n\t\t\t\treturn (\"CONSTRAINT_PROPERTY_OBJECT_KEY_MALFORMED\");\n\t\t\t}\n\t\t\tif (!setableKeys.includes(definedKey)) {\n\t\t\t\treturn (\"CONSTRAINT_PROPERTY_OBJECT_KEY_MISCONFIGURED\");\n\t\t\t}\n\t\t\tif (definedValue !== true && !isPlainObject(definedValue)) {\n\t\t\t\treturn (\"CONSTRAINT_PROPERTY_OBJECT_VALUE_MALFORMED\");\n\t\t\t}\n\t\t}\n\n\t\treturn (null);\n\t},\n\tmount(chunk, criteria) {\n\t\tconst {  min, max, regex, literal, constraint, custom } = criteria;\n\n\t\tif (min !== undefined && typeof min !== \"number\") {\n\t\t\treturn (\"MAX_PROPERTY_MALFORMED\");\n\t\t}\n\t\tif (max !== undefined && typeof max !== \"number\") {\n\t\t\treturn (\"MAX_PROPERTY_MALFORMED\");\n\t\t}\n\t\tif (min !== undefined && max !== undefined && min > max) {\n\t\t\treturn (\"MIN_MAX_PROPERTIES_MISCONFIGURED\");\n\t\t}\n\t\tif (regex !== undefined) {\n\t\t\tif (typeof regex !== \"string\" && !(regex instanceof RegExp)) {\n\t\t\t\treturn (\"REGEX_PROPERTY_MALFORMED\");\n\t\t\t}\n\t\t}\n\t\tif (literal !== undefined) {\n\t\t\tif (isArray(literal)) {\n\t\t\t\tif (literal.length < 1) {\n\t\t\t\t\treturn (\"LITERAL_PROPERTY_ARRAY_MISCONFIGURED\");\n\t\t\t\t}\n\n\t\t\t\tfor (const item of literal) {\n\t\t\t\t\tif (typeof item !== \"string\") {\n\t\t\t\t\t\treturn (\"LITERAL_PROPERTY_ARRAY_ITEM_MALFORMED\");\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (isPlainObject(literal)) {\n\t\t\t\tconst keys = Reflect.ownKeys(literal);\n\t\t\t\tif (keys.length < 1) {\n\t\t\t\t\treturn (\"LITERAL_PROPERTY_OBJECT_MISCONFIGURED\");\n\t\t\t\t}\n\n\t\t\t\tfor (const key of keys) {\n\t\t\t\t\tif (typeof key !== \"string\") {\n\t\t\t\t\t\treturn (\"LITERAL_PROPERTY_OBJECT_KEY_MALFORMED\");\n\t\t\t\t\t}\n\t\t\t\t\tif (typeof literal[key] !== \"string\") {\n\t\t\t\t\t\treturn (\"LITERAL_PROPERTY_OBJECT_VALUE_MALFORMED\");\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (typeof literal !== \"string\") {\n\t\t\t\treturn (\"LITERAL_PROPERTY_MALFORMED\");\n\t\t\t}\n\t\t}\n\t\tif (constraint !== undefined) {\n\t\t\tconst error = this.mountConstraint(constraint);\n\t\t\tif (error) return (error);\n\t\t}\n\t\tif (custom !== undefined && !isFunction(custom)) {\n\t\t\treturn (\"CUSTOM_PROPERTY_MALFORMED\");\n\t\t}\n\n\t\tObject.assign(criteria, {\n\t\t\tregex: typeof regex === \"string\" ? new RegExp(regex) : regex\n\t\t});\n\n\t\treturn (null);\n\t},\n\tcheckConstraint(definedConstraint, value) {\n\t\tconst definedKeys = Object.keys(definedConstraint);\n\n\t\tfor (let i = definedKeys.length - 1; i >= 0; i--) {\n\t\t\tconst definedKey = definedKeys[i];\n\t\t\tconst definedValue = definedConstraint[definedKey];\n\n\t\t\tif (stringTesters[definedKey](value, definedValue)) {\n\t\t\t\treturn (null);\n\t\t\t} else if (i === 0) {\n\t\t\t\treturn (\"CONSTRAINT_UNSATISFIED\");\n\t\t\t}\n\t\t}\n\n\t\treturn (\"CONSTRAINT_UNSATISFIED\");\n\t},\n\tcheck(chunk, criteria, value) {\n\t\tif (typeof value !== \"string\") {\n\t\t\treturn (\"TYPE_STRING_UNSATISFIED\");\n\t\t}\n\n\t\tconst {  min, max, regex, literal, constraint, custom } = criteria;\n\t\tconst valueLength = value.length;\n\n\t\tif (min !== undefined && valueLength < min) {\n\t\t\treturn (\"MIN_UNSATISFIED\");\n\t\t}\n\t\tif (max !== undefined && valueLength > max) {\n\t\t\treturn (\"MAX_UNSATISFIED\");\n\t\t}\n\t\tif (regex !== undefined && !regex.test(value)) {\n\t\t\treturn (\"REGEX_UNSATISFIED\");\n\t\t}\n\t\tif (literal !== undefined) {\n\t\t\tif (isArray(literal)) {\n\t\t\t\tif (!literal.includes(value)) {\n\t\t\t\t\treturn (\"LITERAL_UNSATISFIED\");\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (isPlainObject(literal)) {\n\t\t\t\tif (!Object.values(literal).includes(value)) {\n\t\t\t\t\treturn (\"LITERAL_UNSATISFIED\");\n\t\t\t\t}\n\t\t\t} else if (literal !== value) {\n\t\t\t\treturn (\"LITERAL_UNSATISFIED\");\n\t\t\t}\n\t\t}\n\t\tif (constraint !== undefined) {\n\t\t\tconst reject = this.checkConstraint(constraint, value);\n\t\t\tif (reject) return (reject);\n\t\t}\n\t\tif (custom && !custom(value)) {\n\t\t\treturn (\"CUSTOM_UNSATISFIED\");\n\t\t}\n\n\t\treturn (null);\n\t}\n}\n","import type { SimpleSetableCriteria, SimpleErrorCodes, SimpleRejectCodes, SimpleCustomMembers } from \"./types\";\nimport type { Format } from \"../types\";\n\nexport const SimpleFormat: Format<\n\tSimpleSetableCriteria,\n\tSimpleErrorCodes,\n\tSimpleRejectCodes,\n\tSimpleCustomMembers\n> = {\n\ttype: \"simple\",\n\terrors: {\n\t\tVARIANT_PROPERTY_REQUIRED:\n            \"The 'variant' property must be defined.\",\n        VARIANT_PROPERTY_MALFORMED:\n            \"The 'variant' property must be of type String.\",\n\t\tVARIANT_PROPERTY_STRING_MISCONFIGURED:\n            \"The 'variant' property must be a known string.\"\n\t},\n\tvariantBitflags: {\n\t\tUNKNOWN:\t1 << 0,\n\t\tNULLISH:\t1 << 1,\n\t\tNULL:\t\t1 << 2,\n\t\tUNDEFINED:\t1 << 3\n\t},\n\tmount(chunk, criteria) {\n\t\tconst { variant } = criteria;\n\n\t\tif (!(\"variant\" in criteria)) {\n\t\t\treturn (\"VARIANT_PROPERTY_REQUIRED\");\n\t\t}\n\t\tif (typeof variant !== \"string\") {\n\t\t\treturn (\"VARIANT_PROPERTY_MALFORMED\");\n\t\t}\n\t\tif (!(variant in this.variantBitflags)) {\n\t\t\treturn (\"VARIANT_PROPERTY_STRING_MISCONFIGURED\");\n\t\t}\n\n\t\tObject.assign(criteria, {\n\t\t\tvariantBitcode: this.variantBitflags[variant]\n\t\t});\n\n\t\treturn (null);\n\t},\n\tcheck(chunk, criteria, value) {\n\t\tconst { variantBitcode } = criteria;\n\t\tconst { variantBitflags } = this\n\t\n\t\tif (variantBitcode & variantBitflags.UNKNOWN) {\n\t\t\treturn (null);\n\t\t}\n\t\tif (variantBitcode & variantBitflags.NULLISH && value != null) {\n\t\t\treturn (\"VARIANT_NULLISH_UNSATISFIED\");\n\t\t}\n\t\tif (variantBitcode & variantBitflags.NULL && value !== null) {\n\t\t\treturn (\"VARIANT_NULL_UNSATISFIED\");\n\t\t}\n\t\tif ((variantBitcode & variantBitflags.UNDEFINED) && value !== undefined) {\n\t\t\treturn (\"VARIANT_UNDEFINED_UNSATISFIED\");\n\t\t}\n\n\t\treturn (null);\n\t}\n}","import type { ObjectSetableCriteria, SetableShape, ObjectErrorCodes, ObjectRejectCodes, ObjectCustomMembers } from \"./types\";\nimport type { Format } from \"../types\";\nimport { isObject, isPlainObject, isArray } from \"../../../testers\";\n\nexport const ObjectFormat: Format<ObjectSetableCriteria, ObjectErrorCodes, ObjectRejectCodes, ObjectCustomMembers> = {\n\ttype: \"object\",\n\terrors: {\n\t\tSHAPE_PROPERTY_REQUIRED:\n\t\t\t\"The 'shape' property is required.\",\n\t\tSHAPE_PROPERTY_MALFORMED:\n\t\t\t\"The 'shape' property must be of type Plain Object.\",\n\t\tSHAPE_PROPERTY_OBJECT_VALUE_MALFORMED:\n\t\t\t\"The object values of the 'shape' property must be of type Plain Object.\",\n\t\tSTRICT_PROPERTY_MALFORMED:\n\t\t\t\"The 'strict' property must be of type Boolean.\",\n\t\tOMITTABLE_PROPERTY_MALFORMED:\n\t\t\t\"The 'omittable' property must be of type Boolean or Array.\",\n\t\tOMITTABLE_PROPERTY_ARRAY_ITEM_MALFORMED:\n\t\t\t\"The array items of the 'omittable' property must be of type String or Symbol.\",\n\t\tEXPANDABLE_PROPERTY_MALFORMED:\n\t\t\t\"The 'extensible' property must be of type Boolean or a Plain Object.\",\n\t\tEXPANDABLE__KEY_PROPERTY_MALFORMED:\n\t\t\t\"The 'extensible.key' property, must be a criteria node of type Plain Object.\",\n\t\tEXPANDABLE__KEY_PROPERTY_MISCONFIGURED:\n\t\t\t\"The value of the 'extensible.key' property, must be a criteria node with a 'type' property equal to 'string' or 'symbol'\",\n\t\tEXPANDABLE__VALUE_PROPERTY_MALFORMED:\n\t\t\t\"The 'extensible.value' property, must be a criteria node Object.\",\n\t\tEXPANDABLE__MIN_PROPERTY_MALFORMED:\n\t\t\t\"The 'extensible.min' property, must be of type Number.\",\n\t\tEXPANDABLE__MAX_PROPERTY_MALFORMED:\n\t\t\t\"The 'extensible.max' property, must be of type Number.\",\n\t\tEXPANDABLE__MIN_AND_MAX_PROPERTIES_MISCONFIGURED:\n\t\t\t\"The 'extensible.min' property cannot be greater than 'extensible.max' property.\"\n\t},\n\tgetUnforcedKeys(omittable, declaredKeys) {\n\t\tif (omittable === true) return (declaredKeys);\n\t\tif (omittable === false) return ([]);\n\n\t\treturn (declaredKeys.filter(key => omittable.includes(key)));\n\t},\n\tgetEnforcedKeys(omittable, declaredKeys) {\n\t\tif (omittable === true) return ([]);\n\t\tif (omittable === false) return (declaredKeys);\n\n\t\treturn (declaredKeys.filter(key => !omittable.includes(key)));\n\t},\n\tisShorthandShape(obj): obj is SetableShape {\n\t\treturn (isPlainObject(obj) && (!(\"type\" in obj) || typeof obj.type !== \"string\"));\n\t},\n\tmount(chunk, criteria) {\n\t\tconst { shape, strict, omittable, extensible } = criteria;\n\n\t\tif (!(\"shape\" in criteria)) {\n\t\t\treturn (\"SHAPE_PROPERTY_REQUIRED\");\n\t\t}\n\t\tif (!isPlainObject(shape)) {\n\t\t\treturn (\"SHAPE_PROPERTY_MALFORMED\");\n\t\t}\n\t\tfor (const key of Reflect.ownKeys(shape)) {\n\t\t\tif (!isPlainObject(shape[key])) {\n\t\t\t\treturn (\"SHAPE_PROPERTY_OBJECT_VALUE_MALFORMED\");\n\t\t\t}\n\t\t}\n\t\tif (strict !== undefined && typeof strict !== \"boolean\") {\n\t\t\treturn (\"STRICT_PROPERTY_MALFORMED\");\n\t\t}\n\t\tif (omittable !== undefined) {\n\t\t\tif (isArray(omittable)) {\n\t\t\t\tfor (const item of omittable) {\n\t\t\t\t\tif (typeof item !== \"string\" && typeof item !== \"symbol\") {\n\t\t\t\t\t\treturn (\"OMITTABLE_PROPERTY_ARRAY_ITEM_MALFORMED\");\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (typeof omittable !== \"boolean\") {\n\t\t\t\treturn (\"OMITTABLE_PROPERTY_MALFORMED\");\n\t\t\t}\n\t\t}\n\t\tif (extensible !== undefined) {\n\t\t\tif (isPlainObject(extensible)) {\n\t\t\t\tconst { key, value, min, max } = extensible;\n\n\t\t\t\tif (isPlainObject(key)) {\n\t\t\t\t\tif (key.type !== \"string\" && key.type !== \"symbol\") {\n\t\t\t\t\t\treturn (\"EXPANDABLE__KEY_PROPERTY_MISCONFIGURED\");\n\t\t\t\t\t}\n\t\t\t\t} else if (key !== undefined) {\n\t\t\t\t\treturn (\"EXPANDABLE__KEY_PROPERTY_MALFORMED\");\n\t\t\t\t}\n\t\t\t\tif (value !== undefined && !isPlainObject(value)) {\n\t\t\t\t\treturn (\"EXPANDABLE__VALUE_PROPERTY_MALFORMED\");\n\t\t\t\t}\n\t\t\t\tif (min !== undefined && typeof min !== \"number\") {\n\t\t\t\t\treturn (\"EXPANDABLE__MIN_PROPERTY_MALFORMED\");\n\t\t\t\t}\n\t\t\t\tif (max !== undefined && typeof max !== \"number\") {\n\t\t\t\t\treturn (\"EXPANDABLE__MAX_PROPERTY_MALFORMED\");\n\t\t\t\t}\n\t\t\t\tif (min !== undefined && max !== undefined && min > max) {\n\t\t\t\t\treturn (\"EXPANDABLE__MIN_AND_MAX_PROPERTIES_MISCONFIGURED\");\n\t\t\t\t}\n\t\t\t} else if (typeof extensible !== \"boolean\") {\n\t\t\t\treturn (\"EXPANDABLE_PROPERTY_MALFORMED\");\n\t\t\t}\n\t\t}\n\n\t\tconst resolvedOmittable = omittable ?? false;\n\t\tconst resolvedExtensible = extensible ?? false;\n\t\tconst declaredKeyArray = Reflect.ownKeys(shape);\n\t\tconst unforcedKeyArray = this.getUnforcedKeys(resolvedOmittable, declaredKeyArray);\n\t\tconst enforcedKeyArray = this.getEnforcedKeys(resolvedOmittable, declaredKeyArray);\n\n\t\tObject.assign(criteria, {\n\t\t\tstrict: strict ?? true,\n\t\t\tomittable: resolvedOmittable,\n\t\t\textensible: resolvedExtensible,\n\t\t\tdeclaredKeySet: new Set(declaredKeyArray),\n\t\t\tunforcedKeySet: new Set(unforcedKeyArray),\n\t\t\tenforcedKeySet: new Set(enforcedKeyArray)\n\t\t});\n\n\t\tfor (let i = 0; i < declaredKeyArray.length; i++) {\n\t\t\tconst key = declaredKeyArray[i];\n\t\t\tlet node = shape[key];\n\n\t\t\tif (this.isShorthandShape(node)) {\n\t\t\t\tnode = {\n\t\t\t\t\ttype: \"object\",\n\t\t\t\t\tshape: node\n\t\t\t\t}\n\t\t\t\tshape[key] = node;\n\t\t\t}\n\n\t\t\tchunk.push({\n\t\t\t\tnode: node,\n\t\t\t\tpartPath: {\n\t\t\t\t\texplicit: [\"shape\", key],\n\t\t\t\t\timplicit: [\"&\", key]\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\tif (isPlainObject(resolvedExtensible)) {\n\t\t\tif (resolvedExtensible.key) {\n\t\t\t\tchunk.push({\n\t\t\t\t\tnode: resolvedExtensible.key,\n\t\t\t\t\tpartPath: {\n\t\t\t\t\t\texplicit: [\"extensible\", \"key\"]\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t\tif (resolvedExtensible.value) {\n\t\t\t\tchunk.push({\n\t\t\t\t\tnode: resolvedExtensible.value,\n\t\t\t\t\tpartPath: {\n\t\t\t\t\t\texplicit: [\"extensible\", \"value\"],\n\t\t\t\t\t\timplicit: [\"%\", \"string\", \"symbol\"]\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\treturn (null);\n\t},\n\tcheck(chunk, criteria, data) {\n\t\tif (criteria.strict) {\n\t\t\tif (!isPlainObject(data)) {\n\t\t\t\treturn (\"TYPE_PLAIN_OBJECT_UNSATISFIED\");\n\t\t\t}\n\t\t} else if (!isObject(data)) {\n\t\t\treturn (\"TYPE_OBJECT_UNSATISFIED\");\n\t\t}\n\n\t\tconst {\n\t\t\tshape, extensible,\n\t\t\tdeclaredKeySet, unforcedKeySet, enforcedKeySet\n\t\t} = criteria;\n\n\t\tconst declaredKeyCount = declaredKeySet.size;\n\t\tconst enforcedKeyCount = enforcedKeySet.size;\n\n\t\tconst definedKeyArray = Reflect.ownKeys(data);\n\t\tconst definedKeyCount = definedKeyArray.length;\n\n\t\tif (definedKeyCount < enforcedKeyCount) {\n\t\t\treturn (\"SHAPE_UNSATISFIED\");\n\t\t}\n\t\tif (!extensible && definedKeyCount > declaredKeyCount) {\n\t\t\treturn (\"EXTENSIBLE_UNALLOWED\");\n\t\t}\n\n\t\tif (typeof extensible === \"boolean\") {\n\t\t\tlet enforcedMiss = enforcedKeyCount;\n\t\t\tfor (let i = 0; i < definedKeyCount; i++) {\n\t\t\t\tconst key = definedKeyArray[i];\n\n\t\t\t\tif (enforcedKeySet.has(key)) {\n\t\t\t\t\tenforcedMiss--;\n\t\t\t\t}\n\t\t\t\telse if (enforcedMiss > i) {\n\t\t\t\t\treturn (\"SHAPE_UNSATISFIED\");\n\t\t\t\t}\n\t\t\t\telse if (!unforcedKeySet.has(key)) {\n\t\t\t\t\tif (!extensible) {\n\t\t\t\t\t\treturn (\"EXTENSIBLE_UNALLOWED\");\n\t\t\t\t\t}\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tchunk.push({\n\t\t\t\t\tdata: data[key],\n\t\t\t\t\tnode: shape[key]\n\t\t\t\t});\n\t\t\t}\n\t\t} else {\n\t\t\tconst extendedKeyArray: (string | symbol)[] = [];\n\t\t\tconst { min, max } = extensible;\n\n\t\t\tlet requiredMiss = enforcedKeyCount;\n\t\t\tfor (let i = 0; i < definedKeyCount; i++) {\n\t\t\t\tconst key = definedKeyArray[i];\n\n\t\t\t\tif (enforcedKeySet.has(key)) {\n\t\t\t\t\trequiredMiss--;\n\t\t\t\t}\n\t\t\t\telse if (requiredMiss > i) {\n\t\t\t\t\treturn (\"SHAPE_UNSATISFIED\");\n\t\t\t\t}\n\t\t\t\telse if (!unforcedKeySet.has(key)) {\n\t\t\t\t\textendedKeyArray.push(key);\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tchunk.push({\n\t\t\t\t\tdata: data[key],\n\t\t\t\t\tnode: shape[key]\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tconst extendedKeyCount = extendedKeyArray.length;\n\n\t\t\tif (min !== undefined && extendedKeyCount < min) {\n\t\t\t\treturn (\"EXTENSIBLE_MIN_UNSATISFIED\");\n\t\t\t}\n\t\t\tif (max !== undefined && extendedKeyCount > max) {\n\t\t\t\treturn (\"EXTENSIBLE_MAX_UNSATISFIED\");\n\t\t\t}\n\t\t\tif (extendedKeyCount && (extensible.key || extensible.value)) {\n\t\t\t\tfor (let i = 0; i < extendedKeyCount; i++) {\n\t\t\t\t\tconst key = extendedKeyArray[i];\n\t\t\t\t\t\n\t\t\t\t\tif (extensible.key) {\n\t\t\t\t\t\tchunk.push({\n\t\t\t\t\t\t\tdata: key,\n\t\t\t\t\t\t\tnode: extensible.key\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\tif (extensible.value) {\n\t\t\t\t\t\tchunk.push({\n\t\t\t\t\t\t\tdata: data[key],\n\t\t\t\t\t\t\tnode: extensible.value\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn (null);\n\t}\n}","import type { ArraySetableCriteria, SetableShape, ArrayErrorCodes, ArrayRejectCodes, ArrayCustomMembers } from \"./types\";\nimport type { Format } from \"../types\";\nimport { isPlainObject, isArray } from \"../../../testers\";\n\nexport const ArrayFormat: Format<ArraySetableCriteria, ArrayErrorCodes, ArrayRejectCodes, ArrayCustomMembers> = {\n\ttype: \"array\",\n\terrors: {\n\t\tSHAPE_PROPERTY_REQUIRED:\n            \"The 'shape' property is required.\",\n        SHAPE_PROPERTY_MALFORMED:\n\t\t\t\"The 'shape' property must be of type Array.\",\n\t\tSHAPE_PROPERTY_ARRAY_ITEM_MALFORMED:\n            \"The array items of the 'shape' property must be of type Plain Object or Array.\",\n\t\tEXPANDABLE_PROPERTY_MALFORMED:\n\t\t\t\"The 'extensible' property must be of type Boolean or a Plain Object.\",\n\t\tEXPANDABLE__ITEM_PROPERTY_MALFORMED:\n\t\t\t\"The 'extensible.item' property, must be a criteria node Object.\",\n\t\tEXPANDABLE__MIN_PROPERTY_MALFORMED:\n\t\t\t\"The 'extensible.min' property, must be of type Number.\",\n\t\tEXPANDABLE__MAX_PROPERTY_MALFORMED:\n\t\t\t\"The 'extensible.max' property, must be of type Number.\",\n\t\tEXPANDABLE__MIN_AND_MAX_PROPERTIES_MISCONFIGURED:\n\t\t\t\"The 'extensible.min' property cannot be greater than 'extensible.max' property.\"\n\t},\n\tisShorthandShape(obj): obj is SetableShape {\n\t\treturn (isArray(obj));\n\t},\n\tmount(chunk, criteria) {\n\t\tconst { shape, extensible } = criteria;\n\n\t\tif (!(\"shape\" in criteria)) {\n\t\t\treturn (\"SHAPE_PROPERTY_REQUIRED\");\n\t\t}\n\t\tif (!isArray(shape)) {\n\t\t\treturn (\"SHAPE_PROPERTY_MALFORMED\");\n\t\t}\n\t\tfor (const item of shape) {\n\t\t\tif (!isPlainObject(item) && !isArray(item)) {\n\t\t\t\treturn (\"SHAPE_PROPERTY_ARRAY_ITEM_MALFORMED\");\n\t\t\t}\n\t\t}\n\t\tif (extensible !== undefined) {\n\t\t\tif (isPlainObject(extensible)) {\n\t\t\t\tconst { item, min, max } = extensible;\n\n\t\t\t\tif (item !== undefined && !isPlainObject(item)) {\n\t\t\t\t\treturn (\"EXPANDABLE__ITEM_PROPERTY_MALFORMED\");\n\t\t\t\t}\n\t\t\t\tif (min !== undefined && typeof min !== \"number\") {\n\t\t\t\t\treturn (\"EXPANDABLE__MIN_PROPERTY_MALFORMED\");\n\t\t\t\t}\n\t\t\t\tif (max !== undefined && typeof max !== \"number\") {\n\t\t\t\t\treturn (\"EXPANDABLE__MAX_PROPERTY_MALFORMED\");\n\t\t\t\t}\n\t\t\t\tif (min !== undefined && max !== undefined && min > max) {\n\t\t\t\t\treturn (\"EXPANDABLE__MIN_AND_MAX_PROPERTIES_MISCONFIGURED\");\n\t\t\t\t}\n\t\t\t} else if (typeof extensible !== \"boolean\") {\n\t\t\t\treturn (\"EXPANDABLE_PROPERTY_MALFORMED\");\n\t\t\t}\n\t\t}\n\n\t\tconst resolvedExtensible = extensible ?? false;\n\n\t\tObject.assign(criteria, {\n\t\t\textensible: resolvedExtensible\n\t\t});\n\n\t\tfor (let i = 0; i < shape.length; i++) {\n\t\t\tlet node = shape[i];\n\n\t\t\tif (this.isShorthandShape(node)) {\n\t\t\t\tnode = {\n\t\t\t\t\ttype: \"array\",\n\t\t\t\t\tshape: node\n\t\t\t\t}\n\t\t\t\tshape[i] = node;\n\t\t\t}\n\n\t\t\tchunk.push({\n\t\t\t\tnode: node,\n\t\t\t\tpartPath: {\n\t\t\t\t\texplicit: [\"shape\", i],\n\t\t\t\t\timplicit: [\"&\", i]\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\tif (typeof resolvedExtensible === \"object\") {\n\t\t\tif (resolvedExtensible.item) {\n\t\t\t\tchunk.push({\n\t\t\t\t\tnode: resolvedExtensible.item,\n\t\t\t\t\tpartPath: {\n\t\t\t\t\t\texplicit: [\"extensible\", \"item\"]\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\treturn (null);\n\t},\n\tcheck(chunk, criteria, data) {\n\t\tif (!isArray(data)) {\n\t\t\treturn (\"TYPE_ARRAY_UNSATISFIED\");\n\t\t}\n\n\t\tconst { shape, extensible } = criteria;\n\t\tconst declaredLength = shape.length;\n\t\tconst definedLength = data.length;\n\n\t\tif (definedLength < declaredLength) {\n\t\t\treturn (\"SHAPE_UNSATISFIED\");\n\t\t}\n\t\tif (!extensible && definedLength > declaredLength) {\n\t\t\treturn (\"EXTENSIBLE_UNALLOWED\");\n\t\t}\n\n\t\tfor (let i = 0; i < declaredLength; i++) {\n\t\t\tchunk.push({\n\t\t\t\tdata: data[i],\n\t\t\t\tnode: shape[i]\n\t\t\t});\n\t\t}\n\n\t\tif (definedLength === declaredLength) {\n\t\t\treturn (null);\n\t\t}\n\n\t\tif (typeof extensible === \"object\") {\n\t\t\tconst extendedItemCount = definedLength - declaredLength;\n\t\t\tconst { min, max } = extensible;\n\n\t\t\tif (min !== undefined && extendedItemCount < min) {\n\t\t\t\treturn (\"EXTENSIBLE_MIN_UNSATISFIED\");\n\t\t\t}\n\t\t\tif (max !== undefined && extendedItemCount > max) {\n\t\t\t\treturn (\"EXTENSIBLE_MAX_UNSATISFIED\");\n\t\t\t}\n\n\t\t\tif (extendedItemCount && extensible.item) {\n\t\t\t\tfor (let i = declaredLength; i < definedLength; i++) {\n\t\t\t\t\tchunk.push({\n\t\t\t\t\t\tdata: data[i],\n\t\t\t\t\t\tnode: extensible.item\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn (null);\n\t}\n}","import type { UnionSetableCriteria, UnionErrorCodes, UnionRejectCodes } from \"./types\";\nimport type { CheckerHooks } from \"../../services\";\nimport type { Format } from \"../types\";\nimport { isPlainObject, isArray } from \"../../../testers\";\n\nexport const UnionFormat: Format<UnionSetableCriteria, UnionErrorCodes> = {\n\ttype: \"union\",\n\terrors: {\n\t\tUNION_PROPERTY_REQUIRED:\n            \"The 'union' property is required.\",\n       \tUNION_PROPERTY_MALFORMED:\n\t\t\t\"The 'union' property must be of type Array.\",\n\t\tUNION_PROPERTY_ARRAY_LENGTH_MISCONFIGURED:\n\t\t\t\"The array length of the 'union' must be greater than 0.\",\n        UNION_PROPERTY_ARRAY_ITEM_MALFORMED:\n            \"The array items of the 'union' property must be of type Plain Object.\",\n    },\n\tmount(chunk, criteria) {\n\t\tif (!(\"union\" in criteria)) {\n\t\t\treturn (\"UNION_PROPERTY_REQUIRED\");\n\t\t}\n\n\t\tconst union = criteria.union;\n\t\tconst unionLength = union.length;\n\n\t\tif (!isArray(union)) {\n\t\t\treturn (\"UNION_PROPERTY_MALFORMED\");\n\t\t}\n\t\tif (unionLength < 1) {\n\t\t\treturn (\"UNION_PROPERTY_ARRAY_LENGTH_MISCONFIGURED\");\n\t\t}\n\n\t\tfor (let i = 0; i < unionLength; i++) {\n\t\t\tconst node = union[i];\n\n\t\t\tif (!isPlainObject(node) && !isArray(node)) {\n\t\t\t\treturn (\"UNION_PROPERTY_ARRAY_ITEM_MALFORMED\");\n\t\t\t}\n\n\t\t\tchunk.push({\n\t\t\t\tnode: node,\n\t\t\t\tpartPath: {\n\t\t\t\t\texplicit: [\"union\", i]\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\treturn (null);\n\t},\n\tcheck(chunk, criteria, data) {\n\t\tconst union = criteria.union;\n\t\tconst unionLength = union.length;\n\n\t\tlet rejectCount = 0;\n\t\tconst hooks: CheckerHooks<UnionRejectCodes> = {\n\t\t\tonAccept() {\n\t\t\t\treturn ({\n\t\t\t\t\taction: \"IGNORE\",\n\t\t\t\t\ttarget: \"CHUNK\"\n\t\t\t\t});\n\t\t\t},\n\t\t\tonReject() {\n\t\t\t\tif (++rejectCount === unionLength) {\n\t\t\t\t\treturn ({\n\t\t\t\t\t\taction: \"REJECT\",\n\t\t\t\t\t\tcode: \"UNION_UNSATISFIED\"\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\treturn ({\n\t\t\t\t\taction: \"IGNORE\",\n\t\t\t\t\ttarget: \"BRANCH\"\n\t\t\t\t});\n\t\t\t}\n\t\t};\n\n\t\tfor (let i = 0; i < unionLength; i++) {\n\t\t\tchunk.push({\n\t\t\t\thooks,\n\t\t\t\tdata,\n\t\t\t\tnode: union[i]\n\t\t\t});\n\t\t}\n\n\t\treturn (null);\n\t}\n}\n","import { FunctionFormat } from \"./function/format\";\nimport { BooleanFormat } from \"./boolean/format\";\nimport { SymbolFormat } from \"./symbol/format\";\nimport { NumberFormat } from \"./number/format\";\nimport { StringFormat } from \"./string/format\";\nimport { SimpleFormat } from \"./simple/format\";\nimport { ObjectFormat } from \"./object/format\";\nimport { ArrayFormat } from \"./array/format\";\nimport { UnionFormat } from \"./union/format\";\n\nexport const formatNatives = [\n\tFunctionFormat,\n\tBooleanFormat,\n\tSymbolFormat,\n\tNumberFormat,\n\tStringFormat,\n\tSimpleFormat,\n\tObjectFormat,\n\tArrayFormat,\n\tUnionFormat\n];","import type { SetableCriteria, MountedCriteria, GuardedCriteria, FormatNativeTypes } from \"./formats\";\nimport type { SchemaEvaluateResult, SchemaInfer } from \"./types\";\nimport { EventsManager, FormatsManager } from \"./managers\";\nimport { cloner, mounter, checker } from \"./services\";\nimport { formatNatives } from \"./formats\";\nimport { Issue } from \"../utils\";\nimport { isObject } from \"../testers\";\nimport { SchemaDataRejection } from \"./utils\";\n\n/**\n * The `Schema` class is used to define and validate data structures,\n * ensuring they conform to specified criteria.\n */\nexport class Schema<const T extends SetableCriteria = SetableCriteria<FormatNativeTypes>> {\n\tprivate mountedCriteria: MountedCriteria<T> | undefined;\n\n\tprotected managers = {\n\t\tformats: new FormatsManager(),\n\t\tevents: new EventsManager()\n\t}\n\n\tprotected initiate(criteria: T) {\n\t\tthis.managers.formats.add(formatNatives);\n\t\tconst clonedCriteria = cloner(criteria);\n\t\tthis.mountedCriteria = mounter(this.managers, clonedCriteria);\n\t}\n\n\tconstructor(criteria: T) {\n\t\t// Deferred initiation of criteria if not called directly,\n\t\t// as plugins (or custom extensions) may set up specific\n\t\t// rules and actions for the preparation of the criteria.\n\t\tif (new.target === Schema) this.initiate(criteria);\n\t}\n\n\t/**\n\t * Properties representing the root of the mounted criteria,\n\t * which can be used in other schemas.\n\t */\n\tget criteria(): MountedCriteria<T> {\n\t\tif (!this.mountedCriteria) {\n\t\t\tthrow new Issue(\"SCHEMA\", \"Criteria are not initialized.\");\n\t\t}\n\t\treturn (this.mountedCriteria);\n\t}\n\n\t/**\n\t * Validates the provided data against the schema.\n\t * \n\t * @param data - The data to be validated.\n\t * \n\t * @returns `true` if the value is **valid**, otherwise `false`.  \n\t * This function acts as a **type guard**, ensuring that\n\t * the validated data conforms to `GuardedCriteria<T>`.\n\t */\n\tvalidate(data: unknown): data is GuardedCriteria<MountedCriteria<T>> {\n\t\tconst rejection = checker(this.managers, this.criteria, data);\n\n\t\treturn (!rejection);\n\t}\n\n\t/**\n\t * Evaluates the provided data against the schema.\n\t *\n\t * @param data - The data to be evaluated.\n\t */\n\tevaluate(data: unknown): SchemaEvaluateResult<T> {\n\t\tconst rejection = checker(this.managers, this.criteria, data);\n\t\tif (rejection) {\n\t\t\treturn ({\n\t\t\t\trejection: new SchemaDataRejection({\n\t\t\t\t\tcode: rejection.code,\n\t\t\t\t\tnode: rejection.task.node,\n\t\t\t\t\tnodePath: rejection.task.fullPath\n\t\t\t\t}),\n\t\t\t\tdata: null\n\t\t\t});\n\t\t}\n\n\t\treturn ({ rejection: null, data });\n\t}\n}\n/*\nfunction testf(): (\"ASYNC\" | \"BASIC\"  | undefined) {\n\treturn (\"\" as (\"ASYNC\" | \"BASIC\" | undefined))\n}\n\nconst test = new Schema({\n\ttype: \"string\",\n\tliteral: [\"test\"]\n});\n\ntype Test = SchemaInfer<typeof test>;\n*/\n/*\nconst test = new Schema({\n\ttype: \"object\",\n\n\tshape: {},\n\texpandable: true\n});\nconsole.log(test.evaluate(Array));\n\nconsole.log(isObject(Array));*/\n/*\nconst hslItem = new Schema({\n\ttype: \"object\",\n\tshape: {\n\t\th: { type: \"number\" },\n\t\ts: { type: \"number\" },\n\t\tl: { type: \"number\" }\n\t}\n});\n\nconst test = new Schema({\n\ttype: \"array\",\n\tshape: [],\n\texpandable: {\n\t\tmax: 10,\n\t\titem: hslItem.criteria\n\t}\n});\n\ntype Test = SchemaInfer<typeof test>;\n\nconsole.log(test.evaluate([{ h: 10, s: 10, l: 20 }]));\n*/\n\n\n//type Debug = Test['additional']\n/*\nconst union_object = new Schema({\n\ttype: \"union\",\n\tunion: [{\n\t\ttype: \"object\",\n\t\tshape: {\n\t\t\tfoo: { type: \"string\" },\n\t\t\tbar: {\n\t\t\t\ttype: \"object\",\n\t\t\t\tshape: {\n\t\t\t\t\tfoo: {\n\t\t\t\t\t\tfoo: {\n\t\t\t\t\t\t\ttype: \"object\",\n\t\t\t\t\t\t\tshape: {\n\t\t\t\t\t\t\t\tfoo: { type: \"string\" }\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\tbar: { type: \"string\" }\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}, {\n\t\ttype: \"object\",\n\t\tshape: {\n\t\t\tfoo: {\n\t\t\t\ttype: \"object\",\n\t\t\t\tshape: {\n\t\t\t\t\tfoo: {\n\t\t\t\t\t\ttype: \"object\",\n\t\t\t\t\t\tshape: {\n\t\t\t\t\t\t\tfoo: { type: \"string\" },\n\t\t\t\t\t\t\tbar: {\n\t\t\t\t\t\t\t\ttype: \"object\",\n\t\t\t\t\t\t\t\tshape: {\n\t\t\t\t\t\t\t\t\tfoo: { type: \"string\" }\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t\tbar: { type: \"string\" }\n\t\t}\n\t}]\n});\n*/","import type { SetableCriteria, FormatNativeTypes } from \"./formats\";\nimport type { SchemaPlugin, SchemaInstance } from \"./types\";\nimport { Schema } from \"./schema\";\nimport { Issue } from \"../utils\";\n\ntype MixinPluginsCriteria<\n\tP1C, P1M extends SchemaPlugin,\n\tP2C, P2M extends SchemaPlugin,\n\tP3C, P3M extends SchemaPlugin\n> = (\n\t// CHECK THAT 'P1C' IS NOT UNDEFINED\n\tP1C extends SetableCriteria\n\t\t// CHECK THAT 'P2C' IS NOT UNDEFINED\n\t\t? P2C extends SetableCriteria\n\t\t\t// CHECK THAT 'P3C' IS NOT UNDEFINED\n\t\t\t? P3C extends SetableCriteria\n\t\t\t\t// EXTENDS NECESSARY BECAUSE 'P3C' MAY CONTAIN UNAVAILABLE CRITERIA\n\t\t\t\t? SetableCriteria extends P3C\n\t\t\t\t\t? P1C | P2C | P3C\n\t\t\t\t\t: SetableCriteria<(P1M['formats'] | P2M['formats'] | P3M['formats'])[number]['type'] | FormatNativeTypes>\n\t\t\t\t// EXTENDS NECESSARY BECAUSE 'P2C' MAY CONTAIN UNAVAILABLE CRITERIA\n\t\t\t\t: SetableCriteria extends P2C\n\t\t\t\t\t? P1C | P2C\n\t\t\t\t\t: SetableCriteria<(P1M['formats'] | P2M['formats'])[number]['type'] | FormatNativeTypes>\n\t\t\t// EXTENDS NECESSARY BECAUSE 'P1C' MAY CONTAIN UNAVAILABLE CRITERIA\n\t\t\t: SetableCriteria extends P1C\n\t\t\t\t? P1C\n\t\t\t\t: SetableCriteria<P1M['formats'][number]['type'] | FormatNativeTypes>\n\t\t: never\n);\n\ntype MixinSchemaPlugin<\n\tP1C, P1M extends SchemaPlugin,\n\tP2C, P2M extends SchemaPlugin,\n\tP3C, P3M extends SchemaPlugin\n> =\n\t// CHECK THAT 'P1C' IS NOT UNDEFINED\n\tP1C extends SetableCriteria\n\t\t// CHECK THAT 'P2C' IS NOT UNDEFINED\n\t\t? P2C extends SetableCriteria\n\t\t\t// CHECK THAT 'P3C' IS NOT UNDEFINED\n\t\t\t? P3C extends SetableCriteria\n\t\t\t\t? SchemaInstance<P1C & P2C & P3C> & P1M & P2M & P3M\n\t\t\t\t: SchemaInstance<P1C & P2C> & P1M & P2M\n\t\t\t: SchemaInstance<P1C> & P1M\n\t\t: never;\n\ntype MixinPlugins<\n\tP1C, P1M extends SchemaPlugin,\n\tP2C, P2M extends SchemaPlugin,\n\tP3C, P3M extends SchemaPlugin\n> = new (...args: [MixinPluginsCriteria<P1C, P1M, P2C, P2M, P3C, P3M>]) => Omit<MixinSchemaPlugin<P1C, P1M, P2C, P2M, P3C, P3M>, \"formats\">;\n\nexport function SchemaFactory<\n\tP1C extends SetableCriteria, P1M extends SchemaPlugin,\n\tP2C = unknown, P2M extends SchemaPlugin = never,\n\tP3C = unknown, P3M extends SchemaPlugin = never\n>(\n\tplugin1: (...args: [P1C]) => P1M,\n\tplugin2?: (...args: [P2C]) => P2M,\n\tplugin3?: (...args: [P3C]) => P3M\n): MixinPlugins<P1C, P1M, P2C, P2M, P3C, P3M> {\n\treturn class <const T extends P1C & P2C & P3C> extends Schema<T> {\n\t\tconstructor(criteria: T) {\n\t\t\tsuper(criteria);\n\n\t\t\tconst assignPlugin = (plugin: SchemaPlugin) => {\n\t\t\t\tconst { formats, ...members } = plugin;\n\n\t\t\t\tfor (const key in members) {\n\t\t\t\t\tif (key in this) throw new Issue(\n\t\t\t\t\t\t\"Schema Factory\",\n\t\t\t\t\t\t`Conflictual keys: '${key}'`\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\tObject.assign(this, members);\n\t\t\t\tthis.managers.formats.add(formats);\n\t\t\t};\n\n\t\t\tassignPlugin(plugin1.call(this, criteria));\n\t\t\tif (plugin2) assignPlugin(plugin2.call(this, criteria));\n\t\t\tif (plugin3) assignPlugin(plugin3.call(this, criteria));\n\n\t\t\tthis.initiate(criteria);\n\t\t}\n\t} as any;\n}\n\n/*\nimport type { SetableCriteriaTemplate, GuardedCriteria, Format } from \"./formats\";\nimport { SpecTypesTemplate, FlowTypesTemplate } from \"./formats/types\";\n\nexport interface MongoIdSetableCriteria extends SetableCriteriaTemplate<\"mongoId\"> {\n\tmongoParam: boolean;\n}\n\nexport interface MongoIdSpecTypes extends SpecTypesTemplate<\n\tMongoIdSetableCriteria,\n\t{}\n> {}\n\nexport interface MongoIdFlowTypes extends FlowTypesTemplate<\n\t{},\n\tstring\n> {}\n\ndeclare module './formats/types' {\n\tinterface FormatSpecTypes {\n\t\tmongoId: MongoIdSpecTypes;\n\t}\n\tinterface FormatFlowTypes<T extends SetableCriteria> {\n\t\tmongoId: T extends MongoIdSetableCriteria ? MongoIdFlowTypes : never;\n\t}\n}\n\nconst MongoIdFormat: Format<MongoIdSetableCriteria> = {\n\ttype: \"mongoId\",\n\tdefaultCriteria: {},\n\tmount(chunk, criteria) {\n\t\t\n\t},\n\tcheck(chunk, criteria, value) {\n\t\treturn (null);\n\t},\n}\n\nfunction plugin_A<T extends SetableCriteria>(this: SchemaInstance<T>, definedCriteria: T) {\n\treturn ({\n\t\tformats: [MongoIdFormat],\n\t\tmongo(data: GuardedCriteria<T>) {\n\t\t\t\n\t\t}\n\t} satisfies SchemaPlugin);\n}\n\nconst SchemaA = SchemaFactory(plugin_A);\n\nconst InstanceA = new SchemaA({ type: \"mongoId\", mongoParam: true });\n*/"],"names":["stringTesters"],"mappings":"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"}