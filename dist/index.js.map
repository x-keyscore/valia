{"version":3,"file":"index.js","sources":["../src/utils.ts","../src/schema/managers/formats.ts","../src/schema/managers/events.ts","../src/schema/services/mounter.ts","../src/schema/services/checker.ts","../src/testers/string/isAscii.ts","../src/testers/string/isUuid.ts","../src/testers/utils.ts","../src/testers/string/isDomain.ts","../src/testers/string/isIp.ts","../src/testers/string/isEmail.ts","../src/testers/string/isDataUrl.ts","../src/testers/string/isBase.ts","../src/testers/string/index.ts","../src/tools/object.ts","../src/tools/string.ts","../src/testers/object/object.ts","../src/testers/index.ts","../src/schema/services/cloner.ts","../src/schema/formats/boolean/format.ts","../src/schema/formats/symbol/format.ts","../src/schema/formats/number/format.ts","../src/schema/formats/string/format.ts","../src/schema/formats/simple/format.ts","../src/schema/formats/record/format.ts","../src/schema/formats/struct/format.ts","../src/schema/formats/array/format.ts","../src/schema/formats/tuple/format.ts","../src/schema/formats/union/format.ts","../src/schema/formats/formats.ts","../src/schema/schema.ts","../src/schema/plugin.ts"],"sourcesContent":["export class Issue extends Error {\r\n\tconstructor(context: string, message: string, plugin?: string) {\r\n\t\tsuper(message);\r\n\r\n\t\tconst red = \"\\x1b[31m\", cyan = \"\\x1b[36m\", gray = \"\\x1b[90m\", reset = \"\\x1b[0m\";\r\n\t\tconst emitter = \"Valia\" + (plugin ? \":\" + plugin : \"\");\r\n\t\tconst timestamp = new Date().toISOString();\r\n\r\n\t\tthis.message =\r\n\t\t\t`\\n${red}[Error]${reset} ${cyan}[${emitter}]${reset} ${gray}${timestamp}${reset}` +\r\n\t\t\t`\\nContext: ${context}` +\r\n\t\t\t`\\nMessage: ${message}`;\r\n\t}\r\n}\r\n\r\nexport function memory() {\r\n\tconst memoryUsage = process.memoryUsage();\r\n\tconsole.log(\r\n\t\t`Heap Total: ${memoryUsage.heapTotal / 1024 / 1024} MB\\n` +\r\n\t\t`Heap Used: ${memoryUsage.heapUsed / 1024 / 1024} MB\\n` +\r\n\t\t`External: ${memoryUsage.external / 1024 / 1024} MB\\n` +\r\n\t\t`RSS: ${memoryUsage.rss / 1024 / 1024} MB`\r\n\t);\r\n}","import type { SetableCriteria, Format, FormatNames } from '../formats';\r\nimport { Issue } from '../../utils';\r\n\r\nexport class FormatsManager {\r\n    private store = new Map<string, Format<SetableCriteria>>();\r\n\r\n    constructor() {}\r\n\r\n    add(formats: Format[]) {\r\n        for (const format of formats) {\r\n            this.store.set(format.type, format);\r\n        }\r\n    }\r\n\r\n    get(type: FormatNames): Format {\r\n        const format = this.store.get(type);\r\n        if (!format) throw new Issue(\r\n            \"Formats Manager\",\r\n            \"The format of type '\" + type + \"' is unknown.\"\r\n        );\r\n\r\n        return (format);\r\n    }\r\n}\r\n","import type { Events } from \"./types\";\r\n\r\nexport class EventsManager {\r\n\tlisteners = new Map<keyof Events, ((...args: any[]) => any)[]>();\r\n\r\n\tconstructor() {}\r\n\r\n\ton<K extends keyof Events>(event: K, callback: Events[K]) {\r\n\t\tif (!this.listeners.has(event)) {\r\n\t\t\tthis.listeners.set(event, []);\r\n\t\t}\r\n\t\tthis.listeners.get(event)!.push(callback);\r\n\t}\r\n\r\n\temit<K extends keyof Events>(event: K, ...args: Parameters<Events[K]>) {\r\n\t\tconst callbacks = this.listeners.get(event);\r\n\t\tif (!callbacks) return;\r\n\r\n\t\tfor (const callback of callbacks) {\r\n\t\t\tcallback(...args);\r\n\t\t}\r\n\t}\r\n\r\n\toff<K extends keyof Events>(event: K, callback: Events[K]) {\r\n\t\tconst listeners = this.listeners.get(event);\r\n\t\tif (!listeners) return;\r\n\r\n\t\tconst index = listeners.indexOf(callback);\r\n\t\tif (index !== -1) listeners.splice(index, 1);\r\n\t}\r\n}\r\n\r\n\r\n\r\n","import type { SetableCriteria, MountedCriteria } from \"../formats\";\r\nimport type { MountingTask, MountingChunk } from \"./types\";\r\nimport type { SchemaInstance } from \"../types\";\r\n\r\nexport const nodeSymbol = Symbol(\"node\");\r\n\r\nexport function hasNodeSymbol(obj: object): obj is MountedCriteria {\r\n\treturn (typeof obj === \"object\" && Reflect.has(obj, nodeSymbol));\r\n}\r\n\r\nexport class MountingStack {\r\n\ttasks: MountingTask[] = [];\r\n\r\n\tconstructor(\r\n\t\trootNode: SetableCriteria | MountedCriteria\r\n\t) {\r\n\t\tthis.tasks.push({\r\n\t\t\tnode: rootNode,\r\n\t\t\tpartPaths: { explicit: [], implicit: [] },\r\n\t\t\tfullPaths: { explicit: [], implicit: [] }\r\n\t\t})\r\n\t}\r\n\r\n\tpushChunk(\r\n\t\tsourceTask: MountingTask,\r\n\t\tchunk: MountingChunk\r\n\t) {\r\n\t\tconst { fullPaths } = sourceTask;\r\n\r\n\t\tfor (let i = 0; i < chunk.length; i++) {\r\n\t\t\tconst { node, partPaths } = chunk[i];\r\n\r\n\t\t\tthis.tasks.push({\r\n\t\t\t\tnode,\r\n\t\t\t\tpartPaths,\r\n\t\t\t\tfullPaths: {\r\n\t\t\t\t\texplicit: fullPaths.explicit.concat(partPaths.explicit),\r\n\t\t\t\t\timplicit: fullPaths.implicit.concat(partPaths.implicit)\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport function mounter<T extends SetableCriteria>(\r\n\tmanagers: SchemaInstance['managers'],\r\n\trootNode: SetableCriteria & T\r\n): MountedCriteria<T> {\r\n\tconst { formats, events } = managers;\r\n\tconst stack = new MountingStack(rootNode);\r\n\r\n\twhile (stack.tasks.length) {\r\n\t\tconst currentTask = stack.tasks.pop()!;\r\n\t\tconst { node, partPaths, fullPaths } = currentTask;\r\n\r\n\t\tif (hasNodeSymbol(node)) {\r\n\t\t\tnode[nodeSymbol] = {\r\n\t\t\t\t...node[nodeSymbol],\r\n\t\t\t\tpartPaths\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tconst format = formats.get(node.type);\r\n\t\t\tconst chunk: MountingChunk = [];\r\n\r\n\t\t\tformat.mount?.(chunk, node);\r\n\r\n\t\t\tObject.assign(node, {\r\n\t\t\t\t...format.defaultCriteria,\r\n\t\t\t\t...node,\r\n\t\t\t\t[nodeSymbol]: {\r\n\t\t\t\t\tchildNodes: chunk.map((task) => task.node),\r\n\t\t\t\t\tpartPaths\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tObject.freeze(node);\r\n\r\n\t\t\tif (chunk.length) stack.pushChunk(currentTask, chunk);\r\n\r\n\t\t\tevents.emit(\"NODE_MOUNTED\", node as MountedCriteria, fullPaths);\r\n\t\t}\r\n\t}\r\n\r\n\tevents.emit(\"TREE_MOUNTED\", rootNode as MountedCriteria<T>);\r\n\r\n\treturn (rootNode as MountedCriteria<T>);\r\n};","import type { CheckingTask, CheckingChunk, CheckingReject } from \"./types\";\r\nimport type { MountedCriteria } from \"../formats\";\r\nimport type { SchemaInstance } from \"../types\";\r\nimport { nodeSymbol } from \"./mounter\";\r\n\r\nfunction createReject(\r\n\ttask: CheckingTask,\r\n\tcode: string\r\n): CheckingReject {\r\n\treturn ({\r\n\t\tcode,\r\n\t\tpath: task.fullPaths,\r\n\t\ttype: task.node.type,\r\n\t\tlabel: task.node.label,\r\n\t\tmessage: task.node.message\r\n\t});\r\n}\r\n\r\nexport class CheckingStack {\r\n\ttasks: CheckingTask[] = [];\r\n\r\n\tconstructor(\r\n\t\trootNode: MountedCriteria,\r\n\t\trootData: unknown\r\n\t) {\r\n\t\tthis.tasks.push({\r\n\t\t\tdata: rootData,\r\n\t\t\tnode: rootNode,\r\n\t\t\tfullPaths: { explicit: [], implicit: [] }\r\n\t\t});\r\n\t}\r\n\r\n\tpushChunk(\r\n\t\tsourceTask: CheckingTask,\r\n\t\tchunk: CheckingChunk\r\n\t) {\r\n\t\tfor (let i = 0; i < chunk.length; i++) {\r\n\t\t\tconst currentTask = chunk[i];\r\n\t\t\tconst partPaths = currentTask.node[nodeSymbol].partPaths;\r\n\t\t\tlet stackHooks = sourceTask.stackHooks;\r\n\r\n\t\t\tif (currentTask.hooks) {\r\n\t\t\t\tconst hooks = {\r\n\t\t\t\t\towner: sourceTask,\r\n\t\t\t\t\tindex: {\r\n\t\t\t\t\t\tchunk: this.tasks.length - i,\r\n\t\t\t\t\t\tbranch: this.tasks.length\r\n\t\t\t\t\t},\r\n\t\t\t\t\t...currentTask.hooks\r\n\t\t\t\t}\r\n\r\n\t\t\t\tstackHooks = stackHooks ? stackHooks.concat(hooks) : [hooks];\r\n\t\t\t}\r\n\r\n\t\t\tthis.tasks.push({\r\n\t\t\t\tdata: currentTask.data,\r\n\t\t\t\tnode: currentTask.node,\r\n\t\t\t\tfullPaths: {\r\n\t\t\t\t\texplicit: sourceTask.fullPaths.explicit.concat(partPaths.explicit),\r\n\t\t\t\t\timplicit: sourceTask.fullPaths.implicit.concat(partPaths.implicit)\r\n\t\t\t\t},\r\n\t\t\t\tstackHooks\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\tplayHooks(\r\n\t\tcurrentTask: CheckingTask,\r\n\t\treject: CheckingReject | null\r\n\t) {\r\n\t\tconst stackHooks = currentTask.stackHooks;\r\n\t\tif (!stackHooks) return (null);\r\n\r\n\t\tconst lastHooks = stackHooks[stackHooks.length - 1];\r\n\t\tif (!reject && lastHooks.index.branch !== this.tasks.length) {\r\n\t\t\treturn (null);\r\n\t\t}\r\n\r\n\t\tfor (let i = stackHooks.length - 1; i >= 0; i--) {\r\n\t\t\tconst hooks = stackHooks[i];\r\n\r\n\t\t\tconst claim = reject ? hooks.onReject(reject) : hooks.onAccept();\r\n\r\n\t\t\tswitch (claim.action) {\r\n\t\t\t\tcase \"DEFAULT\":\r\n\t\t\t\t\tthis.tasks.length = hooks.index.branch;\r\n\t\t\t\t\tif (!reject) return (null);\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\tcase \"REJECT\":\r\n\t\t\t\t\tthis.tasks.length = hooks.index.branch;\r\n\t\t\t\t\treject = createReject(hooks.owner, claim.code);\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\tcase \"IGNORE\":\r\n\t\t\t\t\tif (claim?.target === \"CHUNK\") {\r\n\t\t\t\t\t\tthis.tasks.length = hooks.index.chunk;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthis.tasks.length = hooks.index.branch;\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn (null);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn (reject);\r\n\t}\r\n}\r\n\r\nexport function checker(\r\n\tmanagers: SchemaInstance['managers'],\r\n\trootNode: MountedCriteria,\r\n\trootData: unknown\r\n): CheckingReject | null {\r\n\tconst { formats, events } = managers;\r\n\tconst stack = new CheckingStack(rootNode, rootData);\r\n\r\n\tlet reject = null;\r\n\twhile (stack.tasks.length) {\r\n\t\tconst currentTask = stack.tasks.pop()!;\r\n\t\tconst { data, node, stackHooks } = currentTask;\r\n\t\tconst chunk: CheckingChunk = [];\r\n\r\n\t\tlet code = null;\r\n\t\tif (!(node.nullish && data == null)) {\r\n\t\t\tconst format = formats.get(node.type);\r\n\t\t\tcode = format.check(chunk, node, data);\r\n\t\t}\r\n\r\n\t\tif (code) reject = createReject(currentTask, code);\r\n\t\telse if (chunk.length) stack.pushChunk(currentTask, chunk);\r\n\t\tif (stackHooks) reject = stack.playHooks(currentTask, reject);\r\n\r\n\t\tif (reject) break;\r\n\t}\r\n\r\n\tevents.emit(\"DATA_CHECKED\", rootNode, rootData, reject);\r\n\r\n\treturn (reject);\r\n};","interface IsAsciiConfig {\r\n    /** **Default:** `false` */\r\n\tonlyPrintable?: boolean;\r\n}\r\n\r\n/**\r\n * Check if all characters of the string are in the ASCII table (%d0-%d127).\r\n * \r\n * If you enable `onlyPrintable` valid characters will be limited to\r\n * printable characters from the ASCII table (%32-%d126).\r\n * \r\n * Empty returns `false`.\r\n */\r\nexport function isAscii(str: string, config?: IsAsciiConfig): boolean {\r\n    if (config?.onlyPrintable) return (RegExp(\"^[\\\\x20-\\\\x7E]+$\").test(str))\r\n    return (RegExp(\"^[\\\\x00-\\\\x7F]+$\").test(str));\r\n}","interface IsUuidParams {\r\n\t/** **Default:** All version validate */\r\n\tversion?: 1|2|3|4|5|6|7;\r\n}\r\n\r\nconst extractUuidVersionRegex = new RegExp(\"^[0-9A-F]{8}-[0-9A-F]{4}-([1-7])[0-9A-F]{3}-[89AB][0-9A-F]{3}-[0-9A-F]{12}$\", \"i\");\r\n\r\n/**\r\n * **Standard :** RFC 9562\r\n * \r\n * @see https://datatracker.ietf.org/doc/html/rfc9562#section-4\r\n * \r\n * @version 1.0.0\r\n */\r\nexport function isUuid(str: string, params?: IsUuidParams): boolean {\r\n\tconst extracted = extractUuidVersionRegex.exec(str);\r\n\tif (!extracted || !extracted[1]) return (false);\r\n\tif (!params?.version || (extracted[1].codePointAt(0)! - 48) === params?.version) return (true);\r\n\r\n\treturn (false);\r\n}","export function lazy<O extends object>(callback: () => O): () => O {\r\n\tlet ref: WeakRef<O> | undefined | null = null, val: O | null = null;\r\n\r\n\t// Test 'WeakRef' support\r\n\tif (typeof WeakRef !== \"undefined\") {\r\n\t\tref = undefined;\r\n\t}\r\n\r\n    return () => {\r\n\t\tif (ref !== null) {\r\n\t\t\tconst temp = ref?.deref();\r\n\t\t\tif (!temp) {\r\n\t\t\t\tref = new WeakRef(callback());\r\n\t\t\t\treturn (ref.deref()!);\r\n\t\t\t}\r\n\t\t\treturn (temp);\r\n\t\t}\r\n\t\telse if (val === null) {\r\n\t\t\tval = callback();\r\n\t\t}\r\n        return (val);\r\n    };\r\n}\r\n\r\n/**\r\n * @see https://www.garykessler.net/library/file_sigs.html\r\n * @see https://en.wikipedia.org/wiki/List_of_file_signatures\r\n */\r\nconst signatures = [\r\n\t// Image\r\n\t{ ext: \"png\" as const, offset: 0, flags: [\"89504E470D0A1A0A\"]},\r\n\t{ ext: \"jpg\" as const, offset: 0, flags: [\"FFD8FFE0\"]},\r\n\t{ ext: \"jp2\" as const, offset: 0, flags: [\"0000000C6A5020200D0A870A\"]},\r\n\t{ ext: \"gif\" as const, offset: 0, flags: [\"474946383761\", \"474946383961\"]},\r\n\t{ ext: \"webp\" as const, offset: 0, flags: [\"52494646????????57454250\"]},\r\n\t// Audio\r\n\t{ ext: \"mp3\" as const, offset: 0, flags: [\"FFFB\", \"FFF3\", \"FFF2\", \"494433\"]},\r\n\t{ ext: \"mp4\" as const, offset: 4, flags: [\"6674797069736F6D\", \"667479704D534E56\"]},\r\n\t// 3D\r\n\t{ ext: \"stl\" as const, offset: 4, flags: [\"736F6C6964\"]}\r\n];\r\n\r\nexport function hasFileSignature(hex: string, extensions: Array<(typeof signatures)[number]['ext']>) {\r\n\tfor (let i = 0; i < extensions.length; i++) {\r\n\t\tconst { offset, flags } = signatures.find(({ ext }) => ext === extensions[i])!;\r\n\r\n\t\tfor (let i = 0; i < flags.length; i++) {\r\n\t\t\tconst flag = flags[i];\r\n\t\t\tlet j = (flag.length - 1) + offset;\r\n\r\n\t\t\tif (j >= hex.length) continue;\r\n\t\t\twhile (j >= 0) {\r\n\t\t\t\tif (flag[j] !== \"?\" && hex[j] !== flag[j]) break;\r\n\t\t\t\tj--;\r\n\t\t\t}\r\n\t\t\tif (j === 0) return (true);\r\n\t\t}\r\n\t}\r\n}","/**\r\n * Composition :\r\n * * `letter = %d65-%d90 / %d97-%d122` A-Z / a-z\r\n * * `digit = %x30-39` 0-9\r\n * * `label = letter [*(digit / letter / \"-\") digit / letter]`\r\n * * `domain = label *(\".\" label)`\r\n */\r\nconst domainRegex = new RegExp(\"^[A-Za-z](?:[A-Za-z0-9-]*[A-Za-z0-9])?(?:\\\\.[A-Za-z](?:[A-Za-z0-9-]*[A-Za-z0-9])?)*$\");\r\n\r\n/**\r\n * **Standard :** RFC 1035\r\n * \r\n * @see https://datatracker.ietf.org/doc/html/rfc1035#section-2.3.1\r\n * \r\n * **Follows :**\r\n * `<domain>`\r\n * \r\n * @version 1.0.0-beta\r\n */\r\nexport function isDomain(str: string, params?: undefined): boolean {\r\n\treturn (domainRegex.test(str));\r\n}\r\n","/**\r\n * IPV4\r\n * \r\n * Composition :\r\n * * \"DIGIT = %x30-39\" 0-9.\r\n * * \"dec-octet = 1*3DIGIT\" Representing a decimal integer value in the range 0 through 255.\r\n * * \"prefix = 1*2DIGIT\" Representing a decimal integer value in the range 0 through 32.\r\n * * \"IPv4 = dec-octet 3(\".\" dec-octet) [\"/\" prefix]\"\r\n * \r\n * IPV6\r\n * \r\n * Composition :\r\n * * \"DIGIT = %x30-39\" 0-9.\r\n * * \"HEXDIG = DIGIT / A-F / a-f\"\r\n * * \"IPv6-full = 1*4HEXDIG 7(\":\" 1*4HEXDIG)\"\r\n * * \"IPv6-comp = [1*4HEXDIG *5(\":\" 1*4HEXDIG)] \"::\" [1*4HEXDIG *5(\":\" 1*4HEXDIG)]\"\r\n * * \"IPv6v4-full = 1*4HEXDIG 5(\":\" 1*4HEXDIG) \":\" IPv4\"\r\n * * \"IPv6v4-comp = [1*4HEXDIG *3(\":\" 1*4HEXDIG)] \"::\" [1*4HEXDIG *3(\":\" 1*4HEXDIG) \":\"] IPv4\"\r\n * * \"prefix = 1*3DIGIT\" Representing a decimal integer value in the range 0 through 128.\r\n * * \"IPv6 = (IPv6-full / IPv6-comp / IPv6v4-full / IPv6v4-comp) [\"/\" prefix]\"\r\n */\r\n\r\nimport { lazy } from \"../utils\";\r\n\r\ninterface IsIpParams {\r\n\t/**\r\n\t * Must have a prefix at the end of the IP address indicating the subnet mask\r\n\t * (e.g., `192.168.0.1/22`).\r\n\t * \r\n\t * **Default:** `false`\r\n\t */\r\n\tprefix?: boolean;\r\n}\r\n\r\nconst ipV4Seg = \"(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\";\r\nexport const ipV4Pattern = `(?:${ipV4Seg}\\\\.){3}${ipV4Seg}`;\r\n\r\nconst ipV4SimpleRegex = new RegExp(`^${ipV4Pattern}$`);\r\nconst ipV4PrefixRegex = lazy(() =>new RegExp(`^${ipV4Pattern}/(3[0-2]|[12]?[0-9])$`));\r\n\r\nconst ipV6Seg = \"(?:[0-9a-fA-F]{1,4})\";\r\nexport const IPv6Pattern = \"(?:\" +\r\n\t`(?:${ipV6Seg}:){7}(?:${ipV6Seg}|:)|` +\r\n\t`(?:${ipV6Seg}:){6}(?:${ipV4Pattern}|:${ipV6Seg}|:)|` +\r\n\t`(?:${ipV6Seg}:){5}(?::${ipV4Pattern}|(?::${ipV6Seg}){1,2}|:)|` +\r\n\t`(?:${ipV6Seg}:){4}(?:(?::${ipV6Seg}){0,1}:${ipV4Pattern}|(?::${ipV6Seg}){1,3}|:)|` +\r\n\t`(?:${ipV6Seg}:){3}(?:(?::${ipV6Seg}){0,2}:${ipV4Pattern}|(?::${ipV6Seg}){1,4}|:)|` +\r\n\t`(?:${ipV6Seg}:){2}(?:(?::${ipV6Seg}){0,3}:${ipV4Pattern}|(?::${ipV6Seg}){1,5}|:)|` +\r\n\t`(?:${ipV6Seg}:){1}(?:(?::${ipV6Seg}){0,4}:${ipV4Pattern}|(?::${ipV6Seg}){1,6}|:)|` +\r\n\t`(?::(?:(?::${ipV6Seg}){0,5}:${ipV4Pattern}|(?::${ipV6Seg}){1,7}|:)))`;\r\n\r\nconst ipV6SimpleRegex = new RegExp(`^${IPv6Pattern}$`);\r\nconst ipV6PrefixRegex = lazy(() =>new RegExp(`^${IPv6Pattern}/(12[0-8]|1[01][0-9]|[1-9]?[0-9])$`));\r\n\r\n\r\n/**\r\n * **Standard:** No standard\r\n * \r\n * @version 1.0.0\r\n */\r\nexport function isIp(str: string, params?: IsIpParams): boolean {\r\n\tif (!params?.prefix && ipV4SimpleRegex.test(str)) return (true);\r\n\telse if (params?.prefix && ipV4PrefixRegex().test(str)) return (true);\r\n\r\n\tif (!params?.prefix && ipV6SimpleRegex.test(str)) return (true);\r\n\telse if (params?.prefix && ipV6PrefixRegex().test(str)) return (true);\r\n\r\n\treturn (false);\r\n}\r\n\r\n/**\r\n * **Standard:** No standard\r\n * \r\n * @version 1.0.0\r\n */\r\nexport function isIpV4(str: string, params?: IsIpParams): boolean {\r\n\tif (!params?.prefix && ipV4SimpleRegex.test(str)) return (true);\r\n\telse if (params?.prefix && ipV4PrefixRegex().test(str)) return (true);\r\n\r\n\treturn (false);\r\n}\r\n\r\n/**\r\n * **Standard:** No standard\r\n * \r\n * @version 1.0.0\r\n */\r\nexport function isIpV6(str: string, params?: IsIpParams): boolean {\r\n\tif (!params?.prefix && ipV4SimpleRegex.test(str)) return (true);\r\n\telse if (params?.prefix && ipV4PrefixRegex().test(str)) return (true);\r\n\r\n\treturn (false);\r\n}","import { lazy } from \"../utils\";\r\nimport { isDomain } from \"./isDomain\";\r\nimport { ipV4Pattern, IPv6Pattern } from \"./isIp\";\r\n\r\ninterface IsEmailParams {\r\n\t/** **Default:** `false` */\r\n\tallowQuotedString?: boolean;\r\n\t/** **Default:** `false` */\r\n\tallowAddressLiteral?: boolean;\r\n\t/** **Default:** `false` */\r\n\tallowGeneralAddressLiteral?: boolean;\r\n}\r\n\r\nconst dotStringPattern = \"(?:[-!=?A-B\\\\x23-\\\\x27\\\\x2A-\\\\x2B\\\\x2F-\\\\x39\\\\x5E-\\\\x7E]+(?:\\\\.[-!=?A-B\\\\x23-\\\\x27\\\\x2A-\\\\x2B\\\\x2F-\\\\x39\\\\x5E-\\\\x7E]+)*)\";\r\nconst quotedStringPattern = \"(?:\\\"(?:[\\\\x20-\\\\x21\\\\x23-\\\\x5B\\\\x5D-\\\\x7E]|\\\\\\\\[\\\\x20-\\\\x7E])*\\\")\";\r\n\r\nconst localPartSimpleRegex = new RegExp(`^${dotStringPattern}$`);\r\nconst localPartQuotedRegex = lazy(() => new RegExp(`^(?:${dotStringPattern}|${quotedStringPattern})$`));\r\n\r\nconst domainPartAddrLiteralRegex = lazy(() => new RegExp(`^\\\\[(?:IPv6:${IPv6Pattern}|${ipV4Pattern})\\\\]$`));\r\nconst domainPartGeneralAddrLiteralRegex = lazy(() => new RegExp(`(?:[a-zA-Z0-9-]*[a-zA-Z0-9]+:[\\\\x21-\\\\x5A\\\\x5E-\\\\x7E]+)`));\r\n\r\nfunction splitEmail(str: string) {\r\n\tconst arrayLength = str.length;\r\n\r\n\t// FIND SYMBOL INDEX\r\n\t// /!\\ Starts from the end because the local part allows \"@\" in quoted strings.\r\n\tlet i = arrayLength - 1;\r\n\twhile (i >= 0 && str[i] !== \"@\") {\r\n\t\ti--;\r\n\t}\r\n\r\n\t// CHECK SYMBOL CHAR\r\n\tif (str[i] !== \"@\") return (null);\r\n\r\n\tconst symbolIndex = i;\r\n\r\n\t// CHECK LOCAL LENGTH\r\n\tif (!symbolIndex) return (null);\r\n\r\n\t// CHECK DOMAIN LENGTH\r\n\t/** @see https://datatracker.ietf.org/doc/html/rfc5321#section-4.5.3.1.2 */\r\n\tconst domainLength = arrayLength - (symbolIndex + 1);\r\n\tif (!domainLength || domainLength > 255) return (null);\r\n\r\n\treturn {\r\n\t\tlocal: str.slice(0, symbolIndex),\r\n\t\tdomain: str.slice(symbolIndex + 1, arrayLength)\r\n\t};\r\n}\r\n\r\nfunction isValidLocalPart(str: string, params?: IsEmailParams): boolean {\r\n\tif (localPartSimpleRegex.test(str)) {\r\n\t\treturn (true);\r\n\t}\r\n\telse if (params?.allowQuotedString && localPartQuotedRegex().test(str)) {\r\n\t\treturn (true);\r\n\t}\r\n\r\n\treturn (false);\r\n}\r\n\r\nfunction isValidDomainPart(str: string, params?: IsEmailParams): boolean {\r\n\tif (isDomain(str)) return (true);\r\n\r\n\tif (params?.allowAddressLiteral\r\n\t\t&& domainPartAddrLiteralRegex().test(str)) return (true);\r\n\tif (params?.allowGeneralAddressLiteral\r\n\t\t&& domainPartGeneralAddrLiteralRegex().test(str)) return (true);\r\n\r\n\treturn (false);\r\n}\r\n\r\n/**\r\n * **Standard :** RFC 5321\r\n * \r\n *  @see https://datatracker.ietf.org/doc/html/rfc5321#section-4.1.2\r\n * \r\n * **Follows :**\r\n * `Mailbox`\r\n * \r\n * @version 1.1.0-beta\r\n */\r\nexport function isEmail(str: string, params?: IsEmailParams): boolean {\r\n\tconst parts = splitEmail(str);\r\n\tif (!parts) return (false);\r\n\r\n\tif (\r\n\t\tisValidLocalPart(parts.local, params)\r\n\t\t&& isValidDomainPart(parts.domain, params)\r\n\t) return (true);\r\n\r\n\treturn (false);\r\n}","import { LooseAutocomplete } from \"../../types\";\r\nimport { lazy } from \"../utils\";\r\n\r\ninterface ParseDataUrlResult {\r\n\tdata: string;\r\n\ttype: string;\r\n\tsubtype: string;\r\n\tisBase64: boolean;\r\n\tparameters: { name: string, value: string }[];\r\n}\r\n\r\ninterface IsDataUrlConfig {\r\n\t/** \r\n\t * Specifies the type of media.\r\n\t * \r\n\t * @see http://www.iana.org/assignments/media-types/\r\n\t */\r\n\ttype: LooseAutocomplete<\"text\" | \"image\" | \"audio\" | \"video\" | \"application\" | \"message\" | \"multipart\">[];\r\n\t/**\r\n\t * Specifies the sub-type of media.\r\n\t * \r\n\t * @see http://www.iana.org/assignments/media-types/\r\n\t */\r\n\tsubtype: string[];\r\n}\r\n//https://datatracker.ietf.org/doc/html/rfc9110#section-8.3.1\r\n\r\n\r\n/** https://datatracker.ietf.org/doc/html/rfc2045#section-5.1 */\r\nconst tokenPattern = \"[a-zA-Z0-9!#$%&'*+.^_`{|}~-]+\";\r\n\r\n/** https://datatracker.ietf.org/doc/html/rfc2045#section-5.1 */\r\nconst xTokenPattern = `(?:X-|x-)${tokenPattern}`;\r\n\r\n/** https://datatracker.ietf.org/doc/html/rfc6838#section-4.2 */\r\nconst ianaTokenPattern = \"(?:[a-zA-Z0-9](?:[+]?[a-zA-Z0-9!#$&^_-][.]?){0,126})\";\r\n\r\nconst dataPattern = \"(?:[a-zA-Z0-9-;/?:@&=+$,_.!~*'()]|%[a-zA-Z0-9]{2})*\";\r\n\r\nconst quotedStringPattern = \"\\\"[a-zA-Z0-9!#$%&'()*+,./:;<=>?@\\[\\\\\\]^_`{|}~-]+\\\"\";\r\n\r\nconst dataRegex = new RegExp(`^${dataPattern}$`);\r\nconst typeRegex = new RegExp(`^(?:${tokenPattern}|${xTokenPattern})$`);\r\nconst subtypeRegex = new RegExp(`^(?:${tokenPattern}|${xTokenPattern}|${ianaTokenPattern})$`);\r\nconst parameterNameRegex = new RegExp(`^${tokenPattern}$`);\r\nconst parameterValueRegex = new RegExp(`^(?:${tokenPattern}|${quotedStringPattern})$`);\r\n\r\nfunction parseDataUrl(str: string): ParseDataUrlResult | null {\r\n\tconst result: ParseDataUrlResult = {\r\n\t\tdata: \"\",\r\n\t\ttype: \"\",\r\n\t\tsubtype: \"\",\r\n\t\tparameters: [],\r\n\t\tisBase64: false\r\n\t};\r\n\tlet i = 0;\r\n\r\n\tif (!str.startsWith(\"data:\")) return (null);\r\n\ti = 5;\r\n\r\n\tif (str[i] !== \",\" && str[i] !== \";\") {\r\n\t\t// EXTRACT TYPE\r\n\t\tconst startOfType = i;\r\n\t\twhile (str[i] && str[i] !== \"/\") i++;\r\n\t\tif (!str[i]) return (null);\r\n\t\tconst endOfType = i;\r\n\t\tresult.type = str.slice(startOfType, endOfType);\r\n\t\tif (!typeRegex.test(result.type)) return (null);\r\n\r\n\t\t// EXTRACT SUBTYPE\r\n\t\tconst startOfSubtype = ++i;\r\n\t\twhile (str[i] && str[i] !== \";\" && str[i] !== \",\") i++;\r\n\t\tif (!str[i]) return (null);\r\n\t\tconst endOfSubtype = i;\r\n\t\tresult.subtype = str.slice(startOfSubtype, endOfSubtype);\r\n\t\tif (!subtypeRegex.test(result.subtype)) return (null);\r\n\t}\r\n\r\n\twhile (str[i] && str[i] === \";\") {\r\n\t\t// EXTRACT BASE64 FLAG\r\n\t\tif (str.startsWith(\";base64,\", i)) {\r\n\t\t\tresult.isBase64 = true;\r\n\t\t\ti += 8;\r\n\t\t\tbreak;\r\n\t\t}\r\n\r\n\t\t// EXTRACT PARAMETER NAME\r\n\t\tconst startOfName = ++i;\r\n\t\twhile (str[i] && str[i] !== \"=\") i++;\r\n\t\tif (!str[i]) return (null);\r\n\t\tconst endOfName = i;\r\n\r\n\t\t// EXTRACT PARAMETER VALUE\r\n\t\tconst startOfValue = ++i;\r\n\t\tif (str[startOfValue] === \"\\\"\") {\r\n\t\t\twhile (str[i] && !(str[i - 1] === \"\\\"\" && (str[i] === \";\" || str[i] === \",\"))) i++;\r\n\t\t}\r\n\t\telse {\r\n\t\t\twhile (str[i] && str[i] !== \";\" && str[i] !== \",\") i++;\r\n\t\t}\r\n\t\tif (!str[i]) return (null);\r\n\t\tconst endOfValue = i;\r\n\r\n\t\tconst parameter = {\r\n\t\t\tname: str.slice(startOfName, endOfName),\r\n\t\t\tvalue: str.slice(startOfValue, endOfValue)\r\n\t\t}\r\n\r\n\t\tif (!parameterNameRegex.test(parameter.name)) return (null);\r\n\t\tif (!parameterValueRegex.test(parameter.value)) return (null);\r\n\r\n\t\tresult.parameters.push(parameter);\r\n\t}\r\n\tif (!str[i]) return (null);\r\n\r\n\t// EXTRACT DATA\r\n\tresult.data = str.slice(i);\r\n\tif (!dataRegex.test(result.data)) return (null);\r\n\r\n\treturn (result);\r\n}\r\n\r\nconsole.log(parseDataUrl(\"data:test/subtest;attr=V;base64;base64,poule\"))\r\n\r\n/**\r\n * **Standard :** RFC 2397\r\n * \r\n *  @see https://datatracker.ietf.org/doc/html/rfc2397#section-3\r\n * \r\n * **Follows :**\r\n * `dataurl`\r\n * \r\n * @version 2.0.0-beta\r\n */\r\nexport function isDataUrl(str: string, config?: IsDataUrlConfig): boolean {\r\n\t/*\r\n\tif (!dataurlRegex().test(str)) return (false);\r\n\r\n\tif (config?.type || config?.subtype) {\r\n\t\tconst [_, type, subtype] = new RegExp(\"^data:(.*?)\\/(.*?)[;|,]\").exec(str) as unknown as [string, string, string];\r\n\r\n\t\tif (config?.type && !config?.type.includes(type)) return (false);\r\n\t\tif (config?.subtype && !config?.subtype.includes(subtype)) return (false);\r\n\t}*/\r\n\treturn (true);\r\n}","import { Issue } from \"../../utils\";\r\nimport { lazy } from \"../utils\";\r\n\r\nconst base16Regex = new RegExp(\"^(?:[A-F0-9]{2})*$\");\r\n\r\nconst base32Regex = new RegExp(\"^(?:[A-Z2-7]{8})*(?:[A-Z2-7]{2}[=]{6}|[A-Z2-7]{4}[=]{4}|[A-Z2-7]{5}[=]{3}|[A-Z2-7]{6}[=]{2}|[A-Z2-7]{7}[=]{1})?$\");\r\nconst base32HexRegex = lazy(() => new RegExp(\"^(?:[0-9A-V]{8})*(?:[0-9A-V]{2}[=]{6}|[0-9A-V]{4}[=]{4}|[0-9A-V]{5}[=]{3}|[0-9A-V]{6}[=]{2}|[0-9A-V]{7}[=]{1})?$\"));\r\n\r\nconst base64Regex = new RegExp(\"^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}[=]{2}|[A-Za-z0-9+/]{3}[=]{1})?$\");\r\nconst base64UrlRegex = lazy(() => new RegExp(\"^(?:[A-Za-z0-9_-]{4})*(?:[A-Za-z0-9_-]{2}[=]{2}|[A-Za-z0-9_-]{3}[=]{1})?$\"));\r\n\r\n/**\r\n * **Standard :** RFC 4648\r\n * \r\n * @see https://datatracker.ietf.org/doc/html/rfc4648#section-4\r\n * \r\n * @version 1.0.0\r\n */\r\nexport function isBase64(str: string, params?: undefined): boolean {\r\n\tif (typeof str !== \"string\") new Issue(\"Parameters\", \"'str' must be of type string.\");\r\n\treturn (str.length % 4 == 0 && base64Regex.test(str));\r\n}\r\n\r\n/**\r\n * **Standard :** RFC 4648\r\n * \r\n * @see https://datatracker.ietf.org/doc/html/rfc4648#section-5\r\n * \r\n * @version 1.0.0\r\n */\r\nexport function isBase64Url(str: string, params?: undefined): boolean {\r\n\tif (typeof str !== \"string\") new Issue(\"Parameters\", \"'str' must be of type string.\");\r\n\treturn (str.length % 4 === 0 && base64UrlRegex().test(str));\r\n}\r\n\r\n/**\r\n * **Standard :** RFC 4648\r\n * \r\n * @see https://datatracker.ietf.org/doc/html/rfc4648#section-6\r\n * \r\n * @version 1.0.0\r\n */\r\nexport function isBase32(str: string, params?: undefined): boolean {\r\n\tif (typeof str !== \"string\") new Issue(\"Parameters\", \"'str' must be of type string.\");\r\n\treturn (str.length % 8 === 0 && base32Regex.test(str));\r\n}\r\n\r\n/**\r\n * **Standard :** RFC 4648\r\n * \r\n * @see https://datatracker.ietf.org/doc/html/rfc4648#section-7\r\n * \r\n * @version 1.0.0\r\n */\r\nexport function isBase32Hex(str: string, params?: undefined): boolean {\r\n\tif (typeof str !== \"string\") new Issue(\"Parameters\", \"'str' must be of type string.\");\r\n\treturn (str.length % 8 === 0 && base32HexRegex().test(str));\r\n}\r\n\r\n/**\r\n * **Standard :** RFC 4648\r\n * \r\n * @see https://datatracker.ietf.org/doc/html/rfc4648#section-8\r\n * \r\n * @version 1.0.0\r\n */\r\nexport function isBase16(str: string, params?: undefined): boolean {\r\n\tif (typeof str !== \"string\") new Issue(\"Parameters\", \"'str' must be of type string.\");\r\n\treturn (str.length % 2 === 0 && base16Regex.test(str));\r\n}","export { isAscii } from \"./isAscii\";\r\nexport { isUuid } from \"./isUuid\";\r\nexport { isEmail } from \"./isEmail\";\r\nexport { isDomain } from \"./isDomain\";\r\nexport { isDataUrl } from \"./isDataUrl\";\r\nexport { isIp, isIpV4, isIpV6 } from \"./isIp\";\r\nexport { isBase16, isBase32, isBase32Hex, isBase64, isBase64Url } from \"./isBase\";\r\n\r\n/**\r\n * Helper:\r\n * `!\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`abcdefghijklmnopqrstuvwxyz{|}~`\r\n */","import type { LooseAutocomplete } from \"../types\";\r\nimport type { StandardTags } from \"./types\";\r\n\r\nexport function hasTag(target: unknown, tag: LooseAutocomplete<StandardTags>): boolean {\r\n\treturn (Object.prototype.toString.call(target).slice(8, -1) === tag);\r\n}","import { Issue } from \"../utils\";\r\n\r\nfunction convertBase16ToBase64(input: string, base64: string, padding: boolean) {\r\n\tconst totalChunksLength = Math.floor(input.length / 6) * 6;\r\n\tlet output = \"\";\r\n\tlet i = 0;\r\n\r\n\twhile (i < totalChunksLength) {\r\n\t\tconst dec = parseInt(input.slice(i, i + 6), 16);\r\n\t\toutput += (base64[((dec >> 18) & 63)]\r\n\t\t\t+ base64[((dec >> 12) & 63)] \r\n\t\t\t+ base64[((dec >> 6) & 63)]\r\n\t\t\t+ base64[(dec & 63)]);\r\n\t\ti += 6;\r\n\t}\r\n\r\n\tif (i < input.length) {\r\n\t\tconst restChunk = input.slice(i, i + 6);\r\n\t\t// 143016576 = 00100 01000 01100 10000 10100 00000 = 4 8 12 16 20 0\r\n\t\tconst leftShift = (143016576 >> (restChunk.length * 5)) & 31;\r\n\t\tconst dec = parseInt(restChunk, 16) << leftShift;\r\n\r\n\t\toutput += base64[((dec >> 18) & 63)]\r\n\t\t\t+ base64[((dec >> 12) & 63)];\r\n\t\tif (leftShift < 12) output += base64[((dec >> 6) & 63)];\r\n\t\tif (leftShift < 8) output += base64[(dec & 63)];\r\n\t}\r\n\r\n\twhile (padding && output.length % 4 !== 0) {\r\n\t\toutput += '=';\r\n\t}\r\n\r\n\treturn (output);\r\n}\r\n\r\nfunction convertBase16ToBase32(input: string, base32: string, padding: boolean = true) {\r\n\tconst totalChunksLength = Math.floor(input.length / 10) * 10;\r\n\tlet output = \"\";\r\n\tlet i = 0;\r\n\r\n\twhile (i < totalChunksLength) {\r\n\t\tconst decHigh = parseInt(input.slice(i, i + 5), 16);\r\n\t\tconst decLow = parseInt(input.slice(i + 5, i + 10), 16);\r\n\r\n\t\toutput += base32[((decHigh >> 15) & 31)]\r\n\t\t\t+ base32[((decHigh >> 10) & 31)]\r\n\t\t\t+ base32[((decHigh >> 5) & 31)]\r\n\t\t\t+ base32[(decHigh & 31)]\r\n\t\t\t+ base32[((decLow >> 15) & 31)]\r\n\t\t\t+ base32[((decLow >> 10) & 31)]\r\n\t\t\t+ base32[((decLow >> 5) & 31)]\r\n\t\t\t+ base32[(decLow & 31)];\r\n\t\ti += 10;\r\n\t}\r\n\r\n\tif (i < input.length) {\r\n\t\tconst restChunk = input.slice(i, i + 5);\r\n\t\t// 4469248 = 00100 01000 01100 10000 00000 = 4 8 12 16 0\r\n\t\tconst leftShift = (4469248 >> (restChunk.length * 5)) & 31;\r\n\t\tconst decHigh = parseInt(restChunk, 16) << leftShift;\r\n\r\n\t\toutput += base32[((decHigh >> 15) & 31)]\r\n\t\t\t+ base32[((decHigh >> 10) & 31)];\r\n\t\tif (leftShift < 12) {\r\n\t\t\toutput += base32[((decHigh >> 5) & 31)]\r\n\t\t\t\t+ base32[(decHigh & 31)];\r\n\t\t}\r\n\t}\r\n\r\n\tif (i + 5 < input.length) {\r\n\t\tconst restChunk = input.slice(i + 5, i + 10);\r\n\t\t// 4469248 = 00100 01000 01100 10000 00000 = 4 8 12 16 0\r\n\t\tconst leftShift = (4469248 >> (restChunk.length * 5)) & 31;\r\n\t\tconst decLow = parseInt(restChunk, 16) << leftShift;\r\n\r\n\t\toutput += base32[((decLow >> 15) & 31)]\r\n\t\t\t+ base32[((decLow >> 10) & 31)];\r\n\t\tif (leftShift < 12) output += base32[((decLow >> 5) & 31)];\r\n\t\tif (leftShift < 8) output += base32[(decLow & 31)];\r\n\t}\r\n\r\n\twhile (padding && output.length % 8 !== 0) {\r\n\t\toutput += '=';\r\n\t}\r\n\r\n\treturn (output);\r\n}\r\n\r\nfunction convertBase64ToBase16(input: string, base64: string) {\r\n\tif (input.endsWith(\"=\")) input = input.slice(0, input.indexOf(\"=\"));\r\n\tconst totalChunksLength = Math.floor(input.length / 4) * 4;\r\n\tconst base16 = \"0123456789ABCDEF\";\r\n\tlet output = \"\";\r\n\tlet i = 0;\r\n\r\n\twhile (i < totalChunksLength) {\r\n\t\tconst dec = (base64.indexOf(input[i]) << 18)\r\n\t\t\t| (base64.indexOf(input[i + 1]) << 12)\r\n\t\t\t| (base64.indexOf(input[i + 2]) << 6)\r\n\t\t\t| base64.indexOf(input[i + 3]);\r\n\r\n\t\toutput += base16[((dec >> 20) & 15)]\r\n\t\t\t+ base16[((dec >> 16) & 15)]\r\n\t\t\t+ base16[((dec >> 12) & 15)]\r\n\t\t\t+ base16[((dec >> 8) & 15)]\r\n\t\t\t+ base16[((dec >> 4) & 15)]\r\n\t\t\t+ base16[(dec & 15)];\r\n\t\ti += 4;\r\n\t}\r\n\r\n\tif (i < input.length) {\r\n\t\tconst rest = input.slice(i);\r\n\t\tconst restLength = rest.length;\r\n\t\tconst dec = ((base64.indexOf(rest[0]) << 18)\r\n\t\t\t| (rest[1] ? base64.indexOf(rest[1]) << 12 : 0)\r\n\t\t\t| (rest[2] ? base64.indexOf(rest[2]) << 6 : 0)\r\n\t\t\t| (rest[3] ? base64.indexOf(rest[3]) : 0));\r\n\r\n\t\toutput += base16[((dec >> 20) & 15)]\r\n\t\t\t+ base16[((dec >> 16) & 15)];\r\n\t\tif (restLength > 2) {\r\n\t\t\toutput += base16[((dec >> 12) & 15)]\r\n\t\t\t\t+ base16[((dec >> 8) & 15)];\r\n\t\t}\r\n\t\tif (restLength > 3) {\r\n\t\t\toutput += base16[((dec >> 4) & 15)]\r\n\t\t\t\t+ base16[(dec & 15)];\r\n\t\t}\r\n\t}\r\n\r\n\treturn (output);\r\n}\r\n\r\nfunction convertBase32ToBase16(input: string, base32: string) {\r\n\tif (input.endsWith(\"=\")) input = input.slice(0, input.indexOf(\"=\"));\r\n\tconst totalChunksLength = Math.floor(input.length / 8) * 8;\r\n\tconst base16 = \"0123456789ABCDEF\";\r\n\tlet output = \"\";\r\n\tlet i = 0;\r\n\r\n\twhile (i < totalChunksLength) {\r\n\t\tconst dec = (base32.indexOf(input[i]) << 15)\r\n\t\t\t| (base32.indexOf(input[i + 1]) << 10)\r\n\t\t\t| (base32.indexOf(input[i + 2]) << 5)\r\n\t\t\t| base32.indexOf(input[i + 3]);\r\n\r\n\t\toutput += base16[((dec >> 16) & 15)]\r\n\t\t\t+ base16[((dec >> 12) & 15)]\r\n\t\t\t+ base16[((dec >> 8) & 15)]\r\n\t\t\t+ base16[((dec >> 4) & 15)]\r\n\t\t\t+ base16[(dec & 15)];\r\n\t\ti += 4;\r\n\t}\r\n\r\n\tif (i < input.length) {\r\n\t\tconst rest = input.slice(i);\r\n\t\tconst restLength = rest.length;\r\n\t\tconst dec = ((base32.indexOf(rest[0]) << 15)\r\n\t\t\t| (rest[1] ? base32.indexOf(rest[1]) << 10 : 0)\r\n\t\t\t| (rest[2] ? base32.indexOf(rest[2]) << 5 : 0)\r\n\t\t\t| (rest[3] ? base32.indexOf(rest[3]) : 0));\r\n\r\n\t\toutput += base16[((dec >> 16) & 15)]\r\n\t\t\t+ base16[((dec >> 12) & 15)];\r\n\t\tif (restLength > 1) {\r\n\t\t\toutput += base16[((dec >> 8) & 15)]\r\n\t\t\t\t+ base16[((dec >> 4) & 15)];\r\n\t\t}\r\n\t\tif (restLength > 3) {\r\n\t\t\toutput += base16[(dec & 15)]\r\n\t\t\tif (i + 5 >= input.length) {\r\n\t\t\t\toutput += base16[0];\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tif (i + 5 < input.length) {\r\n\t\tconst rest = input.slice(i + 5);\r\n\t\tconst restLength = rest.length;\r\n\t\tconst dec = ((base32.indexOf(rest[0]) << 15)\r\n\t\t\t| (rest[1] ? base32.indexOf(rest[1]) << 10 : 0)\r\n\t\t\t| (rest[2] ? base32.indexOf(rest[2]) << 5 : 0)\r\n\t\t\t| (rest[3] ? base32.indexOf(rest[3]) : 0));\r\n\r\n\t\toutput += base16[((dec >> 16) & 15)]\r\n\t\t\t+ base16[((dec >> 12) & 15)]\r\n\t\t\t+ base16[((dec >> 8) & 15)];\r\n\t\tif (restLength > 2) {\r\n\t\t\toutput += base16[((dec >> 4) & 15)]\r\n\t\t\t\t+ base16[(dec & 15)];\r\n\t\t}\r\n\t}\r\n\r\n\treturn (output);\r\n}\r\n\r\nexport function base16ToBase64(input: string, to: \"B64\" | \"B64URL\" = \"B64\", padding: boolean = true) {\r\n\tif (to === \"B64\") {\r\n\t\tconst base64 = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\r\n\t\treturn (convertBase16ToBase64(input, base64, padding));\r\n\t} else if (to === \"B64URL\") {\r\n\t\tconst base64Url = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_\";\r\n\t\treturn (convertBase16ToBase64(input, base64Url, padding));\r\n\t} else {\r\n\t\tthrow new Issue(\"Parameters\", \"The base64 type of the parameter 'to' is unknown.\");\r\n\t}\r\n}\r\n\r\nexport function base16ToBase32(input: string, to: \"B16\" | \"B16HEX\" = \"B16\", padding: boolean = true) {\r\n\tif (to === \"B16\") {\r\n\t\tconst base32 = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ234567';\r\n\treturn (convertBase16ToBase32(input, base32, padding));\r\n\t} else if (to === \"B16HEX\") {\r\n\t\tconst base32Hex = \"0123456789ABCDEFGHIJKLMNOPQRSTUV\";\r\n\t\treturn (convertBase16ToBase32(input, base32Hex, padding));\r\n\t} else {\r\n\t\tthrow new Issue(\"Parameters\", \"The base32 type of the parameter 'to' is unknown.\");\r\n\t}\r\n}\r\n\r\nexport function base64ToBase16(input: string, from: \"B64\" | \"B64URL\" = \"B64\") {\r\n\tif (from === \"B64\") {\r\n\t\tconst base64 = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\r\n\t\treturn (convertBase64ToBase16(input, base64));\r\n\t} else if (from === \"B64URL\") {\r\n\t\tconst base64Url = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_\";\r\n\t\treturn (convertBase64ToBase16(input, base64Url));\r\n\t} else {\r\n\t\tthrow new Issue(\"Parameters\", \"The base64 type of the parameter 'from' is unknown.\");\r\n\t}\r\n}\r\n\r\nexport function base32ToBase16(input: string, from: \"B16\" | \"B16HEX\" = \"B16\") {\r\n\tif (from === \"B16\") {\r\n\t\tconst base32 = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ234567';\r\n\t\treturn (convertBase32ToBase16(input, base32));\r\n\t} else if (from === \"B16HEX\") {\r\n\t\tconst base32Hex = \"0123456789ABCDEFGHIJKLMNOPQRSTUV\";\r\n\t\treturn (convertBase32ToBase16(input, base32Hex));\r\n\t} else {\r\n\t\tthrow new Issue(\"Parameters\", \"The base32 type of the parameter 'from' is unknown.\");\r\n\t}\r\n}","import type { PlainObject, PlainFunction, AsyncFunction } from \"../types\";\r\nimport { hasTag } from \"../../tools\";\r\n\r\n// OBJECT\r\nexport function isObject(x: unknown): x is object {\r\n\treturn (typeof x === \"object\");\r\n}\r\n\r\n/**\r\n * A plain object is considered as follows:\r\n * - It must be an object.\r\n * - It must have a prototype of `Object.prototype` or `null`.\r\n*/\r\nexport function isPlainObject(x: unknown): x is PlainObject {\r\n\tif (x === null || typeof x !== \"object\") return (false);\r\n\tconst prototype = Object.getPrototypeOf(x);\r\n\tif (prototype !== Object.prototype && prototype !== null) {\r\n\t\treturn (false);\r\n\t}\r\n    return (true);\r\n}\r\n\r\n// ARRAY\r\nexport function isArray(x: unknown): x is unknown[] {\r\n\treturn (Array.isArray(x));\r\n}\r\n\r\n// FUNCTION\r\nexport function isFunction(x: unknown): x is Function {\r\n\treturn (typeof x === \"function\");\r\n}\r\n\r\nexport function isBasicFunction(x: unknown): x is PlainFunction {\r\n\treturn (hasTag(x, \"Function\"));\r\n}\r\n\r\nexport function isAsyncFunction(x: unknown): x is AsyncFunction {\r\n\treturn (hasTag(x, \"AsyncFunction\"));\r\n}\r\n\r\nexport function isGeneratorFunction(x: unknown): x is GeneratorFunction {\r\n\treturn (hasTag(x, \"GeneratorFunction\"));\r\n}\r\n\r\nexport function isAsyncGeneratorFunction(x: unknown): x is AsyncGeneratorFunction {\r\n\treturn (hasTag(x, \"AsyncGeneratorFunction\"));\r\n}","import * as stringTests from './string';\r\nimport * as objectTests from './object';\r\n\r\nexport type * from \"./types\";\r\nexport * from './string';\r\nexport * from './object';\r\n\r\nexport const testers = {\r\n\tobject: objectTests,\r\n\tstring: stringTests\r\n};","import type { SetableCriteria } from \"../formats\";\r\nimport { isArray, isPlainObject } from \"../../testers\";\r\nimport { hasNodeSymbol } from \"./mounter\";\r\n\r\ninterface CloningTask {\r\n\tsrc: unknown;\r\n\tcpy: any;\r\n}\r\n\r\n/**\r\n * Clones the object starting from the root and stops traversing a branch\r\n * when a mounted criteria node is encountered. In such cases, the mounted\r\n * object encountered see its internal properties copied to a new reference\r\n * so that the junction is a unique reference in the tree.\r\n * \r\n * @param src Source object of the clone\r\n * @returns Clone of the source object\r\n */\r\nexport function cloner<T extends SetableCriteria>(\r\n\trootSrc: T\r\n): T {\r\n\tlet rootCpy = {};\r\n\tlet stack: CloningTask[] = [{ \r\n\t\tsrc: rootSrc, \r\n\t\tcpy: rootCpy\r\n\t}];\r\n\r\n\twhile (stack.length > 0) {\r\n\t\tlet { src, cpy } = stack.pop()!;\r\n\r\n\t\tif (isPlainObject(src)) {\r\n\t\t\tif (hasNodeSymbol(src)) {\r\n\t\t\t\tcpy = { ...src };\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tconst keys = Reflect.ownKeys(src);\r\n\t\t\t\tfor (let i = 0; i < keys.length; i++) {\r\n\t\t\t\t\tconst key = keys[i];\r\n\t\r\n\t\t\t\t\tif (isPlainObject(src[key])) {\r\n\t\t\t\t\t\tif (hasNodeSymbol(src[key])) {\r\n\t\t\t\t\t\t\tcpy[key] = { ...src[key] };\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tcpy[key] = {};\r\n\t\r\n\t\t\t\t\t\t\tstack.push({\r\n\t\t\t\t\t\t\t\tsrc: src[key],\r\n\t\t\t\t\t\t\t\tcpy: cpy[key]\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else if (isArray(src[key])) {\r\n\t\t\t\t\t\tcpy[key] = [];\r\n\t\r\n\t\t\t\t\t\tstack.push({\r\n\t\t\t\t\t\t\tsrc: src[key],\r\n\t\t\t\t\t\t\tcpy: cpy[key]\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tcpy[key] = src[key];\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\telse if (isArray(src)) {\r\n\t\t\tfor (let i = 0; i < src.length; i++) {\r\n\t\t\t\tconst index = i;\r\n\t\r\n\t\t\t\tif (isPlainObject(src[index])) {\r\n\t\t\t\t\tif (hasNodeSymbol(src[index])) {\r\n\t\t\t\t\t\tcpy[i] = { ...src[index] };\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tcpy[i] = {};\r\n\t\r\n\t\t\t\t\t\tstack.push({\r\n\t\t\t\t\t\t\tsrc: src[index],\r\n\t\t\t\t\t\t\tcpy: cpy[index]\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (isArray(src[index])) {\r\n\t\t\t\t\tcpy[index] = [];\r\n\r\n\t\t\t\t\tstack.push({\r\n\t\t\t\t\t\tsrc: src[index],\r\n\t\t\t\t\t\tcpy: cpy[index]\r\n\t\t\t\t\t});\r\n\t\t\t\t} else {\r\n\t\t\t\t\tcpy[index] = src[index];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tcpy = src;\r\n\t\t}\r\n\t}\r\n\r\n\treturn (rootCpy as T);\r\n};","import type { BooleanSetableCriteria } from \"./types\";\r\nimport type { Format } from \"../types\";\r\n\r\nexport const BooleanFormat: Format<BooleanSetableCriteria> = {\r\n\ttype: \"boolean\",\r\n\tdefaultCriteria: {},\r\n\tcheck(chunk, criteria, data) {\r\n\t\tif (typeof data !== \"boolean\") {\r\n\t\t\treturn (\"TYPE_BOOLEAN_REQUIRED\");\r\n\t\t}\r\n\r\n\t\treturn (null);\r\n\t},\r\n}\r\n","import type { SymbolSetableCriteria } from \"./types\";\r\nimport type { Format } from \"../types\";\r\n\r\nexport const SymbolFormat: Format<SymbolSetableCriteria> = {\r\n\ttype: \"symbol\",\r\n\tdefaultCriteria: {},\r\n\tcheck(chunk, criteria, data) {\r\n\t\tif (typeof data !== \"symbol\") {\r\n\t\t\treturn \"TYPE_SYMBOL_REQUIRED\";\r\n\t\t}\r\n\t\telse if (criteria.symbol && data !== criteria.symbol) {\r\n\t\t\treturn \"DATA_SYMBOL_MISMATCH\";\r\n\t\t}\r\n\r\n\t\treturn (null);\r\n\t}\r\n}\r\n","import type { NumberSetableCriteria } from \"./types\";\r\nimport type { Format } from \"../types\";\r\nimport { isArray, isPlainObject } from \"../../../testers\";\r\n\r\nexport const NumberFormat: Format<NumberSetableCriteria> = {\r\n\ttype: \"number\",\r\n\tdefaultCriteria: {\r\n\t\tempty: true\r\n\t},\r\n\tcheck(chunk, criteria, value) {\r\n\t\tif (typeof value !== \"number\") {\r\n\t\t\treturn (\"TYPE_NUMBER_REQUIRED\");\r\n\t\t}\r\n\t\telse if (value === 0) {\r\n\t\t\treturn (criteria.empty ? null : \"DATA_EMPTY\");\r\n\t\t}\r\n\t\telse if (criteria.min != null && value < criteria.min) {\r\n\t\t\treturn (\"DATA_INFERIOR_MIN\");\r\n\t\t}\r\n\t\telse if (criteria.max != null && value > criteria.max) {\r\n\t\t\treturn (\"DATA_SUPERIOR_MAX\");\r\n\t\t}\r\n\t\telse if (criteria.enum != null) {\r\n\t\t\tif (isPlainObject(criteria.enum) && !Object.values(criteria.enum).includes(value)) {\r\n\t\t\t\treturn (\"DATA_ENUM_MISMATCH\");\r\n\t\t\t} else if (isArray(criteria.enum) && !criteria.enum.includes(value)) {\r\n\t\t\t\treturn (\"DATA_ENUM_MISMATCH\");\r\n\t\t\t}\r\n\t\t}\r\n\t\telse if (criteria.custom && !criteria.custom(value)) {\r\n\t\t\treturn (\"TEST_CUSTOM_FAILED\");\r\n\t\t}\r\n\r\n\t\treturn (null);\r\n\t}\r\n}","import type { StringSetableCriteria, SetableTests } from \"./types\";\r\nimport type { Format } from \"../types\";\r\nimport { isArray, testers } from \"../../../testers\";\r\n\r\nexport const StringFormat: Format<StringSetableCriteria> = {\r\n\ttype: \"string\",\r\n\tdefaultCriteria: {\r\n\t\tempty: true\r\n\t},\r\n\tcheck(chunk, criteria, data) {\r\n\t\tif (typeof data !== \"string\") {\r\n\t\t\treturn (\"TYPE_STRING_REQUIRED\");\r\n\t\t}\r\n\r\n\t\tconst dataLength = data.length;\r\n\r\n\t\tif (!dataLength) {\r\n\t\t\treturn (criteria.empty ? null : \"DATA_EMPTY\");\r\n\t\t}\r\n\t\telse if (criteria.min != null && dataLength < criteria.min) {\r\n\t\t\treturn (\"DATA_LENGTH_INFERIOR_MIN\");\r\n\t\t}\r\n\t\telse if (criteria.max != null && dataLength > criteria.max) {\r\n\t\t\treturn (\"DATA_LENGTH_SUPERIOR_MAX\");\r\n\t\t}\r\n\t\telse if (criteria.enum != null) {\r\n\t\t\tif (isArray(criteria.enum) && !criteria.enum.includes(data)) {\r\n\t\t\t\treturn (\"DATA_ENUM_MISMATCH\");\r\n\t\t\t} else if (!Object.values(criteria.enum).includes(data)) {\r\n\t\t\t\treturn (\"DATA_ENUM_MISMATCH\");\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (criteria.tests) {\r\n\t\t\tfor (const key of Object.keys(criteria.tests) as (keyof SetableTests)[]) {\r\n\t\t\t\tif (!(testers.string[key](data, criteria.tests[key] as any))) {\r\n\t\t\t\t\treturn (\"TEST_STRING_FAILED\");\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (criteria.regex != null && !criteria.regex.test(data)) {\r\n\t\t\treturn (\"TEST_REGEX_FAILED\");\r\n\t\t}\r\n\t\telse if (criteria.custom && !criteria.custom(data)) {\r\n\t\t\treturn (\"TEST_CUSTOM_FAILED\");\r\n\t\t}\r\n\r\n\t\treturn (null);\r\n\t}\r\n}","import type { SimpleSetableCriteria, SimpleTypes } from \"./types\";\r\nimport type { Format } from \"../types\";\r\n\r\nexport interface CustomProperties {\r\n\tbitflags: Record<SimpleTypes, number>\r\n}\r\n\r\nexport const SimpleFormat: Format<SimpleSetableCriteria, CustomProperties> = {\r\n\ttype: \"simple\",\r\n\tdefaultCriteria: {},\r\n\tbitflags: {\r\n\t\tundefined: 1 << 0,\r\n\t\tnullish:   1 << 1,\r\n\t\tnull:      1 << 2,\r\n\t\tunknown:   1 << 3,\r\n\t\tany:       1 << 4\r\n\t},\r\n\tmount(chunk, criteria) {\r\n\t\tObject.assign(criteria, {\r\n\t\t\tbitcode: this.bitflags[criteria.simple]\r\n\t\t});\r\n\t},\r\n\tcheck(chunk, criteria, value) {\r\n\t\tconst { bitflags } = this, { bitcode } = criteria;\r\n\r\n\t\tif (bitcode & (bitflags.any | bitflags.unknown)) {\r\n\t\t\treturn (null);\r\n\t\t}\r\n\r\n\t\tif (bitcode & bitflags.nullish && value != null) {\r\n\t\t\treturn (\"TYPE_NULLISH_REQUIRED\");\r\n\t\t}\r\n\t\telse if (bitcode & bitflags.null && value !== null) {\r\n\t\t\treturn (\"TYPE_NULL_REQUIRED\");\r\n\t\t}\r\n\t\telse if ((bitcode & bitflags.undefined) && value !== undefined) {\r\n\t\t\treturn (\"TYPE_UNDEFINED_REQUIRED\");\r\n\t\t}\r\n\r\n\t\treturn (null);\r\n\t}\r\n}","import type { RecordSetableCriteria } from \"./types\";\r\nimport type { Format } from \"../types\";\r\nimport { isPlainObject } from \"../../../testers\";\r\n\r\nexport const RecordFormat: Format<RecordSetableCriteria> = {\r\n\ttype: \"record\",\r\n\tdefaultCriteria: {\r\n\t\tempty: true\r\n\t},\r\n\tmount(chunk, criteria) {\r\n\t\tchunk.push({\r\n\t\t\tnode: criteria.key,\r\n\t\t\tpartPaths: {\r\n\t\t\t\texplicit: [\"key\"],\r\n\t\t\t\timplicit: []\r\n\t\t\t}\r\n\t\t});\r\n\t\tchunk.push({\r\n\t\t\tnode: criteria.value,\r\n\t\t\tpartPaths: {\r\n\t\t\t\texplicit: [\"value\"],\r\n\t\t\t\timplicit: [\"%\", \"string\", \"symbol\"]\r\n\t\t\t}\r\n\t\t});\r\n\t},\r\n\tcheck(chunk, criteria, data) {\r\n\t\tif (!isPlainObject(data)) {\r\n\t\t\treturn (\"TYPE_PLAIN_OBJECT_REQUIRED\");\r\n\t\t}\r\n\r\n\t\tconst keys = Reflect.ownKeys(data);\r\n\t\tconst keysLength = keys.length;\r\n\r\n\t\tif (keysLength === 0) {\r\n\t\t\treturn (criteria.empty ? null : \"DATA_EMPTY_DISALLOWED\");\r\n\t\t}\r\n\t\telse if (criteria.min != null && keysLength < criteria.min) {\r\n\t\t\treturn (\"DATA_SIZE_INFERIOR_MIN\");\r\n\t\t}\r\n\t\telse if (criteria.max != null && keysLength > criteria.max) {\r\n\t\t\treturn (\"DATA_SIZE_SUPERIOR_MAX\");\r\n\t\t}\r\n\r\n\t\tfor (let i = 0; i < keysLength; i++) {\r\n\t\t\tconst key = keys[i];\r\n\r\n\t\t\tchunk.push({\r\n\t\t\t\tdata: key,\r\n\t\t\t\tnode: criteria.key\r\n\t\t\t}, {\r\n\t\t\t\tdata: data[key],\r\n\t\t\t\tnode: criteria.value\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\treturn (null);\r\n\t}\r\n}","import type { StructSetableCriteria, SetableStruct } from \"./types\";\r\nimport type { Format } from \"../types\";\r\nimport { isPlainObject } from \"../../../testers\";\r\n\r\nfunction isShorthandStruct(obj: {}): obj is SetableStruct {\r\n\treturn (isPlainObject(obj) && typeof obj?.type !== \"string\");\r\n}\r\n\r\nexport const StructFormat: Format<StructSetableCriteria> = {\r\n\ttype: \"struct\",\r\n\tdefaultCriteria: {},\r\n\tmount(chunk, criteria) {\r\n\t\tconst optionalKeys = criteria.optional;\r\n\t\tconst acceptedKeys = Reflect.ownKeys(criteria.struct);\r\n\t\tconst requiredKeys = acceptedKeys.filter(key => !optionalKeys?.includes(key));\r\n\r\n\t\tObject.assign(criteria, {\r\n\t\t\tacceptedKeys: new Set(acceptedKeys),\r\n\t\t\trequiredKeys: new Set(requiredKeys)\r\n\t\t});\r\n\r\n\t\tfor (const key of acceptedKeys) {\r\n\t\t\tlet value = criteria.struct[key];\r\n\r\n\t\t\tif (isShorthandStruct(value)) {\r\n\t\t\t\tvalue = {\r\n\t\t\t\t\ttype: \"struct\",\r\n\t\t\t\t\tstruct: value\r\n\t\t\t\t}\r\n\t\t\t\tcriteria.struct[key] = value;\r\n\t\t\t}\r\n\r\n\t\t\tchunk.push({\r\n\t\t\t\tnode: value,\r\n\t\t\t\tpartPaths: {\r\n\t\t\t\t\texplicit: [\"struct\", key],\r\n\t\t\t\t\timplicit: [\"&\", key]\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t},\r\n\tcheck(chunk, criteria, data) {\r\n\t\tif (!isPlainObject(data)) {\r\n\t\t\treturn (\"TYPE_PLAIN_OBJECT_REQUIRED\");\r\n\t\t}\r\n\r\n\t\tconst { acceptedKeys, requiredKeys } = criteria;\r\n\t\tconst keys = Reflect.ownKeys(data);\r\n\r\n\t\tif (keys.length < requiredKeys.size) {\r\n\t\t\treturn (\"DATA_KEYS_MISSING\");\r\n\t\t}\r\n\r\n\t\tlet requiredLeft = requiredKeys.size;\r\n\t\tfor (let i = keys.length - 1; i >= 0; i--) {\r\n\t\t\tconst key = keys[i];\r\n\r\n\t\t\tif (!acceptedKeys.has(key)) {\r\n\t\t\t\treturn (\"DATA_KEYS_INVALID\");\r\n\t\t\t}\r\n\r\n\t\t\tif (requiredKeys.has(key)) {\r\n\t\t\t\trequiredLeft--;\r\n\t\t\t} else if (requiredLeft > i) {\r\n\t\t\t\treturn (\"DATA_KEYS_MISSING\");\r\n\t\t\t}\r\n\r\n\t\t\tchunk.push({\r\n\t\t\t\tdata: data[key],\r\n\t\t\t\tnode: criteria.struct[key]\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\treturn (null);\r\n\t}\r\n}","import type { ArraySetableCriteria } from \"./types\";\r\nimport type { Format } from \"../types\";\r\nimport { isArray } from \"../../../testers\";\r\n\r\nexport const ArrayFormat: Format<ArraySetableCriteria> = {\r\n\ttype: \"array\",\r\n\tdefaultCriteria: {\r\n\t\tempty: true\r\n\t},\r\n\tmount(chunk, criteria) {\r\n\t\tchunk.push({\r\n\t\t\tnode: criteria.item,\r\n\t\t\tpartPaths: {\r\n\t\t\t\texplicit: [\"item\"],\r\n\t\t\t\timplicit: [\"%\", \"number\"],\r\n\t\t\t}\r\n\t\t});\r\n\t},\r\n\tcheck(chunk, criteria, data) {\r\n\t\tif (!isArray(data)) {\r\n\t\t\treturn (\"TYPE_ARRAY_REQUIRED\");\r\n\t\t}\r\n\r\n\t\tconst dataLength = data.length;\r\n\t\t\r\n\t\tif (!dataLength) {\r\n\t\t\treturn (criteria.empty ? null : \"DATA_EMPTY_DISALLOWED\");\r\n\t\t}\r\n\t\telse if (criteria.min != null && dataLength < criteria.min) {\r\n\t\t\treturn (\"DATA_LENGTH_INFERIOR_MIN\");\r\n\t\t}\r\n\t\telse if (criteria.max != null && dataLength > criteria.max) {\r\n\t\t\treturn (\"DATA_LENGTH_SUPERIOR_MAX\");\r\n\t\t}\r\n\r\n\t\tfor (let i = 0; i < dataLength; i++) {\r\n\t\t\tchunk.push({\r\n\t\t\t\tdata: data[i],\r\n\t\t\t\tnode: criteria.item\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\treturn (null);\r\n\t}\r\n}","import type { SetableTuple, TupleSetableCriteria, } from \"./types\";\r\nimport type { Format } from \"../types\";\r\nimport { isArray } from \"../../../testers\";\r\n\r\nfunction isShorthandTuple(obj: {}): obj is SetableTuple {\r\n\treturn (isArray(obj));\r\n}\r\n\r\nexport const TupleFormat: Format<TupleSetableCriteria> = {\r\n\ttype: \"tuple\",\r\n\tdefaultCriteria: {\r\n\t\tempty: false\r\n\t},\r\n\tmount(chunk, criteria) {\r\n\t\tfor (let i = 0; i < criteria.tuple.length; i++) {\r\n\t\t\tlet item = criteria.tuple[i];\r\n\r\n\t\t\tif (isShorthandTuple(item)) {\r\n\t\t\t\titem = {\r\n\t\t\t\t\ttype: \"tuple\",\r\n\t\t\t\t\ttuple: item\r\n\t\t\t\t}\r\n\t\t\t\tcriteria.tuple[i] = item;\r\n\t\t\t}\r\n\r\n\t\t\tchunk.push({\r\n\t\t\t\tnode: item,\r\n\t\t\t\tpartPaths: {\r\n\t\t\t\t\texplicit: [\"tuple\", i],\r\n\t\t\t\t\timplicit: [\"&\", i]\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t},\r\n\tcheck(chunk, criteria, data) {\r\n\t\tif (!isArray(data)) {\r\n\t\t\treturn (\"TYPE_ARRAY_REQUIRED\");\r\n\t\t}\r\n\r\n\t\tconst dataLength = data.length;\r\n\r\n\t\tif (dataLength < criteria.tuple.length) {\r\n\t\t\treturn (\"DATA_LENGTH_INFERIOR_MIN\");\r\n\t\t}\r\n\t\telse if (dataLength > criteria.tuple.length) {\r\n\t\t\treturn (\"DATA_LENGTH_SUPERIOR_MAX\");\r\n\t\t}\r\n\r\n\t\tfor (let i = 0; i < dataLength; i++) {\r\n\t\t\tchunk.push({\r\n\t\t\t\tdata: data[i],\r\n\t\t\t\tnode: criteria.tuple[i]\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\treturn (null);\r\n\t}\r\n}","import type { CheckingChunkTask } from \"../../services\";\r\nimport type { UnionSetableCriteria } from \"./types\";\r\nimport type { Format } from \"../types\";\r\n\r\nexport const UnionFormat: Format<UnionSetableCriteria> = {\r\n\ttype: \"union\",\r\n\tdefaultCriteria: {},\r\n\tmount(chunk, criteria) {\r\n\t\tconst unionLength = criteria.union.length;\r\n\r\n\t\tfor (let i = 0; i < unionLength; i++) {\r\n\t\t\tchunk.push({\r\n\t\t\t\tnode: criteria.union[i],\r\n\t\t\t\tpartPaths: {\r\n\t\t\t\t\texplicit: [\"union\", i],\r\n\t\t\t\t\timplicit: []\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t},\r\n\tcheck(chunk, criteria, data) {\r\n\t\tconst unionLength = criteria.union.length;\r\n\r\n\t\tconst total = {\r\n\t\t\thooked: unionLength,\r\n\t\t\trejected: 0\r\n\t\t};\r\n\r\n\t\tconst hooks: CheckingChunkTask['hooks'] = {\r\n\t\t\tonAccept() {\r\n\t\t\t\treturn ({\r\n\t\t\t\t\taction: \"IGNORE\",\r\n\t\t\t\t\ttarget: \"CHUNK\"\r\n\t\t\t\t});\r\n\t\t\t},\r\n\t\t\tonReject() {\r\n\t\t\t\ttotal.rejected++;\r\n\t\t\t\tif (total.rejected === total.hooked) {\r\n\t\t\t\t\treturn ({\r\n\t\t\t\t\t\taction: \"REJECT\",\r\n\t\t\t\t\t\tcode: \"DATA_UNION_MISMATCH\"\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\treturn ({\r\n\t\t\t\t\taction: \"IGNORE\",\r\n\t\t\t\t\ttarget: \"BRANCH\"\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tfor (let i = 0; i < unionLength; i++) {\r\n\t\t\tchunk.push({\r\n\t\t\t\thooks,\r\n\t\t\t\tdata,\r\n\t\t\t\tnode: criteria.union[i]\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\treturn (null);\r\n\t}\r\n}\r\n","import type { Format, SetableCriteria } from \"./types\";\r\nimport { BooleanFormat } from \"./boolean/format\";\r\nimport { SymbolFormat } from \"./symbol/format\";\r\nimport { NumberFormat } from \"./number/format\";\r\nimport { StringFormat } from \"./string/format\";\r\nimport { SimpleFormat } from \"./simple/format\";\r\nimport { RecordFormat } from \"./record/format\";\r\nimport { StructFormat } from \"./struct/format\";\r\nimport { ArrayFormat } from \"./array/format\";\r\nimport { TupleFormat } from \"./tuple/format\";\r\nimport { UnionFormat } from \"./union/format\";\r\n\r\nexport const formatNatives = [\r\n\tBooleanFormat,\r\n\tSymbolFormat,\r\n\tNumberFormat,\r\n\tStringFormat,\r\n\tSimpleFormat,\r\n\tRecordFormat,\r\n\tStructFormat,\r\n\tArrayFormat,\r\n\tTupleFormat,\r\n\tUnionFormat\r\n];","import type { SetableCriteria, MountedCriteria, GuardedCriteria, FormatNativeNames } from \"./formats\";\r\nimport { EventsManager, FormatsManager } from \"./managers\";\r\nimport { cloner, mounter, checker } from \"./services\";\r\nimport { formatNatives } from \"./formats\";\r\nimport { Issue, memory } from \"../utils\";\r\n\r\n/**\r\n * The `Schema` class is used to define and validate data structures,\r\n * ensuring they conform to specified criteria.\r\n */\r\nexport class Schema<const T extends SetableCriteria = SetableCriteria<FormatNativeNames>> {\r\n\tprivate _criteria: MountedCriteria<T> | undefined;\r\n\tprotected managers = {\r\n\t\tformats: new FormatsManager(),\r\n\t\tevents: new EventsManager()\r\n\t}\r\n\r\n\tprotected initiate(definedCriteria: T) {\r\n\t\tthis.managers.formats.add(formatNatives);\r\n\t\tconst clonedCriteria = cloner(definedCriteria);\r\n\t\tthis._criteria = mounter(this.managers, clonedCriteria);\r\n\t}\r\n\r\n\tconstructor(criteria: T) {\r\n\t\t// Deferred initiation of criteria if not called directly,\r\n\t\t// as plugins (or custom extensions) may set up specific\r\n\t\t// rules and actions for the preparation of the criteria.\r\n\t\tif (new.target === Schema) {\r\n\t\t\tthis.initiate(criteria);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Properties representing the root of the mounted criteria,\r\n\t * which can be used in other schemas.\r\n\t */\r\n\tget criteria(): MountedCriteria<T> {\r\n\t\tif (!this._criteria) {\r\n\t\t\tthrow new Issue(\"Schema\", \"Criteria are not initialized.\");\r\n\t\t}\r\n\t\treturn (this._criteria);\r\n\t}\r\n\r\n\t/**\r\n\t * Validates the provided data against the schema.\r\n\t * \r\n\t * @param data - The data to be validated.\r\n\t * \r\n\t * @returns `true` if the value is **valid**, otherwise `false`.  \r\n\t * This function acts as a **type guard**, ensuring that\r\n\t * the validated data conforms to `GuardedCriteria<T>`.\r\n\t */\r\n\tvalidate(data: unknown): data is GuardedCriteria<T> {\r\n\t\tconst reject = checker(this.managers, this.criteria, data);\r\n\r\n\t\treturn (!reject);\r\n\t}\r\n\r\n\t/**\r\n\t * Evaluates the provided data against the schema.\r\n\t *\r\n\t * @param data - The data to be evaluated.\r\n\t * \r\n\t * @returns An object containing:\r\n\t * - `{ reject: CheckingReject, value: null }` if the data is **rejected**.\r\n\t * - `{ reject: null, value: GuardedCriteria<T> }` if the data is **accepted**.\r\n\t */\r\n\tevaluate(data: unknown) {\r\n\t\tconst reject = checker(this.managers, this.criteria, data);\r\n\r\n\t\tif (reject) return ({ reject });\r\n\t\treturn ({ data: data as GuardedCriteria<T> });\r\n\t}\r\n}\r\n/*\r\nconst data = { foo: { foo: 0, bar: \"x\" }, bar: \"x\" }\r\nconst start = performance.now();\r\n\r\nfor (let i = 0; i < 10000; i++) {\r\n\r\n\tconst instance = new Schema({\r\n\t\ttype: \"union\",\r\n\t\tunion: [\r\n\t\t\t{\r\n\t\t\t\ttype: \"struct\",\r\n\t\t\t\tstruct: {\r\n\t\t\t\t\tfoo: { type: \"string\" },\r\n\t\t\t\t\tbar: {\r\n\t\t\t\t\t\ttype: \"union\",\r\n\t\t\t\t\t\tunion: [{\r\n\t\t\t\t\t\t\ttype: \"struct\",\r\n\t\t\t\t\t\t\tstruct: {\r\n\t\t\t\t\t\t\t\tfoo: { type: \"string\" },\r\n\t\t\t\t\t\t\t\tbar: { type: \"number\" }\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}, {\r\n\t\t\t\t\t\t\ttype: \"string\"\r\n\t\t\t\t\t\t}]\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\ttype: \"struct\",\r\n\t\t\t\tstruct: {\r\n\t\t\t\t\tfoo: {\r\n\t\t\t\t\t\ttype: \"union\",\r\n\t\t\t\t\t\tunion: [{\r\n\t\t\t\t\t\t\ttype: \"struct\",\r\n\t\t\t\t\t\t\tstruct: {\r\n\t\t\t\t\t\t\t\tfoo: { type: \"number\" },\r\n\t\t\t\t\t\t\t\tbar: { type: \"string\" }\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}, {\r\n\t\t\t\t\t\t\ttype: \"string\"\r\n\t\t\t\t\t\t}]\r\n\t\t\t\t\t},\r\n\t\t\t\t\tbar: { type: \"string\" }\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t]\r\n\t});\r\n\r\n\tinstance.validate(data);\r\n}\r\n\r\nconst end = performance.now();\r\nmemory();\r\nconsole.log(`Execution time: ${(end - start).toFixed(3)} ms`);*/","import type { SetableCriteria, FormatNativeNames } from \"./formats\";\r\nimport type { SchemaPlugin, SchemaInstance } from \"./types\";\r\nimport { Schema } from \"./schema\";\r\nimport { Issue } from \"../utils\";\r\n\r\ntype MixinPluginsCriteria<\r\n\tP1C, P1M extends SchemaPlugin,\r\n\tP2C, P2M extends SchemaPlugin,\r\n\tP3C, P3M extends SchemaPlugin\r\n> = (\r\n\t// CHECK THAT 'P1C' IS NOT UNDEFINED\r\n\tP1C extends SetableCriteria\r\n\t\t// CHECK THAT 'P2C' IS NOT UNDEFINED\r\n\t\t? P2C extends SetableCriteria\r\n\t\t\t// CHECK THAT 'P3C' IS NOT UNDEFINED\r\n\t\t\t? P3C extends SetableCriteria\r\n\t\t\t\t// EXTENDS NECESSARY BECAUSE 'P3C' MAY CONTAIN UNAVAILABLE CRITERIA\r\n\t\t\t\t? SetableCriteria extends P3C\r\n\t\t\t\t\t? P1C | P2C | P3C\r\n\t\t\t\t\t: SetableCriteria<(P1M['formats'] | P2M['formats'] | P3M['formats'])[number]['type'] | FormatNativeNames>\r\n\t\t\t\t// EXTENDS NECESSARY BECAUSE 'P2C' MAY CONTAIN UNAVAILABLE CRITERIA\r\n\t\t\t\t: SetableCriteria extends P2C\r\n\t\t\t\t\t? P1C | P2C\r\n\t\t\t\t\t: SetableCriteria<(P1M['formats'] | P2M['formats'])[number]['type'] | FormatNativeNames>\r\n\t\t\t// EXTENDS NECESSARY BECAUSE 'P1C' MAY CONTAIN UNAVAILABLE CRITERIA\r\n\t\t\t: SetableCriteria extends P1C\r\n\t\t\t\t? P1C\r\n\t\t\t\t: SetableCriteria<P1M['formats'][number]['type'] | FormatNativeNames>\r\n\t\t: never\r\n);\r\n\r\ntype MixinSchemaPlugin<\r\n\tP1C, P1M extends SchemaPlugin,\r\n\tP2C, P2M extends SchemaPlugin,\r\n\tP3C, P3M extends SchemaPlugin\r\n> =\r\n\t// CHECK THAT 'P1C' IS NOT UNDEFINED\r\n\tP1C extends SetableCriteria\r\n\t\t// CHECK THAT 'P2C' IS NOT UNDEFINED\r\n\t\t? P2C extends SetableCriteria\r\n\t\t\t// CHECK THAT 'P3C' IS NOT UNDEFINED\r\n\t\t\t? P3C extends SetableCriteria\r\n\t\t\t\t? SchemaInstance<P1C & P2C & P3C> & P1M & P2M & P3M\r\n\t\t\t\t: SchemaInstance<P1C & P2C> & P1M & P2M\r\n\t\t\t: SchemaInstance<P1C> & P1M\r\n\t\t: never;\r\n\r\ntype MixinPlugins<\r\n\tP1C, P1M extends SchemaPlugin,\r\n\tP2C, P2M extends SchemaPlugin,\r\n\tP3C, P3M extends SchemaPlugin\r\n> = new (...args: [MixinPluginsCriteria<P1C, P1M, P2C, P2M, P3C, P3M>]) => Omit<MixinSchemaPlugin<P1C, P1M, P2C, P2M, P3C, P3M>, \"formats\">;\r\n\r\nexport function SchemaFactory<\r\n\tP1C extends SetableCriteria, P1M extends SchemaPlugin,\r\n\tP2C = unknown, P2M extends SchemaPlugin = never,\r\n\tP3C = unknown, P3M extends SchemaPlugin = never\r\n>(\r\n\tplugin1: (...args: [P1C]) => P1M,\r\n\tplugin2?: (...args: [P2C]) => P2M,\r\n\tplugin3?: (...args: [P3C]) => P3M\r\n): MixinPlugins<P1C, P1M, P2C, P2M, P3C, P3M> {\r\n\treturn class <const T extends P1C & P2C & P3C> extends Schema<T> {\r\n\t\tconstructor(criteria: T) {\r\n\t\t\tsuper(criteria);\r\n\r\n\t\t\tconst assignPlugin = (plugin: SchemaPlugin) => {\r\n\t\t\t\tconst { formats, ...members } = plugin;\r\n\r\n\t\t\t\tfor (const key in members) {\r\n\t\t\t\t\tif (key in this) throw new Issue(\r\n\t\t\t\t\t\t\"Schema Factory\",\r\n\t\t\t\t\t\t`Conflictual keys: '${key}'`\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t\tObject.assign(this, members);\r\n\t\t\t\tthis.managers.formats.add(formats);\r\n\t\t\t};\r\n\r\n\t\t\tassignPlugin(plugin1.call(this, criteria));\r\n\t\t\tif (plugin2) assignPlugin(plugin2.call(this, criteria));\r\n\t\t\tif (plugin3) assignPlugin(plugin3.call(this, criteria));\r\n\r\n\t\t\tthis.initiate(criteria);\r\n\t\t}\r\n\t} as any;\r\n}\r\n\r\n/*\r\nimport type { SetableCriteriaTemplate, GuardedCriteria, Format } from \"./formats\";\r\nimport { SpecTypesTemplate, FlowTypesTemplate } from \"./formats/types\";\r\n\r\nexport interface MongoIdSetableCriteria extends SetableCriteriaTemplate<\"mongoId\"> {\r\n\tmongoParam: boolean;\r\n}\r\n\r\nexport interface MongoIdSpecTypes extends SpecTypesTemplate<\r\n\tMongoIdSetableCriteria,\r\n\t{}\r\n> {}\r\n\r\nexport interface MongoIdFlowTypes extends FlowTypesTemplate<\r\n\t{},\r\n\tstring\r\n> {}\r\n\r\ndeclare module './formats/types' {\r\n\tinterface FormatSpecTypes {\r\n\t\tmongoId: MongoIdSpecTypes;\r\n\t}\r\n\tinterface FormatFlowTypes<T extends SetableCriteria> {\r\n\t\tmongoId: T extends MongoIdSetableCriteria ? MongoIdFlowTypes : never;\r\n\t}\r\n}\r\n\r\nconst MongoIdFormat: Format<MongoIdSetableCriteria> = {\r\n\ttype: \"mongoId\",\r\n\tdefaultCriteria: {},\r\n\tmount(chunk, criteria) {\r\n\t\t\r\n\t},\r\n\tcheck(chunk, criteria, value) {\r\n\t\treturn (null);\r\n\t},\r\n}\r\n\r\nfunction plugin_A<T extends SetableCriteria>(this: SchemaInstance<T>, definedCriteria: T) {\r\n\treturn ({\r\n\t\tformats: [MongoIdFormat],\r\n\t\tmongo(data: GuardedCriteria<T>) {\r\n\t\t\t\r\n\t\t}\r\n\t} satisfies SchemaPlugin);\r\n}\r\n\r\nconst SchemaA = SchemaFactory(plugin_A);\r\n\r\nconst InstanceA = new SchemaA({ type: \"mongoId\", mongoParam: true });\r\n*/\r\n\r\n\r\n\r\n/*\r\nimport type { SetableCriteriaTemplate, GuardedCriteria, Format } from \"./formats\";\r\nimport { SpecTypesTemplate, FlowTypesTemplate } from \"./formats/types\";\r\n\r\nexport interface MongoIdSetableCriteria extends SetableCriteriaTemplate<\"mongoId\"> {\r\n\tmongoParam: boolean;\r\n}\r\n\r\nexport interface MongoIdSpecTypes extends SpecTypesTemplate<\r\n\tMongoIdSetableCriteria,\r\n\t{}\r\n> {}\r\n\r\nexport interface MongoIdFlowTypes extends FlowTypesTemplate<\r\n\t{},\r\n\tstring\r\n> {}\r\n\r\nexport interface MariaIdSetableCriteria extends SetableCriteriaTemplate<\"mariaId\"> {\r\n\tmariaParam: boolean;\r\n}\r\n\r\nexport interface MariaIdSpecTypes extends SpecTypesTemplate<\r\n\tMariaIdSetableCriteria,\r\n\t{}\r\n> {}\r\n\r\nexport interface MariaIdFlowTypes extends FlowTypesTemplate<\r\n\t{},\r\n\tnumber\r\n> {}\r\n\r\ndeclare module './formats/types' {\r\n\tinterface FormatSpecTypes {\r\n\t\tmongoId: MongoIdSpecTypes;\r\n\t\tmariaId: MariaIdSpecTypes;\r\n\t}\r\n\tinterface FormatFlowTypes<T extends SetableCriteria> {\r\n\t\tmongoId: T extends MongoIdSetableCriteria ? MongoIdFlowTypes : never;\r\n\t\tmariaId: T extends MariaIdSetableCriteria ? MariaIdFlowTypes : never;\r\n\t}\r\n}\r\n\r\nconst MongoIdFormat: Format<MongoIdSetableCriteria> = {\r\n\ttype: \"mongoId\",\r\n\tdefaultCriteria: {},\r\n\tmount(chunk, criteria) {\r\n\t\t\r\n\t},\r\n\tcheck(chunk, criteria, value) {\r\n\t\treturn (null);\r\n\t},\r\n}\r\n\r\nconst MariaIdFormat: Format<MariaIdSetableCriteria> = {\r\n\ttype: \"mariaId\",\r\n\tdefaultCriteria: {},\r\n\tmount(chunk, criteria) {\r\n\t\t\r\n\t},\r\n\tcheck(chunk, criteria, value) {\r\n\t\treturn (null);\r\n\t},\r\n}\r\n\r\nfunction plugin_A<T extends SetableCriteria>(definedCriteria: T) {\r\n\treturn ({\r\n\t\tformats: [MongoIdFormat],\r\n\t\tfoo(data: GuardedCriteria<T>) {\r\n\t\t\t\r\n\t\t},\r\n\t\tbar(data: GuardedCriteria<T>) {\r\n\t\t\r\n\t\t}\r\n\t} satisfies PluginRequirement);\r\n}\r\n\r\nfunction plugin_B<T extends SetableCriteria>(this: SchemaInstance<T>, criteria: T) {\r\n\tconst context = this;\r\n\r\n\treturn ({\r\n\t\tformats: [MariaIdFormat],\r\n\t\tplugin_B_1(data: GuardedCriteria<T>) {\r\n\t\t\treturn (context.criteria)\r\n\t\t}\r\n\t} satisfies PluginRequirement);\r\n}\r\n\r\nconst Tessss = SchemaComposer(plugin_A, plugin_B);//, plugin_B//, plugin_B\r\n\r\nconst t1cccccc = new Tessss({ type: \"mongoId\", mongoParam: true });\r\n\r\nconst t2cccccc = new Tessss({ type: \"struct\", struct: { test: { type: \"string\" }} });\r\n\r\nt2cccccc.plugin_B_1({ test: \"\"})*/"],"names":["quotedStringPattern"],"mappings":"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"}